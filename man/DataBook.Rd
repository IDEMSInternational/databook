% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_book.R
\docType{class}
\name{DataBook}
\alias{DataBook}
\title{DataBook Class}
\format{
An R6 class object.
}
\description{
An R6 class to manage a collection of data tables along with their metadata and other associated properties.
}
\note{
This method delegates the actual saving of the calculation to the respective
data frame's \code{save_calculation} method, ensuring modularity and separation of concerns.

If the two data frames are not directly linked, the function assumes the columns
in the first data frame map directly to columns with the same names in the second data frame.

This function ensures that the linking columns are valid by verifying
their existence in both data frames.
}
\section{Methods}{

\describe{
\item{\code{summary(data_name, columns_to_summarise, summaries, factors = c(), store_results = FALSE, drop = FALSE, return_output = FALSE, summary_name = NA, add_cols = c(), filter_names = c(), ...)}}{Perform and Return Summaries for a Data Object}
\item{\code{summary_table(data_name, columns_to_summarise = NULL, summaries, factors = c(), store_table = FALSE, store_results = FALSE, drop = TRUE, na.rm = FALSE, summary_name = NA, include_margins = FALSE, margins = "outer", return_output = FALSE, treat_columns_as_factor = FALSE, page_by = NULL, signif_fig = 2, na_display = "", na_level_display = "NA", weights = NULL, caption = NULL, result_names = NULL, percentage_type = "none", perc_total_columns = NULL, perc_total_factors = c(), perc_total_filter = NULL, perc_decimal = FALSE, include_counts_with_percentage = FALSE, margin_name = "(All)", additional_filter, ...)}}{Generate a Summary Table}
\item{\code{set_data(new_data, messages, check_names)}}{Sets the data for the DataSheet object.}
\item{\code{standardise_country_names(data_name, country_columns = c())}}{Standardizes country names in the specified data table.}
\item{\code{define_as_climatic(data_name, types, key_col_names, key_name)}}{Defines a data table as climatic data.}
\item{\code{define_corruption_outputs(data_name, output_columns = c())}}{Defines corruption output columns in the specified data table.}
\item{\code{define_red_flags(data_name, red_flags = c())}}{Defines red flag columns in the specified data table.}
\item{\code{define_as_procurement(data_name, primary_types = c(), calculated_types = c(), country_data_name, country_types, auto_generate = TRUE)}}{Defines a data table as procurement data.}
\item{\code{define_as_procurement_country_level_data(data_name, contract_level_data_name, types = c(), auto_generate = TRUE)}}{Defines a data table as procurement country-level data.}
\item{\code{get_CRI_component_column_names(data_name)}}{Gets the names of CRI component columns in the specified data table.}
\item{\code{get_red_flag_column_names(data_name)}}{Gets the names of red flag columns in the specified data table.}
\item{\code{get_CRI_column_names(data_name)}}{Gets the names of CRI columns in the specified data table.}
\item{\code{get_corruption_column_name(data_name, type)}}{Gets the name of the corruption column in the specified data table.}
\item{\code{import_data(data_tables = list(), data_tables_variables_metadata = rep(list(data.frame()),length(data_tables)), data_tables_metadata = rep(list(list()),length(data_tables)), data_tables_filters = rep(list(list()),length(data_tables)), data_tables_column_selections = rep(list(list()),length(data_tables)), imported_from = as.list(rep("",length(data_tables))), data_names = NULL, messages=TRUE, convert=TRUE, create=TRUE, prefix=TRUE, add_to_graph_book = TRUE)}}{Imports data into the DataBook from a list of data tables and their metadata.}
\item{\code{replace_instat_object(new_instat_object)}}{Replaces the current instat object with a new one.}
\item{\code{set_data_objects(new_data_objects)}}{Sets the data objects for the DataBook.}
\item{\code{copy_data_object(data_name, new_name, filter_name = "", column_selection_name = "", reset_row_names = TRUE)}}{Copies a data object with optional filtering and column selection.}
\item{\code{import_RDS(data_RDS, keep_existing = TRUE, overwrite_existing = FALSE, include_objects = TRUE, include_metadata = TRUE, include_logs = TRUE, include_filters = TRUE, include_column_selections = TRUE, include_calculations = TRUE, include_comments = TRUE)}}{Imports data from an RDS file into the DataBook.}
\item{\code{clone_data_object(curr_data_object, include_objects = TRUE, include_metadata = TRUE, include_logs = TRUE, include_filters = TRUE, include_column_selections = TRUE, include_calculations = TRUE, include_comments = TRUE, include_scalars = TRUE...)}}{Clones a data object with options to include various components.}
\item{\code{clone_instat_calculation(curr_instat_calculation, ...)}}{Clones an instat calculation.}
\item{\code{import_from_ODK(username, form_name, platform)}}{Imports data from ODK (Open Data Kit).}
\item{\code{set_meta(new_meta)}}{Sets the metadata for the DataBook.}
\item{\code{set_objects(new_objects)}}{Sets the objects for the DataBook.}
\item{\code{set_scalars(new_scalars)}}{Sets scalar values in the DataBook.}
\item{\code{set_undo_history(new_undo_history)}}{Set the undo history for the DataBook.}
\item{\code{get_scalars(data_name)}}{Retrieve scalars for a specific data object or overall DataBook.}
\item{\code{set_scalar_names(data_name, as_list = FALSE, excluded_items = c(), ...)}}{Retrieve scalar names for a specific data table.}
\item{\code{get_scalar_value(data_name, scalar_name)}}{Retrieve the value of a specific scalar for a given data object.}
\item{\code{add_scalar(data_name, scalar_name = "", scalar_value)}}{Add a scalar to a specific data object or the overall DataBook.}
\item{\code{set_enable_disable_undo(data_name, disable_undo)}}{Enable or disable undo functionality for a specific data object.}
\item{\code{is_undo(data_name)}}{Check if undo functionality is enabled for a specific data object.}
\item{\code{has_undo_history(data_name)}}{Check if there is undo history for a specific data object.}
\item{\code{undo_last_action(data_name)}}{Undo the last action for a specific data object.}
\item{\code{redo_last_action(data_name)}}{Redo the last undone action for a specific data object.}
\item{\code{get_column_climatic_type(data_name, col_name, attr_name)}}{Retrieve the climatic type attribute for a specific column.}
\item{\code{append_data_object(name, obj, add_to_graph_book = TRUE)}}{Appends a data object to the DataBook.}
\item{\code{get_data_objects(data_name, as_list = FALSE, ...)}}{Gets data objects from the DataBook.}
\item{\code{get_data_frame(data_name, convert_to_character = FALSE, stack_data = FALSE, include_hidden_columns = TRUE, use_current_filter = TRUE, filter_name = "", use_column_selection = TRUE, column_selection_name = "", remove_attr = FALSE, retain_attr = FALSE, max_cols, max_rows, drop_unused_filter_levels = FALSE, start_row, start_col, ...)}}{Gets a data frame from the DataBook with various options.}
\item{\code{get_variables_metadata(data_name, data_type = "all", convert_to_character = FALSE, property, column, error_if_no_property = TRUE, direct_from_attributes = FALSE, use_column_selection = TRUE)}}{Gets the variables metadata for the specified data table.}
\item{\code{get_variables_from_metadata(data_name, property, property_value)}}{Get the names of the variable given a specified metadata.}
\item{\code{get_column_data_types(data_name, columns)}}{Gets the data types of the specified columns in the data table.}
\item{\code{get_column_labels(data_name, columns)}}{Gets the labels of the specified columns in the data table.}
\item{\code{get_data_frame_label(data_name, use_current_filter = FALSE)}}{Gets the label of the data frame.}
\item{\code{get_data_frame_metadata(data_name, label, include_calculated = TRUE, excluded_not_for_display = TRUE)}}{Gets the metadata of the data frame.}
\item{\code{get_combined_metadata(convert_to_character = FALSE)}}{Gets combined metadata from all data tables.}
\item{\code{get_metadata(name, ...)}}{Gets metadata for the specified name.}
\item{\code{get_data_names(as_list = FALSE, include, exclude, excluded_items, include_hidden = TRUE, ...)}}{Gets the names of the data tables in the DataBook.}
\item{\code{get_data_changed(data_name)}}{Checks if the data has changed.}
\item{\code{get_variables_metadata_changed(data_name)}}{Checks if the variables metadata has changed.}
\item{\code{get_metadata_changed(data_name)}}{Checks if the metadata has changed.}
\item{\code{get_calculations(data_name)}}{Gets the calculations for the specified data table.}
\item{\code{get_calculation_names(data_name, as_list = FALSE, excluded_items = c())}}{Gets the names of the calculations for the specified data table.}
\item{\code{dataframe_count()}}{Gets the count of data frames in the DataBook.}
\item{\code{set_data_frames_changed(data_name = "", new_val)}}{Sets the changed status for data frames.}
\item{\code{set_variables_metadata_changed(data_name = "", new_val)}}{Sets the changed status for variables metadata.}
\item{\code{set_metadata_changed(data_name = "", new_val)}}{Sets the changed status for metadata.}
\item{\code{add_columns_to_data(data_name, col_name = "", col_data, use_col_name_as_prefix = FALSE, hidden = FALSE, before, adjacent_column = "", num_cols, require_correct_length = TRUE, keep_existing_position = TRUE)}}{Adds columns to the specified data table.}
\item{\code{get_columns_from_data(data_name, col_names, from_stacked_data = FALSE, force_as_data_frame = FALSE, use_current_filter = TRUE, remove_labels = FALSE, drop_unused_filter_levels = FALSE)}}{Gets columns from the specified data table.}
\item{\code{create_graph_data_book()}}{Creates a graph data book.}
\item{\code{add_object(data_name = NULL, object_name = NULL, object_type_label, object_format, object)}}{Adds an object to the DataBook.}
\item{\code{get_object_names(data_name = NULL, object_type_label = NULL, as_list = FALSE, ...)}}{Gets the names of the objects in the DataBook.}
\item{\code{get_objects(data_name = NULL, object_type_label = NULL)}}{Gets the objects from the DataBook.}
\item{\code{get_object(data_name = NULL, object_name)}}{Gets a specific object from the DataBook.}
\item{\code{get_object_data(data_name = NULL, object_name, as_file = FALSE)}}{Gets the data of a specific object from the DataBook.}
\item{\code{get_objects_data(data_name = NULL, object_names = NULL, as_files = FALSE)}}{Gets the data of multiple objects from the DataBook.}
\item{\code{get_last_object_data(object_type_label, as_file = TRUE)}}{Gets the data of the last object of a specified type from the DataBook.}
\item{\code{rename_object(data_name, object_name, new_name, object_type = "object")}}{Renames an object in the DataBook.}
\item{\code{delete_objects(data_name, object_names, object_type = "object")}}{Deletes objects from the DataBook.}
\item{\code{reorder_objects(data_name, new_order)}}{Reorders the objects in the DataBook.}
\item{\code{get_from_object(data_name, object_name, value1, value2, value3)}}{Gets values from a specified object in the DataBook.}
\item{\code{add_filter(data_name, filter, filter_name = "", replace = TRUE, set_as_current_filter = FALSE, na.rm = TRUE, is_no_filter = FALSE, and_or = "&", inner_not = FALSE, outer_not = FALSE)}}{Adds a filter to the specified data table.}
\item{\code{add_filter_as_levels(data_name, filter_levels, column)}}{Adds filter levels to the specified column.}
\item{\code{current_filter(data_name)}}{Gets the current filter for the specified data table.}
\item{\code{set_current_filter(data_name, filter_name = "")}}{Sets the current filter for the specified data table.}
\item{\code{get_filter(data_name, filter_name)}}{Gets a filter by name from the specified data table.}
\item{\code{get_filter_as_logical(data_name, filter_name)}}{Gets a filter as a logical vector from the specified data table.}
\item{\code{get_current_filter(data_name)}}{Gets the current filter for the specified data table.}
\item{\code{get_filter_row_names(data_name, filter_name)}}{Gets the row names that match a specified filter in the data table.}
\item{\code{get_current_filter_name(data_name)}}{Gets the name of the current filter for the specified data table.}
\item{\code{get_filter_names(data_name, as_list = FALSE, include = list(), exclude = list(), excluded_items = c())}}{Gets the names of the filters in the specified data table.}
\item{\code{remove_current_filter(data_name)}}{Removes the current filter from the specified data table.}
\item{\code{filter_applied(data_name)}}{Checks if a filter is applied to the specified data table.}
\item{\code{filter_string(data_name, filter_name)}}{Gets the filter string for a specified filter in the data table.}
\item{\code{get_filter_as_instat_calculation(data_name, filter_name)}}{Gets a filter as an instat calculation from the specified data table.}
\item{\code{add_column_selection(data_name, column_selection, name = "", replace = TRUE, set_as_current = FALSE, is_everything = FALSE, and_or = "|")}}{Adds a column selection to the specified data table.}
\item{\code{current_column_selection(data_name)}}{Gets the current column selection for the specified data table.}
\item{\code{set_current_column_selection(data_name, name = "")}}{Sets the current column selection for the specified data table.}
\item{\code{get_column_selection(data_name, name)}}{Gets a column selection by name from the specified data table.}
\item{\code{get_column_selection_column_names(data_name, filter_name)}}{Gets the column names for a specified filter in the data table.}
\item{\code{get_column_selected_column_names(data_name, column_selection_name = "")}}{Gets the names of the selected columns in the specified data table.}
\item{\code{get_current_column_selection(data_name)}}{Gets the current column selection for the specified data table.}
\item{\code{get_current_column_selection_name(data_name)}}{Gets the name of the current column selection for the specified data table.}
\item{\code{get_column_selection_names(data_name, as_list = FALSE, include = list(), exclude = list(), excluded_items = c())}}{Gets the names of the column selections in the specified data table.}
\item{\code{remove_current_column_selection(data_name)}}{Removes the current column selection from the specified data table.}
\item{\code{column_selection_string(data_name, filter_name)}}{Gets the column selection string for a specified column selection in the data table.}
\item{\code{column_selection_applied(data_name)}}{Checks if a column selection is applied to the specified data table.}
\item{\code{replace_value_in_data(data_name, col_names, rows, old_value, old_is_missing = FALSE, start_value = NA, end_value = NA, new_value, new_is_missing = FALSE, closed_start_value = TRUE, closed_end_value = TRUE, locf = FALSE, from_last = FALSE)}}{Replaces values in the specified columns and rows of the data table.}
\item{\code{paste_from_clipboard(data_name, col_names, start_row_pos = 1, first_clip_row_is_header = TRUE, clip_board_text)}}{Pastes data from the clipboard into the specified columns of the data table.}
\item{\code{rename_column_in_data(data_name, column_name = NULL, new_val = NULL, label = "", type = "single", .fn, .cols = everything(), new_column_names_df, new_labels_df, ...)}}{Renames a column in the specified data table.}
\item{\code{frequency_tables(data_name, x_col_names, y_col_name, n_column_factors = 1, store_results = TRUE, drop = TRUE, na.rm = FALSE, summary_name = NA, include_margins = FALSE, return_output = TRUE, treat_columns_as_factor = FALSE, page_by = "default", as_html = TRUE, signif_fig = 2, na_display = "", na_level_display = "NA", weights = NULL, caption = NULL, result_names = NULL, percentage_type = "none", perc_total_columns = NULL, perc_total_factors = c(), perc_total_filter = NULL, perc_decimal = FALSE, margin_name = "(All)", additional_filter, ...)}}{Creates frequency tables for the specified data table.}
\item{\code{anova_tables(data_name, x_col_names, y_col_name, signif.stars = FALSE, sign_level = FALSE, means = FALSE)}}{Creates ANOVA tables for the specified data table.}
\item{\code{cor(data_name, x_col_names, y_col_name, use = "everything", method = c("pearson", "kendall", "spearman"))}}{Calculates correlations for the specified columns in the data table.}
\item{\code{remove_columns_in_data(data_name, cols, allow_delete_all = FALSE)}}{Removes columns from the specified data table.}
\item{\code{remove_rows_in_data(data_name, row_names)}}{Removes rows from the specified data table.}
\item{\code{get_next_default_column_name(data_name, prefix)}}{Gets the next default column name for the specified data table.}
\item{\code{get_column_names(data_name, as_list = FALSE, include = list(), exclude = list(), excluded_items = c(), max_no, use_current_column_selection = TRUE)}}{Gets the column names in the specified data table.}
\item{\code{reorder_columns_in_data(data_name, col_order)}}{Reorders the columns in the specified data table.}
\item{\code{insert_row_in_data(data_name, start_row, row_data = c(), number_rows = 1, before = FALSE)}}{Inserts rows into the specified data table.}
\item{\code{get_data_frame_length(data_name, use_current_filter = FALSE)}}{Gets the length of the data frame in the specified data table.}
\item{\code{get_next_default_dataframe_name(prefix, include_index = TRUE, start_index = 1)}}{Gets the next default name for a data frame in the DataBook.}
\item{\code{delete_dataframes(data_names, delete_graph_book = TRUE)}}{Deletes data frames from the DataBook.}
\item{\code{remove_link(link_name)}}{Removes a link from the DataBook.}
\item{\code{get_column_factor_levels(data_name, col_name = "")}}{Gets the factor levels of a column in the specified data table.}
\item{\code{get_factor_data_frame(data_name, col_name = "", include_levels = TRUE, include_NA_level = FALSE)}}{Gets a factor data frame for the specified column in the data table.}
\item{\code{sort_dataframe(data_name, col_names = c(), decreasing = FALSE, na.last = TRUE, by_row_names = FALSE, row_names_as_numeric = TRUE)}}{Sorts the specified data table.}
\item{\code{rename_dataframe(data_name, new_value = "", label = "")}}{Renames the specified data table.}
\item{\code{convert_column_to_type(data_name, col_names = c(), to_type, factor_values = NULL, set_digits, set_decimals = FALSE, keep_attr = TRUE, ignore_labels = FALSE, keep.labels = TRUE)}}{Converts the specified columns to a different type in the data table.}
\item{\code{append_to_variables_metadata(data_name, col_names, property, new_val = "")}}{Appends a new value to the specified property in the variables metadata for the given columns in the specified data table.}
\item{\code{append_to_dataframe_metadata(data_name, property, new_val = "")}}{Appends a new value to the specified property in the dataframe metadata for the specified data table.}
\item{\code{append_to_metadata(property, new_val = "", allow_override_special = FALSE)}}{Appends a new value to the specified property in the overall metadata, with an option to override special properties.}
\item{\code{add_metadata_field(data_name, property, new_val = "")}}{Adds a new metadata field to the specified data table or to the overall metadata.}
\item{\code{reorder_dataframes(data_frames_order)}}{Reorders the data frames in the object based on the provided order.}
\item{\code{copy_columns(data_name, col_names = "", copy_to_clipboard = FALSE)}}{Copies the specified columns from the given data table, with an option to copy to the clipboard.}
\item{\code{drop_unused_factor_levels(data_name, col_name)}}{Drops unused factor levels from the specified column in the given data table.}
\item{\code{set_factor_levels(data_name, col_name, new_labels, new_levels, set_new_labels = TRUE)}}{Sets new factor levels and labels for the specified column in the given data table.}
\item{\code{edit_factor_level(data_name, col_name, old_level, new_level)}}{Edits an existing factor level in the specified column of the given data table.}
\item{\code{set_factor_reference_level(data_name, col_name, new_ref_level)}}{Sets a new reference level for the specified factor column in the given data table.}
\item{\code{get_column_count(data_name, use_column_selection = FALSE)}}{Returns the count of columns in the specified data table, with an option to use the current column selection.}
\item{\code{reorder_factor_levels(data_name, col_name, new_level_names)}}{Reorders the factor levels in the specified column of the given data table.}
\item{\code{get_data_type(data_name, col_name)}}{Returns the data type of the specified column in the given data table.}
\item{\code{copy_data_frame(data_name, new_name, label = "", copy_to_clipboard = FALSE)}}{Copies the specified data table to a new data table with an optional new name, label, and option to copy to the clipboard.}
\item{\code{copy_col_metadata_to_clipboard(data_name, property_names)}}{Copies the specified column metadata properties from the given data table to the clipboard.}
\item{\code{copy_data_frame_metadata_to_clipboard(data_name, property_names)}}{Copies the specified data frame metadata properties from the given data table to the clipboard.}
\item{\code{copy_to_clipboard(content)}}{Copies the given content to the clipboard.}
\item{\code{set_hidden_columns(data_name, col_names = c())}}{Sets the specified columns in the given data table to be hidden.}
\item{\code{unhide_all_columns(data_name)}}{Unhides all columns in the specified data table.}
\item{\code{set_hidden_data_frames(data_names = c())}}{Sets the specified data frames to be hidden.}
\item{\code{get_hidden_data_frames()}}{Returns the names of all hidden data frames.}
\item{\code{set_row_names(data_name, row_names)}}{Sets new row names for the specified data table.}
\item{\code{get_row_names(data_name)}}{Returns the row names of the specified data table.}
\item{\code{set_protected_columns(data_name, col_names)}}{Sets the specified columns in the given data table to be protected.}
\item{\code{get_metadata_fields(data_name, include_overall, as_list = FALSE, include, exclude, excluded_items = c())}}{Returns the metadata fields for the specified data table and overall metadata, with options to include or exclude specific fields.}
\item{\code{freeze_columns(data_name, column)}}{Freezes the specified columns in the given data table.}
\item{\code{unfreeze_columns(data_name)}}{Unfreezes all columns in the specified data table.}
\item{\code{is_variables_metadata(data_name, property, column, return_vector = FALSE)}}{Checks if the specified property is part of the variables metadata for the given column in the specified data table.}
\item{\code{data_frame_exists(data_name)}}{Checks if the specified data table exists in the object.}
\item{\code{add_key(data_name, col_names, key_name)}}{Adds a key to the specified data table using the given columns and key name.}
\item{\code{is_key(data_name, col_names)}}{Checks if the specified columns form a key in the given data table.}
\item{\code{has_key(data_name)}}{Checks if the specified data table has a key.}
\item{\code{get_keys(data_name, key_name)}}{Returns the keys for the specified data table and key name.}
\item{\code{add_new_comment(data_name, row = "", column = "", comment)}}{Adds a new comment to the specified data table, optionally specifying the row and column.}
\item{\code{get_comments(data_name, comment_id)}}{Returns the comments for the specified data table and comment ID.}
\item{\code{get_links(link_name, ...)}}{Returns the links for the specified link name or all links if no name is provided.}
\item{\code{set_structure_columns(data_name, struc_type_1 = c(), struc_type_2 = c(), struc_type_3 = c())}}{Sets the structure columns for the specified data table.}
\item{\code{add_dependent_columns(data_name, columns, dependent_cols)}}{Adds dependent columns to the specified columns in the given data table.}
\item{\code{set_column_colours(data_name, columns, colours)}}{Sets the colors for the specified columns in the given data table.}
\item{\code{has_colours(data_name, columns)}}{Checks if the specified columns in the given data table have colors.}
\item{\code{remove_column_colours(data_name)}}{Removes colors from all columns in the specified data table.}
\item{\code{set_column_colours_by_metadata(data_name, columns, property)}}{Sets the colors for the specified columns in the given data table based on the specified metadata property.}
\item{\code{graph_one_variable(data_name, columns, numeric = "geom_boxplot", categorical = "geom_bar", character = "geom_bar", output = "facets", free_scale_axis = FALSE, ncol = NULL, coord_flip  = FALSE, ... = ...)}}{Creates a graph for one variable in the specified data table with options for the type of graph, axis scaling, and other parameters.}
\item{\code{make_date_yeardoy(data_name, year, doy, base, doy_typical_length = "366")}}{Creates a date column from the specified year and day of year columns in the given data table.}
\item{\code{make_date_yearmonthday(data_name, year, month, day, f_year, f_month, f_day, year_format, month_format)}}{Creates a date column from the specified year, month, and day columns in the given data table, with options for formatting.}
\item{\code{set_contrasts_of_factor(data_name, col_name, new_contrasts, defined_contr_matrix)}}{Sets the contrasts for the specified factor column in the given data table.}
\item{\code{create_factor_data_frame(data_name, factor, factor_data_frame_name, include_contrasts = FALSE, replace = FALSE, summary_count = TRUE)}}{Creates a new data frame for the specified factor column in the given data table, with options to include contrasts and summary counts.}
\item{\code{split_date(data_name, col_name = "", year_val = FALSE, year_name = FALSE, leap_year = FALSE,  month_val = FALSE, month_abbr = FALSE, month_name = FALSE, week_val = FALSE, week_abbr = FALSE, week_name = FALSE, weekday_val = FALSE, weekday_abbr = FALSE, weekday_name = FALSE,  day = FALSE, day_in_month = FALSE, day_in_year = FALSE, day_in_year_366 = FALSE, pentad_val = FALSE, pentad_abbr = FALSE, dekad_val = FALSE, dekad_abbr = FALSE, quarter_val = FALSE, quarter_abbr = FALSE, with_year = FALSE, s_start_month = 1, s_start_day_in_month = 1, days_in_month = FALSE, format = FALSE, format_string = "")}}{Splits the specified date column into multiple components such as year, month, day, etc. in the given data table.}
\item{\code{import_SST(dataset, data_from = 5, data_names = c())}}{Imports SST data from the specified dataset and data source, creating data tables with the specified names.}
\item{\code{make_inventory_plot(data_name, date_col, station_col = NULL, year_col = NULL, doy_col = NULL, element_cols = NULL, add_to_data = FALSE, year_doy_plot = FALSE, coord_flip = FALSE, facet_by = NULL, graph_title = "Inventory Plot", graph_subtitle = NULL, graph_caption = NULL, title_size = NULL, subtitle_size = NULL, caption_size = NULL, labelXAxis, labelYAxis, xSize = NULL, ySize = NULL, Xangle = NULL, Yangle = NULL, scale_xdate, fromXAxis = NULL, toXAxis = NULL, byXaxis = NULL, date_ylabels, legend_position = NULL, xlabelsize = NULL, ylabelsize = NULL, scale = NULL, dir = "", row_col_number, nrow = NULL, ncol = NULL, key_colours = c("red", "grey"), display_rain_days = FALSE, facet_xsize = 9, facet_ysize = 9, facet_xangle = 90, facet_yangle = 90, scale_ydate = FALSE, date_ybreaks, step = 1, rain_cats = list(breaks = c(0, 0.85, Inf), labels = c("Dry", "Rain"), key_colours = c("tan3", "blue")))}}{Creates an inventory plot for the specified data table with various customisation options.}
\item{\code{import_NetCDF(nc, path, name, only_data_vars = TRUE, keep_raw_time = TRUE, include_metadata = TRUE, boundary, lon_points = NULL, lat_points = NULL, id_points = NULL, show_requested_points = TRUE, great_circle_dist = FALSE, internal_import = FALSE)}}{Imports data from a NetCDF file, with options to specify the data variables, time format, metadata inclusion, and boundaries.}
\item{\code{infill_missing_dates(data_name, date_name, factors, start_month, start_date, end_date, resort = TRUE)}}{Infills missing dates in the specified data table using the provided date column and factors.}
\item{\code{get_key_names(data_name, include_overall = TRUE, include, exclude, include_empty = FALSE, as_list = FALSE, excluded_items = c())}}{Returns the key names for the specified data table, with options to include overall keys, exclude specific keys, and return as a list.}
\item{\code{remove_key(data_name, key_name)}}{Removes the specified key from the given data table.}
\item{\code{add_climdex_indices(data_name, climdex_output, freq = "annual", station, year, month)}}{Adds climdex indices to the specified data table, with options for frequency, station, year, and month.}
\item{\code{is_metadata(data_name, str)}}{Checks if the specified string is part of the metadata for the given data table.}
\item{\code{get_climatic_column_name(data_name, col_name)}}{Returns the climatic column name for the specified column in the given data table.}
\item{\code{merge_data(data_name, new_data, by = NULL, type = "left", match = "all")}}{Merges new data into the specified data table using the provided columns and merge type.}
\item{\code{get_corruption_data_names()}}{Returns the names of all data tables with corruption data.}
\item{\code{get_corruption_contract_data_names()}}{Returns the names of all data tables with corruption contract data.}
\item{\code{get_database_variable_names(query, data_name, include_overall = TRUE, include, exclude, include_empty = FALSE, as_list = FALSE, excluded_items = c())}}{Returns the database variable names for the specified query and data table, with options to include overall variables, exclude specific variables, and return as a list.}
\item{\code{get_nc_variable_names(file = "", as_list = FALSE, ...)}}{Returns the variable names from the specified NetCDF file, with an option to return as a list.}
\item{\code{has_database_connection()}}{Checks if there is a database connection.}
\item{\code{database_connect(dbname, user, host, port, drv = RMySQL::MySQL())}}{Connects to a database using the provided credentials and driver.}
\item{\code{get_database_connection()}}{Returns the current database connection.}
\item{\code{set_database_connection(dbi_connection)}}{Sets the database connection to the specified DBI connection object.}
\item{\code{database_disconnect()}}{Disconnects from the current database.}
\item{\code{import_from_climsoft(stationfiltercolumn = "stationId", stations = c(), elementfiltercolumn = "elementId", elements = c(), include_observation_data = FALSE, include_observation_flags = FALSE, unstack_data = FALSE, include_elements_info = FALSE, start_date = NULL, end_date = NULL)}}{Imports data from CLIMSOFT using the specified filters and options for observation data, flags, and unstacking.}
\item{\code{export_workspace(data_names, file, include_graphs = TRUE, include_models = TRUE, include_metadata = TRUE)}}{Exports the workspace to a file, including the specified data tables, graphs, models, and metadata.}
\item{\code{set_links(new_links)}}{Sets the links in the object to the specified new links.}
\item{\code{display_daily_graph(data_name, date_col = NULL, station_col = NULL, year_col = NULL, doy_col = NULL, climatic_element = NULL, upper_limit = 100, bar_colour = "blue", rug_colour = "red")}}{Displays a daily graph for the specified data table with options for columns, element, colors, and limits.}
\item{\code{create_variable_set(data_name, set_name, columns)}}{Creates a variable set with the specified name and columns in the given data table.}
\item{\code{update_variable_set(data_name, set_name, columns, new_set_name)}}{Updates the specified variable set with new columns and optionally a new name in the given data table.}
\item{\code{delete_variable_sets(data_name, set_names)}}{Deletes the specified variable sets from the given data table.}
\item{\code{get_variable_sets_names(data_name, include_overall = TRUE, include, exclude, include_empty = FALSE, as_list = FALSE, excluded_items = c())}}{Returns the names of variable sets for the specified data table, with options to include overall sets, exclude specific sets, and return as a list.}
\item{\code{get_variable_sets(data_name, set_names, force_as_list = FALSE)}}{Returns the specified variable sets from the given data table, with an option to force the result as a list.}
\item{\code{crops_definitions(data_name, year, station, rain, day, rain_totals, plant_days, plant_lengths, start_check = c("both", "yes", "no"), season_data_name, start_day, end_day, return_crops_table = TRUE, definition_props = TRUE)}}{Defines crop parameters for the specified data table using the provided columns and options for seasons, days, and properties.}
\item{\code{tidy_climatic_data(x, format, stack_cols, day, month, year, stack_years, station, element, element_name="value", ignore_invalid = FALSE, silent = FALSE, unstack_elements = TRUE, new_name)}}{Converts wide-format daily climatic data to long format using the specified columns and options for format, elements, and validation.}
\item{\code{get_geometry(data)}}{Returns the geometry column for the specified data table.}
\item{\code{package_check(package)}}{Checks if the specified package is installed and returns information about its version and availability.}
\item{\code{download_from_IRI(source, data, path = tempdir(), min_lon, max_lon, min_lat, max_lat, min_date, max_date, name, download_type = "Point", import = TRUE, internal_import = FALSE)}}{Downloads data from IRI using the specified source, data, coordinates, date range, and options for download type and import.}
\item{\code{download_from_IRI_multiple(data_frame, id_var, data, source, path = tempdir(), min_lon, min_lat, min_date, max_date, name, import = TRUE)}}{Downloads multiple data frames from IRI using the specified source, data, coordinates, date range, and options for download type and import. Combines into a single data frame.}
\item{\code{patch_climate_element(data_name, date_col_name = "", var = "", vars = c(), max_mean_bias = NA, max_stdev_bias = NA, time_interval = "month", column_name, station_col_name = station_col_name)}}{Patches the specified climate element in the given data table using the provided columns and options for bias, time interval, and station.}
\item{\code{visualize_element_na(data_name, element_col_name, element_col_name_imputed, station_col_name, x_axis_labels_col_name, ncol = 2, type = "distribution", xlab = NULL, ylab = NULL, legend = TRUE, orientation = "horizontal", interval_size = interval_size, x_with_truth = NULL, measure = "percent")}}{Visualizes missing data for the specified element in the given data table using the provided columns and options for labels, legend, orientation, and measure.}
\item{\code{get_data_entry_data(data_name, station, date, elements, view_variables, station_name, type, start_date, end_date)}}{Returns data entry data for the specified data table using the provided columns and options for date range, variables, and type.}
\item{\code{save_data_entry_data(data_name, new_data, rows_changed, comments_list = list(), add_flags = FALSE, ...)}}{Saves data entry data to the specified data table with options for adding comments, flags, and rows changed.}
\item{\code{import_from_cds(user, dataset, elements, start_date, end_date, lon, lat, path, import = FALSE, new_name)}}{Imports data from CDS using the specified user, dataset, elements, date range, coordinates, and options for file path and import.}
\item{\code{add_flag_fields(data_name, col_names, key_column_names)}}{Adds flag fields to the specified columns in the given data table, using the provided key columns.}
\item{\code{remove_empty(data_name,  which = c("rows","cols"))}}{Removes empty rows or columns from the specified data table.}
\item{\code{replace_values_with_NA(data_name, row_index, column_index)}}{Replaces values with NA in the specified rows and columns of the given data table.}
\item{\code{has_labels(data_name, col_names)}}{Checks if the specified columns in the given data table have labels.}
\item{\code{wrap_or_unwrap_data(data_name, col_name, column_data, width, wrap = TRUE)}}{Wraps or unwraps the specified column data in the given data table to the specified width.}
\item{\code{anova_tables2(data_name, x_col_names, y_col_name, total = TRUE, signif.stars = FALSE, sign_level = FALSE, means = FALSE, interaction = FALSE)}}{Generate ANOVA tables for specified columns in a dataset.}
\item{\code{define_as_options_by_context(data_name, obyc_types = NULL, key_columns = NULL)}}{Define options by context for a specified dataset.}
\item{\code{display_daily_table(data_name, climatic_element, date_col, year_col, station_col, Misscode, Tracecode, Zerocode, monstats = c("min", "mean", "median", "max", "IQR", "sum"))}}{Display a daily summary table for a specified climatic data element.}

\item{\code{add_comment(new_comment)}}{Adds a new \code{instat_comment} object to the data sheet if the key is defined and valid.}
\item{\code{delete_comment(comment_id)}}{Deletes a comment from the data sheet based on the comment ID.}
\item{\code{get_comment_ids()}}{Retrieves all comment IDs currently stored in the data sheet.}
\item{\code{get_comments_as_data_frame()}}{Converts all comments in the data sheet to a data frame format for easier inspection and analysis.}

\item{\code{update_links_rename_data_frame(old_data_name, new_data_name)}}{This function updates all links that reference a data frame with a specified old name, renaming it to a new name.}
\item{\code{update_links_rename_column(data_name, old_column_name, new_column_name)}}{This function updates all links referencing a column in a data frame with a specified old column name, renaming it to a new column name.}
\item{\code{add_link(from_data_frame, to_data_frame, link_pairs, type, link_name)}}{This function adds a new link between two data frames with the specified link pairs and type. It will check if the link already exists or if the link columns are keys.}
\item{\code{get_link_names(data_name, include_overall = TRUE, include, exclude, include_empty = FALSE, as_list = FALSE, excluded_items, exclude_self_links)}}{Retrieves the names of all links involving a specified data frame, with options to include or exclude specific types.}
\item{\code{link_exists_from(curr_data_frame, link_pairs)}}{Verifies if a link exists from a specific data frame with given link pairs.}
\item{\code{link_exists_between(from_data_frame, to_data_frame, ordered = FALSE)}}{This function checks if there is an ordered or unordered link between two specified data frames.}
\item{\code{get_link_between(from_data_frame, to_data_frame, ordered = FALSE)}}{Retrieves the link definition between two specified data frames.}
\item{\code{link_exists_from_by_to(first_data_frame, link_pairs, second_data_frame)}}{This function checks if a link exists from \code{first_data_frame} to \code{second_data_frame} using the specified \code{link_pairs} columns.}
\item{\code{get_linked_to_data_name(from_data_frame, link_cols = c(), include_self = FALSE)}}{This function returns the names of data frames linked to \code{from_data_frame}. Optionally, includes \code{from_data_frame} itself in the output if \code{include_self} is TRUE. Filters results by \code{link_cols}, if provided.}
\item{\code{get_linked_to_definition(from_data_frame, link_pairs)}}{This function returns a list of the target data frame and matched columns.}
\item{\code{get_possible_linked_to_definition(from_data_frame, link_pairs)}}{This function attempts to find a linked data frame that matches \code{link_pairs}. Recursively explores links between multiple data frames.}
\item{\code{get_equivalent_columns(from_data_name, columns, to_data_name)}}{This function returns columns in \code{to_data_name} equivalent to \code{columns} in \code{from_data_name}. Recursively searches links between multiple data frames.}
\item{\code{link_between_containing(from_data_frame, containing_columns, to_data_frame)}}{This function returns columns in \code{to_data_frame} corresponding to \code{containing_columns} in \code{from_data_frame} if a link exists between them.}
\item{\code{view_link(link_name)}}{Displays the details of a specified link.}

\item{\code{apply_calculation(calc)}}{Apply a Calculation to Data in the DataBook}
\item{\code{save_calculation(end_data_frame, calc)}}{Save a Calculation to a Data Frame}
\item{\code{apply_instat_calculation(calc, curr_data_list, previous_manipulations = list(), param_list = list())}}{Apply an Instat Calculation}
\item{\code{run_instat_calculation(calc, display = TRUE, param_list = list())}}{Run an Instat Calculation and Display Results}
\item{\code{get_corresponding_link_columns(first_data_frame_name, first_data_frame_columns, second_data_frame_name)}}{Get Corresponding Link Columns}
\item{\code{get_link_columns_from_data_frames(first_data_frame_name, first_data_frame_columns, second_data_frame_name, second_data_frame_columns)}}{Get Link Columns Between Data Frames}
\item{\code{save_calc_output(calc, curr_data_list, previous_manipulations)}}{Save the Output of a Calculation}

\item{\code{convert_linked_variable(from_data_frame, link_cols)}}{Convert Linked Variable to Matching Class}
\item{\code{remove_unused_station_year_combinations(data_name, year, station)}}{Remove Unused Station-Year Combinations}
\item{\code{get_gtrow_names(data_name, table_name)}}{Retrieve the GT row names of a table in a data frame.}
\item{\code{get_gtcol_names(data_name, table_name)}}{Retrieve the GT column names of a table in a data frame.}

\item{\code{append_summaries_to_data_object(out, data_name, columns_to_summarise, summaries, factors = c(), summary_name, calc, calc_name = "")}}{Append Summaries to a Data Object}
\item{\code{calculate_summary(data_name, columns_to_summarise = NULL, summaries, factors = c(), store_results = TRUE, drop = TRUE, return_output = FALSE, summary_name = NA, result_names = NULL, percentage_type = "none", perc_total_columns = NULL, perc_total_factors = c(), perc_total_filter = NULL, perc_decimal = FALSE, perc_return_all = FALSE, include_counts_with_percentage = FALSE, silent = FALSE, additional_filter, original_level = FALSE, signif_fig = 2, sep = "_", ...)}}{Calculate Summaries for a Data Object}

\item{\code{define_as_tricot(data_name, types, key_col_names, key_name, output_data_levels, variety_cols, trait_cols)}}{Defines a data table as tricot data.}
\item{\code{get_column_tricot_type(data_name, col_name, attr_name)}}{Retrieve the tricot type attribute for a specific column.}
\item{\code{get_tricot_column_name(data_name, col_name)}}{Returns the tricot column name for the specified column in the given data table.}
\item{\code{check_variety_data_level(data)}}{Check if the data is at the variety level.}
\item{\code{summarise_data_levels(data_list, id_cols, variety_cols, trait_cols, positive_trait_suffixes, negative_trait_suffixes)}}{Summarise Tricot Data Levels for Multiple Datasets}
\item{\code{check_ID_data_level(data)}}{Check if the data is at the ID level.}
\item{\code{create_tricot_datasets(output_data_levels, id_level_data, id_col, data_trait_cols, carry_cols, traits, variety_cols, rank_values, prefix, good_suffixes, bad_suffixes, na_candidates)}}{Create and structure tricot data at multiple levels}
}

@section Active bindings:
\describe{
\item{\code{data_objects_changed}}{Logical indicating whether the data objects have changed.}
}

@export
}

\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{data_objects_changed}}{Logical indicating whether the data objects have changed.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-DataBook-new}{\code{DataBook$new()}}
\item \href{#method-DataBook-standardise_country_names}{\code{DataBook$standardise_country_names()}}
\item \href{#method-DataBook-define_as_climatic}{\code{DataBook$define_as_climatic()}}
\item \href{#method-DataBook-define_corruption_outputs}{\code{DataBook$define_corruption_outputs()}}
\item \href{#method-DataBook-define_red_flags}{\code{DataBook$define_red_flags()}}
\item \href{#method-DataBook-define_as_procurement}{\code{DataBook$define_as_procurement()}}
\item \href{#method-DataBook-define_as_procurement_country_level_data}{\code{DataBook$define_as_procurement_country_level_data()}}
\item \href{#method-DataBook-get_CRI_component_column_names}{\code{DataBook$get_CRI_component_column_names()}}
\item \href{#method-DataBook-get_red_flag_column_names}{\code{DataBook$get_red_flag_column_names()}}
\item \href{#method-DataBook-get_CRI_column_names}{\code{DataBook$get_CRI_column_names()}}
\item \href{#method-DataBook-get_corruption_column_name}{\code{DataBook$get_corruption_column_name()}}
\item \href{#method-DataBook-import_data}{\code{DataBook$import_data()}}
\item \href{#method-DataBook-replace_instat_object}{\code{DataBook$replace_instat_object()}}
\item \href{#method-DataBook-set_data_objects}{\code{DataBook$set_data_objects()}}
\item \href{#method-DataBook-copy_data_object}{\code{DataBook$copy_data_object()}}
\item \href{#method-DataBook-import_RDS}{\code{DataBook$import_RDS()}}
\item \href{#method-DataBook-clone_data_object}{\code{DataBook$clone_data_object()}}
\item \href{#method-DataBook-clone_instat_calculation}{\code{DataBook$clone_instat_calculation()}}
\item \href{#method-DataBook-import_from_ODK}{\code{DataBook$import_from_ODK()}}
\item \href{#method-DataBook-set_meta}{\code{DataBook$set_meta()}}
\item \href{#method-DataBook-set_objects}{\code{DataBook$set_objects()}}
\item \href{#method-DataBook-set_undo_history}{\code{DataBook$set_undo_history()}}
\item \href{#method-DataBook-set_scalars}{\code{DataBook$set_scalars()}}
\item \href{#method-DataBook-get_scalars}{\code{DataBook$get_scalars()}}
\item \href{#method-DataBook-get_scalar_names}{\code{DataBook$get_scalar_names()}}
\item \href{#method-DataBook-get_scalar_value}{\code{DataBook$get_scalar_value()}}
\item \href{#method-DataBook-add_scalar}{\code{DataBook$add_scalar()}}
\item \href{#method-DataBook-set_enable_disable_undo}{\code{DataBook$set_enable_disable_undo()}}
\item \href{#method-DataBook-is_undo}{\code{DataBook$is_undo()}}
\item \href{#method-DataBook-has_undo_history}{\code{DataBook$has_undo_history()}}
\item \href{#method-DataBook-undo_last_action}{\code{DataBook$undo_last_action()}}
\item \href{#method-DataBook-redo_last_action}{\code{DataBook$redo_last_action()}}
\item \href{#method-DataBook-get_column_climatic_type}{\code{DataBook$get_column_climatic_type()}}
\item \href{#method-DataBook-append_data_object}{\code{DataBook$append_data_object()}}
\item \href{#method-DataBook-get_data_objects}{\code{DataBook$get_data_objects()}}
\item \href{#method-DataBook-get_data_frame}{\code{DataBook$get_data_frame()}}
\item \href{#method-DataBook-get_variables_metadata}{\code{DataBook$get_variables_metadata()}}
\item \href{#method-DataBook-get_variables_from_metadata}{\code{DataBook$get_variables_from_metadata()}}
\item \href{#method-DataBook-get_column_data_types}{\code{DataBook$get_column_data_types()}}
\item \href{#method-DataBook-get_column_labels}{\code{DataBook$get_column_labels()}}
\item \href{#method-DataBook-get_data_frame_label}{\code{DataBook$get_data_frame_label()}}
\item \href{#method-DataBook-get_data_frame_metadata}{\code{DataBook$get_data_frame_metadata()}}
\item \href{#method-DataBook-get_combined_metadata}{\code{DataBook$get_combined_metadata()}}
\item \href{#method-DataBook-get_metadata}{\code{DataBook$get_metadata()}}
\item \href{#method-DataBook-get_data_names}{\code{DataBook$get_data_names()}}
\item \href{#method-DataBook-get_data_changed}{\code{DataBook$get_data_changed()}}
\item \href{#method-DataBook-get_variables_metadata_changed}{\code{DataBook$get_variables_metadata_changed()}}
\item \href{#method-DataBook-get_metadata_changed}{\code{DataBook$get_metadata_changed()}}
\item \href{#method-DataBook-get_calculations}{\code{DataBook$get_calculations()}}
\item \href{#method-DataBook-get_calculation_names}{\code{DataBook$get_calculation_names()}}
\item \href{#method-DataBook-dataframe_count}{\code{DataBook$dataframe_count()}}
\item \href{#method-DataBook-set_data_frames_changed}{\code{DataBook$set_data_frames_changed()}}
\item \href{#method-DataBook-set_variables_metadata_changed}{\code{DataBook$set_variables_metadata_changed()}}
\item \href{#method-DataBook-set_metadata_changed}{\code{DataBook$set_metadata_changed()}}
\item \href{#method-DataBook-add_columns_to_data}{\code{DataBook$add_columns_to_data()}}
\item \href{#method-DataBook-get_columns_from_data}{\code{DataBook$get_columns_from_data()}}
\item \href{#method-DataBook-create_graph_data_book}{\code{DataBook$create_graph_data_book()}}
\item \href{#method-DataBook-add_object}{\code{DataBook$add_object()}}
\item \href{#method-DataBook-get_object_names}{\code{DataBook$get_object_names()}}
\item \href{#method-DataBook-get_objects}{\code{DataBook$get_objects()}}
\item \href{#method-DataBook-get_object}{\code{DataBook$get_object()}}
\item \href{#method-DataBook-get_object_data}{\code{DataBook$get_object_data()}}
\item \href{#method-DataBook-get_objects_data}{\code{DataBook$get_objects_data()}}
\item \href{#method-DataBook-get_last_object_data}{\code{DataBook$get_last_object_data()}}
\item \href{#method-DataBook-rename_object}{\code{DataBook$rename_object()}}
\item \href{#method-DataBook-delete_objects}{\code{DataBook$delete_objects()}}
\item \href{#method-DataBook-reorder_objects}{\code{DataBook$reorder_objects()}}
\item \href{#method-DataBook-get_from_object}{\code{DataBook$get_from_object()}}
\item \href{#method-DataBook-add_filter}{\code{DataBook$add_filter()}}
\item \href{#method-DataBook-add_filter_as_levels}{\code{DataBook$add_filter_as_levels()}}
\item \href{#method-DataBook-current_filter}{\code{DataBook$current_filter()}}
\item \href{#method-DataBook-set_current_filter}{\code{DataBook$set_current_filter()}}
\item \href{#method-DataBook-get_filter}{\code{DataBook$get_filter()}}
\item \href{#method-DataBook-get_filter_as_logical}{\code{DataBook$get_filter_as_logical()}}
\item \href{#method-DataBook-get_current_filter}{\code{DataBook$get_current_filter()}}
\item \href{#method-DataBook-get_filter_row_names}{\code{DataBook$get_filter_row_names()}}
\item \href{#method-DataBook-get_current_filter_name}{\code{DataBook$get_current_filter_name()}}
\item \href{#method-DataBook-get_filter_names}{\code{DataBook$get_filter_names()}}
\item \href{#method-DataBook-remove_current_filter}{\code{DataBook$remove_current_filter()}}
\item \href{#method-DataBook-filter_applied}{\code{DataBook$filter_applied()}}
\item \href{#method-DataBook-filter_string}{\code{DataBook$filter_string()}}
\item \href{#method-DataBook-get_filter_as_instat_calculation}{\code{DataBook$get_filter_as_instat_calculation()}}
\item \href{#method-DataBook-add_column_selection}{\code{DataBook$add_column_selection()}}
\item \href{#method-DataBook-current_column_selection}{\code{DataBook$current_column_selection()}}
\item \href{#method-DataBook-set_current_column_selection}{\code{DataBook$set_current_column_selection()}}
\item \href{#method-DataBook-get_column_selection}{\code{DataBook$get_column_selection()}}
\item \href{#method-DataBook-get_column_selection_column_names}{\code{DataBook$get_column_selection_column_names()}}
\item \href{#method-DataBook-get_column_selected_column_names}{\code{DataBook$get_column_selected_column_names()}}
\item \href{#method-DataBook-get_current_column_selection}{\code{DataBook$get_current_column_selection()}}
\item \href{#method-DataBook-get_current_column_selection_name}{\code{DataBook$get_current_column_selection_name()}}
\item \href{#method-DataBook-get_column_selection_names}{\code{DataBook$get_column_selection_names()}}
\item \href{#method-DataBook-remove_current_column_selection}{\code{DataBook$remove_current_column_selection()}}
\item \href{#method-DataBook-column_selection_string}{\code{DataBook$column_selection_string()}}
\item \href{#method-DataBook-column_selection_applied}{\code{DataBook$column_selection_applied()}}
\item \href{#method-DataBook-replace_value_in_data}{\code{DataBook$replace_value_in_data()}}
\item \href{#method-DataBook-paste_from_clipboard}{\code{DataBook$paste_from_clipboard()}}
\item \href{#method-DataBook-rename_column_in_data}{\code{DataBook$rename_column_in_data()}}
\item \href{#method-DataBook-frequency_tables}{\code{DataBook$frequency_tables()}}
\item \href{#method-DataBook-anova_tables}{\code{DataBook$anova_tables()}}
\item \href{#method-DataBook-cor}{\code{DataBook$cor()}}
\item \href{#method-DataBook-remove_columns_in_data}{\code{DataBook$remove_columns_in_data()}}
\item \href{#method-DataBook-remove_rows_in_data}{\code{DataBook$remove_rows_in_data()}}
\item \href{#method-DataBook-get_next_default_column_name}{\code{DataBook$get_next_default_column_name()}}
\item \href{#method-DataBook-get_column_names}{\code{DataBook$get_column_names()}}
\item \href{#method-DataBook-reorder_columns_in_data}{\code{DataBook$reorder_columns_in_data()}}
\item \href{#method-DataBook-insert_row_in_data}{\code{DataBook$insert_row_in_data()}}
\item \href{#method-DataBook-get_data_frame_length}{\code{DataBook$get_data_frame_length()}}
\item \href{#method-DataBook-get_next_default_dataframe_name}{\code{DataBook$get_next_default_dataframe_name()}}
\item \href{#method-DataBook-delete_dataframes}{\code{DataBook$delete_dataframes()}}
\item \href{#method-DataBook-remove_link}{\code{DataBook$remove_link()}}
\item \href{#method-DataBook-get_column_factor_levels}{\code{DataBook$get_column_factor_levels()}}
\item \href{#method-DataBook-get_factor_data_frame}{\code{DataBook$get_factor_data_frame()}}
\item \href{#method-DataBook-sort_dataframe}{\code{DataBook$sort_dataframe()}}
\item \href{#method-DataBook-rename_dataframe}{\code{DataBook$rename_dataframe()}}
\item \href{#method-DataBook-convert_column_to_type}{\code{DataBook$convert_column_to_type()}}
\item \href{#method-DataBook-append_to_variables_metadata}{\code{DataBook$append_to_variables_metadata()}}
\item \href{#method-DataBook-append_to_dataframe_metadata}{\code{DataBook$append_to_dataframe_metadata()}}
\item \href{#method-DataBook-append_to_metadata}{\code{DataBook$append_to_metadata()}}
\item \href{#method-DataBook-add_metadata_field}{\code{DataBook$add_metadata_field()}}
\item \href{#method-DataBook-reorder_dataframes}{\code{DataBook$reorder_dataframes()}}
\item \href{#method-DataBook-copy_columns}{\code{DataBook$copy_columns()}}
\item \href{#method-DataBook-drop_unused_factor_levels}{\code{DataBook$drop_unused_factor_levels()}}
\item \href{#method-DataBook-set_factor_levels}{\code{DataBook$set_factor_levels()}}
\item \href{#method-DataBook-edit_factor_level}{\code{DataBook$edit_factor_level()}}
\item \href{#method-DataBook-set_factor_reference_level}{\code{DataBook$set_factor_reference_level()}}
\item \href{#method-DataBook-get_column_count}{\code{DataBook$get_column_count()}}
\item \href{#method-DataBook-reorder_factor_levels}{\code{DataBook$reorder_factor_levels()}}
\item \href{#method-DataBook-get_data_type}{\code{DataBook$get_data_type()}}
\item \href{#method-DataBook-copy_data_frame}{\code{DataBook$copy_data_frame()}}
\item \href{#method-DataBook-copy_col_metadata_to_clipboard}{\code{DataBook$copy_col_metadata_to_clipboard()}}
\item \href{#method-DataBook-copy_data_frame_metadata_to_clipboard}{\code{DataBook$copy_data_frame_metadata_to_clipboard()}}
\item \href{#method-DataBook-copy_to_clipboard}{\code{DataBook$copy_to_clipboard()}}
\item \href{#method-DataBook-set_hidden_columns}{\code{DataBook$set_hidden_columns()}}
\item \href{#method-DataBook-unhide_all_columns}{\code{DataBook$unhide_all_columns()}}
\item \href{#method-DataBook-set_hidden_data_frames}{\code{DataBook$set_hidden_data_frames()}}
\item \href{#method-DataBook-get_hidden_data_frames}{\code{DataBook$get_hidden_data_frames()}}
\item \href{#method-DataBook-set_row_names}{\code{DataBook$set_row_names()}}
\item \href{#method-DataBook-get_row_names}{\code{DataBook$get_row_names()}}
\item \href{#method-DataBook-set_protected_columns}{\code{DataBook$set_protected_columns()}}
\item \href{#method-DataBook-get_metadata_fields}{\code{DataBook$get_metadata_fields()}}
\item \href{#method-DataBook-freeze_columns}{\code{DataBook$freeze_columns()}}
\item \href{#method-DataBook-unfreeze_columns}{\code{DataBook$unfreeze_columns()}}
\item \href{#method-DataBook-is_variables_metadata}{\code{DataBook$is_variables_metadata()}}
\item \href{#method-DataBook-data_frame_exists}{\code{DataBook$data_frame_exists()}}
\item \href{#method-DataBook-add_key}{\code{DataBook$add_key()}}
\item \href{#method-DataBook-is_key}{\code{DataBook$is_key()}}
\item \href{#method-DataBook-has_key}{\code{DataBook$has_key()}}
\item \href{#method-DataBook-get_keys}{\code{DataBook$get_keys()}}
\item \href{#method-DataBook-add_new_comment}{\code{DataBook$add_new_comment()}}
\item \href{#method-DataBook-get_comments}{\code{DataBook$get_comments()}}
\item \href{#method-DataBook-get_links}{\code{DataBook$get_links()}}
\item \href{#method-DataBook-set_structure_columns}{\code{DataBook$set_structure_columns()}}
\item \href{#method-DataBook-add_dependent_columns}{\code{DataBook$add_dependent_columns()}}
\item \href{#method-DataBook-set_column_colours}{\code{DataBook$set_column_colours()}}
\item \href{#method-DataBook-has_colours}{\code{DataBook$has_colours()}}
\item \href{#method-DataBook-remove_column_colours}{\code{DataBook$remove_column_colours()}}
\item \href{#method-DataBook-set_column_colours_by_metadata}{\code{DataBook$set_column_colours_by_metadata()}}
\item \href{#method-DataBook-graph_one_variable}{\code{DataBook$graph_one_variable()}}
\item \href{#method-DataBook-make_date_yearmonthday}{\code{DataBook$make_date_yearmonthday()}}
\item \href{#method-DataBook-make_date_yeardoy}{\code{DataBook$make_date_yeardoy()}}
\item \href{#method-DataBook-set_contrasts_of_factor}{\code{DataBook$set_contrasts_of_factor()}}
\item \href{#method-DataBook-create_factor_data_frame}{\code{DataBook$create_factor_data_frame()}}
\item \href{#method-DataBook-split_date}{\code{DataBook$split_date()}}
\item \href{#method-DataBook-make_inventory_plot}{\code{DataBook$make_inventory_plot()}}
\item \href{#method-DataBook-import_NetCDF}{\code{DataBook$import_NetCDF()}}
\item \href{#method-DataBook-infill_missing_dates}{\code{DataBook$infill_missing_dates()}}
\item \href{#method-DataBook-get_key_names}{\code{DataBook$get_key_names()}}
\item \href{#method-DataBook-remove_key}{\code{DataBook$remove_key()}}
\item \href{#method-DataBook-add_climdex_indices}{\code{DataBook$add_climdex_indices()}}
\item \href{#method-DataBook-is_metadata}{\code{DataBook$is_metadata()}}
\item \href{#method-DataBook-get_climatic_column_name}{\code{DataBook$get_climatic_column_name()}}
\item \href{#method-DataBook-merge_data}{\code{DataBook$merge_data()}}
\item \href{#method-DataBook-get_corruption_data_names}{\code{DataBook$get_corruption_data_names()}}
\item \href{#method-DataBook-get_corruption_contract_data_names}{\code{DataBook$get_corruption_contract_data_names()}}
\item \href{#method-DataBook-get_database_variable_names}{\code{DataBook$get_database_variable_names()}}
\item \href{#method-DataBook-get_nc_variable_names}{\code{DataBook$get_nc_variable_names()}}
\item \href{#method-DataBook-has_database_connection}{\code{DataBook$has_database_connection()}}
\item \href{#method-DataBook-database_connect}{\code{DataBook$database_connect()}}
\item \href{#method-DataBook-get_database_connection}{\code{DataBook$get_database_connection()}}
\item \href{#method-DataBook-set_database_connection}{\code{DataBook$set_database_connection()}}
\item \href{#method-DataBook-database_disconnect}{\code{DataBook$database_disconnect()}}
\item \href{#method-DataBook-get_db_table_row_count}{\code{DataBook$get_db_table_row_count()}}
\item \href{#method-DataBook-import_climsoft_metadata}{\code{DataBook$import_climsoft_metadata()}}
\item \href{#method-DataBook-import_climsoft_data}{\code{DataBook$import_climsoft_data()}}
\item \href{#method-DataBook-export_workspace}{\code{DataBook$export_workspace()}}
\item \href{#method-DataBook-set_links}{\code{DataBook$set_links()}}
\item \href{#method-DataBook-display_daily_graph}{\code{DataBook$display_daily_graph()}}
\item \href{#method-DataBook-create_variable_set}{\code{DataBook$create_variable_set()}}
\item \href{#method-DataBook-update_variable_set}{\code{DataBook$update_variable_set()}}
\item \href{#method-DataBook-delete_variable_sets}{\code{DataBook$delete_variable_sets()}}
\item \href{#method-DataBook-get_variable_sets_names}{\code{DataBook$get_variable_sets_names()}}
\item \href{#method-DataBook-get_variable_sets}{\code{DataBook$get_variable_sets()}}
\item \href{#method-DataBook-crops_definitions}{\code{DataBook$crops_definitions()}}
\item \href{#method-DataBook-tidy_climatic_data}{\code{DataBook$tidy_climatic_data()}}
\item \href{#method-DataBook-get_geometry}{\code{DataBook$get_geometry()}}
\item \href{#method-DataBook-package_check}{\code{DataBook$package_check()}}
\item \href{#method-DataBook-download_from_IRI}{\code{DataBook$download_from_IRI()}}
\item \href{#method-DataBook-download_from_IRI_multiple}{\code{DataBook$download_from_IRI_multiple()}}
\item \href{#method-DataBook-patch_climate_element}{\code{DataBook$patch_climate_element()}}
\item \href{#method-DataBook-visualize_element_na}{\code{DataBook$visualize_element_na()}}
\item \href{#method-DataBook-get_data_entry_data}{\code{DataBook$get_data_entry_data()}}
\item \href{#method-DataBook-save_data_entry_data}{\code{DataBook$save_data_entry_data()}}
\item \href{#method-DataBook-import_from_cds}{\code{DataBook$import_from_cds()}}
\item \href{#method-DataBook-add_flag_fields}{\code{DataBook$add_flag_fields()}}
\item \href{#method-DataBook-remove_empty}{\code{DataBook$remove_empty()}}
\item \href{#method-DataBook-replace_values_with_NA}{\code{DataBook$replace_values_with_NA()}}
\item \href{#method-DataBook-has_labels}{\code{DataBook$has_labels()}}
\item \href{#method-DataBook-wrap_or_unwrap_data}{\code{DataBook$wrap_or_unwrap_data()}}
\item \href{#method-DataBook-anova_tables2}{\code{DataBook$anova_tables2()}}
\item \href{#method-DataBook-display_daily_table}{\code{DataBook$display_daily_table()}}
\item \href{#method-DataBook-add_comment}{\code{DataBook$add_comment()}}
\item \href{#method-DataBook-delete_comment}{\code{DataBook$delete_comment()}}
\item \href{#method-DataBook-get_comment_ids}{\code{DataBook$get_comment_ids()}}
\item \href{#method-DataBook-get_comments_as_data_frame}{\code{DataBook$get_comments_as_data_frame()}}
\item \href{#method-DataBook-define_as_options_by_context}{\code{DataBook$define_as_options_by_context()}}
\item \href{#method-DataBook-update_links_rename_data_frame}{\code{DataBook$update_links_rename_data_frame()}}
\item \href{#method-DataBook-update_links_rename_column}{\code{DataBook$update_links_rename_column()}}
\item \href{#method-DataBook-add_link}{\code{DataBook$add_link()}}
\item \href{#method-DataBook-get_link_names}{\code{DataBook$get_link_names()}}
\item \href{#method-DataBook-link_exists_from}{\code{DataBook$link_exists_from()}}
\item \href{#method-DataBook-link_exists_between}{\code{DataBook$link_exists_between()}}
\item \href{#method-DataBook-get_link_between}{\code{DataBook$get_link_between()}}
\item \href{#method-DataBook-link_exists_from_by_to}{\code{DataBook$link_exists_from_by_to()}}
\item \href{#method-DataBook-get_linked_to_data_name}{\code{DataBook$get_linked_to_data_name()}}
\item \href{#method-DataBook-get_linked_to_definition}{\code{DataBook$get_linked_to_definition()}}
\item \href{#method-DataBook-get_possible_linked_to_definition}{\code{DataBook$get_possible_linked_to_definition()}}
\item \href{#method-DataBook-get_equivalent_columns}{\code{DataBook$get_equivalent_columns()}}
\item \href{#method-DataBook-link_between_containing}{\code{DataBook$link_between_containing()}}
\item \href{#method-DataBook-view_link}{\code{DataBook$view_link()}}
\item \href{#method-DataBook-apply_calculation}{\code{DataBook$apply_calculation()}}
\item \href{#method-DataBook-save_calculation}{\code{DataBook$save_calculation()}}
\item \href{#method-DataBook-apply_instat_calculation}{\code{DataBook$apply_instat_calculation()}}
\item \href{#method-DataBook-run_instat_calculation}{\code{DataBook$run_instat_calculation()}}
\item \href{#method-DataBook-get_corresponding_link_columns}{\code{DataBook$get_corresponding_link_columns()}}
\item \href{#method-DataBook-get_link_columns_from_data_frames}{\code{DataBook$get_link_columns_from_data_frames()}}
\item \href{#method-DataBook-save_calc_output}{\code{DataBook$save_calc_output()}}
\item \href{#method-DataBook-append_summaries_to_data_object}{\code{DataBook$append_summaries_to_data_object()}}
\item \href{#method-DataBook-calculate_summary}{\code{DataBook$calculate_summary()}}
\item \href{#method-DataBook-summary}{\code{DataBook$summary()}}
\item \href{#method-DataBook-convert_linked_variable}{\code{DataBook$convert_linked_variable()}}
\item \href{#method-DataBook-remove_unused_station_year_combinations}{\code{DataBook$remove_unused_station_year_combinations()}}
\item \href{#method-DataBook-get_gtcol_names}{\code{DataBook$get_gtcol_names()}}
\item \href{#method-DataBook-get_gtrow_names}{\code{DataBook$get_gtrow_names()}}
\item \href{#method-DataBook-summary_table}{\code{DataBook$summary_table()}}
\item \href{#method-DataBook-define_as_tricot}{\code{DataBook$define_as_tricot()}}
\item \href{#method-DataBook-get_column_tricot_type}{\code{DataBook$get_column_tricot_type()}}
\item \href{#method-DataBook-get_tricot_column_name}{\code{DataBook$get_tricot_column_name()}}
\item \href{#method-DataBook-check_variety_data_level}{\code{DataBook$check_variety_data_level()}}
\item \href{#method-DataBook-check_ID_data_level}{\code{DataBook$check_ID_data_level()}}
\item \href{#method-DataBook-summarise_data_levels}{\code{DataBook$summarise_data_levels()}}
\item \href{#method-DataBook-create_tricot_datasets}{\code{DataBook$create_tricot_datasets()}}
\item \href{#method-DataBook-import_SST}{\code{DataBook$import_SST()}}
\item \href{#method-DataBook-clone}{\code{DataBook$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-new"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new DataBook object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$new(
  data_tables = list(),
  instat_obj_metadata = list(),
  data_tables_variables_metadata = rep(list(data.frame()), length(data_tables)),
  data_tables_metadata = rep(list(list()), length(data_tables)),
  data_tables_filters = rep(list(list()), length(data_tables)),
  data_tables_column_selections = rep(list(list()), length(data_tables)),
  imported_from = as.list(rep("", length(data_tables))),
  messages = TRUE,
  convert = TRUE,
  create = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_tables}}{A list of data frames to be included in the DataBook.}

\item{\code{instat_obj_metadata}}{Metadata for the instat object.}

\item{\code{data_tables_variables_metadata}}{A list of data frames, each containing metadata for the corresponding data table.}

\item{\code{data_tables_metadata}}{A list of lists, each containing metadata for the corresponding data table.}

\item{\code{data_tables_filters}}{A list of lists, each containing filter information for the corresponding data table.}

\item{\code{data_tables_column_selections}}{A list of lists, each containing column selection information for the corresponding data table.}

\item{\code{imported_from}}{A list of strings indicating the source from which each data table was imported.}

\item{\code{messages}}{A boolean indicating whether to display messages.}

\item{\code{convert}}{A boolean indicating whether to perform data conversion.}

\item{\code{create}}{A boolean indicating whether to create new data objects.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-standardise_country_names"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-standardise_country_names}{}}}
\subsection{Method \code{standardise_country_names()}}{
Standardise country names in the specified data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$standardise_country_names(data_name, country_columns = c())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{country_columns}}{A vector of column names containing country data.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-define_as_climatic"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-define_as_climatic}{}}}
\subsection{Method \code{define_as_climatic()}}{
Define a data table as climatic data.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$define_as_climatic(data_name, types, key_col_names, key_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{types}}{A vector specifying the types of climatic data.}

\item{\code{key_col_names}}{A vector of column names to be used as keys.}

\item{\code{key_name}}{The name of the key.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-define_corruption_outputs"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-define_corruption_outputs}{}}}
\subsection{Method \code{define_corruption_outputs()}}{
Define corruption output columns in the specified data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$define_corruption_outputs(data_name, output_columns = c())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{output_columns}}{A vector of column names to be defined as corruption outputs.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-define_red_flags"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-define_red_flags}{}}}
\subsection{Method \code{define_red_flags()}}{
Define red flag columns in the specified data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$define_red_flags(data_name, red_flags = c())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{red_flags}}{A vector of column names to be defined as red flags.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-define_as_procurement"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-define_as_procurement}{}}}
\subsection{Method \code{define_as_procurement()}}{
Define a data table as procurement data.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$define_as_procurement(
  data_name,
  primary_types = c(),
  calculated_types = c(),
  country_data_name,
  country_types,
  auto_generate = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{primary_types}}{A vector of primary types of procurement data.}

\item{\code{calculated_types}}{A vector of calculated types of procurement data.}

\item{\code{country_data_name}}{The name of the country-level data table.}

\item{\code{country_types}}{A vector of types for the country-level data.}

\item{\code{auto_generate}}{A boolean indicating whether to auto-generate procurement types.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-define_as_procurement_country_level_data"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-define_as_procurement_country_level_data}{}}}
\subsection{Method \code{define_as_procurement_country_level_data()}}{
Define a data table as procurement country-level data.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$define_as_procurement_country_level_data(
  data_name,
  contract_level_data_name,
  types = c(),
  auto_generate = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{contract_level_data_name}}{The name of the contract-level data table.}

\item{\code{types}}{A vector of types for the procurement country-level data.}

\item{\code{auto_generate}}{A boolean indicating whether to auto-generate procurement types.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_CRI_component_column_names"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_CRI_component_column_names}{}}}
\subsection{Method \code{get_CRI_component_column_names()}}{
Get the names of CRI component columns in the specified data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_CRI_component_column_names(data_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector of CRI component column names.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_red_flag_column_names"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_red_flag_column_names}{}}}
\subsection{Method \code{get_red_flag_column_names()}}{
Get the names of red flag columns in the specified data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_red_flag_column_names(data_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector of red flag column names.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_CRI_column_names"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_CRI_column_names}{}}}
\subsection{Method \code{get_CRI_column_names()}}{
Get the names of CRI columns in the specified data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_CRI_column_names(data_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector of CRI column names.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_corruption_column_name"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_corruption_column_name}{}}}
\subsection{Method \code{get_corruption_column_name()}}{
Get the name of the corruption column in the specified data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_corruption_column_name(data_name, type)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{type}}{The type of the corruption column.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The name of the corruption column.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-import_data"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-import_data}{}}}
\subsection{Method \code{import_data()}}{
Imports data tables and their associated metadata into the DataBook object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$import_data(
  data_tables = list(),
  data_tables_variables_metadata = rep(list(data.frame()), length(data_tables)),
  data_tables_metadata = rep(list(list()), length(data_tables)),
  data_tables_filters = rep(list(list()), length(data_tables)),
  data_tables_column_selections = rep(list(list()), length(data_tables)),
  imported_from = as.list(rep("", length(data_tables))),
  data_names = NULL,
  messages = TRUE,
  convert = TRUE,
  create = TRUE,
  prefix = TRUE,
  add_to_graph_book = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_tables}}{A list of data tables to be imported.}

\item{\code{data_tables_variables_metadata}}{Metadata for the variables of each data table.}

\item{\code{data_tables_metadata}}{General metadata for each data table.}

\item{\code{data_tables_filters}}{Filters applied to each data table.}

\item{\code{data_tables_column_selections}}{Column selections for each data table.}

\item{\code{imported_from}}{The origin/source of the imported data.}

\item{\code{data_names}}{Optional names for the data tables.}

\item{\code{messages}}{A boolean indicating if messages should be displayed.}

\item{\code{convert}}{A boolean indicating if data conversion should occur.}

\item{\code{create}}{A boolean to create new data objects.}

\item{\code{prefix}}{A boolean indicating whether to prefix data names.}

\item{\code{add_to_graph_book}}{A boolean to add the data to a graph book.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-replace_instat_object"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-replace_instat_object}{}}}
\subsection{Method \code{replace_instat_object()}}{
Replaces the instat object in the DataBook.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$replace_instat_object(new_instat_object)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{new_instat_object}}{The new instat object to replace the existing one.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-set_data_objects"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-set_data_objects}{}}}
\subsection{Method \code{set_data_objects()}}{
Sets the data objects within the DataBook.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$set_data_objects(new_data_objects)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{new_data_objects}}{A list of data objects to be set.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-copy_data_object"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-copy_data_object}{}}}
\subsection{Method \code{copy_data_object()}}{
Copies a data object with an optional filter and column selection.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$copy_data_object(
  data_name,
  new_name,
  filter_name = "",
  column_selection_name = "",
  reset_row_names = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data object to copy.}

\item{\code{new_name}}{The new name for the copied data object.}

\item{\code{filter_name}}{Optional filter to apply during the copy.}

\item{\code{column_selection_name}}{Optional column selection to apply during the copy.}

\item{\code{reset_row_names}}{A boolean indicating whether to reset row names.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-import_RDS"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-import_RDS}{}}}
\subsection{Method \code{import_RDS()}}{
Imports data from an RDS file into the DataBook.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$import_RDS(
  data_RDS,
  keep_existing = TRUE,
  overwrite_existing = FALSE,
  include_objects = TRUE,
  include_metadata = TRUE,
  include_logs = TRUE,
  include_filters = TRUE,
  include_column_selections = TRUE,
  include_calculations = TRUE,
  include_comments = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_RDS}}{The RDS file containing data.}

\item{\code{keep_existing}}{A boolean to keep existing data.}

\item{\code{overwrite_existing}}{A boolean to overwrite existing data if necessary.}

\item{\code{include_objects}}{A boolean to include objects in the import.}

\item{\code{include_metadata}}{A boolean to include metadata in the import.}

\item{\code{include_logs}}{A boolean to include logs in the import.}

\item{\code{include_filters}}{A boolean to include filters in the import.}

\item{\code{include_column_selections}}{A boolean to include column selections in the import.}

\item{\code{include_calculations}}{A boolean to include calculations in the import.}

\item{\code{include_comments}}{A boolean to include comments in the import.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-clone_data_object"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-clone_data_object}{}}}
\subsection{Method \code{clone_data_object()}}{
Clones a data object with options to include metadata, logs, filters, etc.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$clone_data_object(
  curr_data_object,
  include_objects = TRUE,
  include_metadata = TRUE,
  include_logs = TRUE,
  include_filters = TRUE,
  include_column_selections = TRUE,
  include_calculations = TRUE,
  include_comments = TRUE,
  include_scalars = TRUE,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{curr_data_object}}{The current data object to be cloned.}

\item{\code{include_objects}}{A boolean to include objects in the clone.}

\item{\code{include_metadata}}{A boolean to include metadata in the clone.}

\item{\code{include_logs}}{A boolean to include logs in the clone.}

\item{\code{include_filters}}{A boolean to include filters in the clone.}

\item{\code{include_column_selections}}{A boolean to include column selections in the clone.}

\item{\code{include_calculations}}{A boolean to include calculations in the clone.}

\item{\code{include_comments}}{A boolean to include comments in the clone.}

\item{\code{include_scalars}}{A boolean to include scalars in the clone.}

\item{\code{...}}{Additional arguments passed to other methods.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-clone_instat_calculation"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-clone_instat_calculation}{}}}
\subsection{Method \code{clone_instat_calculation()}}{
Clones an instat calculation with manipulations and sub-calculations.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$clone_instat_calculation(curr_instat_calculation, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{curr_instat_calculation}}{The current instat calculation to be cloned.}

\item{\code{...}}{Additional arguments passed to other methods.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-import_from_ODK"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-import_from_ODK}{}}}
\subsection{Method \code{import_from_ODK()}}{
Imports data from an ODK platform.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$import_from_ODK(username, form_name, platform)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{username}}{The username for ODK.}

\item{\code{form_name}}{The name of the ODK form.}

\item{\code{platform}}{The platform used for ODK.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-set_meta"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-set_meta}{}}}
\subsection{Method \code{set_meta()}}{
Sets metadata for the DataBook.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$set_meta(new_meta)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{new_meta}}{A list of metadata to be set.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-set_objects"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-set_objects}{}}}
\subsection{Method \code{set_objects()}}{
Sets objects in the DataBook.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$set_objects(new_objects)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{new_objects}}{A list of objects to be set.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-set_undo_history"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-set_undo_history}{}}}
\subsection{Method \code{set_undo_history()}}{
Set the undo history for the DataBook.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$set_undo_history(new_undo_history)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{new_undo_history}}{List, new undo history to set.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-set_scalars"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-set_scalars}{}}}
\subsection{Method \code{set_scalars()}}{
Set the scalars for the DataBook.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$set_scalars(new_scalars)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{new_scalars}}{List, new scalars to set.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_scalars"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_scalars}{}}}
\subsection{Method \code{get_scalars()}}{
Retrieve scalars for a specific data object or overall DataBook.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_scalars(data_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{Character, the name of the data object to retrieve scalars for. Defaults to overall DataBook if NULL or \code{overall_label}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
List of scalars.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_scalar_names"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_scalar_names}{}}}
\subsection{Method \code{get_scalar_names()}}{
Retrieve scalar names for a specific data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_scalar_names(
  data_name,
  as_list = FALSE,
  excluded_items = c(),
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{as_list}}{A boolean indicating whether to return results as a list.}

\item{\code{excluded_items}}{A vector of excluded items.}

\item{\code{...}}{Additional arguments passed to other methods.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_scalar_value"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_scalar_value}{}}}
\subsection{Method \code{get_scalar_value()}}{
Retrieve the value of a specific scalar for a given data object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_scalar_value(data_name, scalar_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{Character, the name of the data object.}

\item{\code{scalar_name}}{Character, the name of the scalar to retrieve.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The value of the specified scalar.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-add_scalar"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-add_scalar}{}}}
\subsection{Method \code{add_scalar()}}{
Add a scalar to a specific data object or the overall DataBook.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$add_scalar(data_name, scalar_name = "", scalar_value)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{Character, the name of the data object. Adds to the overall DataBook if NULL or \code{overall_label}.}

\item{\code{scalar_name}}{Character, the name of the scalar. Defaults to a generated name if missing.}

\item{\code{scalar_value}}{The value of the scalar to add.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-set_enable_disable_undo"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-set_enable_disable_undo}{}}}
\subsection{Method \code{set_enable_disable_undo()}}{
Enable or disable undo functionality for a specific data object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$set_enable_disable_undo(data_name, disable_undo)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{Character, the name of the data object.}

\item{\code{disable_undo}}{Logical, whether to disable undo functionality.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-is_undo"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-is_undo}{}}}
\subsection{Method \code{is_undo()}}{
Check if undo functionality is enabled for a specific data object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$is_undo(data_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{Character, the name of the data object.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Logical, whether undo is enabled.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-has_undo_history"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-has_undo_history}{}}}
\subsection{Method \code{has_undo_history()}}{
Check if there is undo history for a specific data object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$has_undo_history(data_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{Character, the name of the data object.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Logical, whether undo history exists.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-undo_last_action"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-undo_last_action}{}}}
\subsection{Method \code{undo_last_action()}}{
Undo the last action for a specific data object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$undo_last_action(data_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{Character, the name of the data object.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-redo_last_action"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-redo_last_action}{}}}
\subsection{Method \code{redo_last_action()}}{
Redo the last undone action for a specific data object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$redo_last_action(data_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{Character, the name of the data object.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_column_climatic_type"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_column_climatic_type}{}}}
\subsection{Method \code{get_column_climatic_type()}}{
Retrieve the climatic type attribute for a specific column in a given data object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_column_climatic_type(data_name, col_name, attr_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{Character, the name of the data object.}

\item{\code{col_name}}{Character, the name of the column.}

\item{\code{attr_name}}{Character, the name of the attribute to retrieve.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The value of the specified attribute, or NULL if not available.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-append_data_object"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-append_data_object}{}}}
\subsection{Method \code{append_data_object()}}{
Appends a data object to the DataBook.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$append_data_object(name, obj, add_to_graph_book = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{The name of the data object.}

\item{\code{obj}}{The data object to append.}

\item{\code{add_to_graph_book}}{A boolean to add the data to the graph book.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_data_objects"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_data_objects}{}}}
\subsection{Method \code{get_data_objects()}}{
Retrieve data objects from the DataBook by name.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_data_objects(data_name, as_list = FALSE, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name or index of the data object(s) to retrieve.}

\item{\code{as_list}}{A boolean to return the data objects as a list (default: FALSE).}

\item{\code{...}}{Additional arguments passed to other methods.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_data_frame"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_data_frame}{}}}
\subsection{Method \code{get_data_frame()}}{
Retrieve data frames from the DataBook.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_data_frame(
  data_name,
  convert_to_character = FALSE,
  stack_data = FALSE,
  include_hidden_columns = TRUE,
  use_current_filter = TRUE,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data frame to retrieve.}

\item{\code{convert_to_character}}{A boolean indicating whether to convert data to character type (default: FALSE).}

\item{\code{stack_data}}{A boolean to stack data (default: FALSE).}

\item{\code{include_hidden_columns}}{A boolean to include hidden columns (default: TRUE).}

\item{\code{use_current_filter}}{A boolean to apply the current filter (default: TRUE).}

\item{\code{...}}{Additional arguments passed to other methods.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_variables_metadata"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_variables_metadata}{}}}
\subsection{Method \code{get_variables_metadata()}}{
Retrieve metadata for variables in a data frame.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_variables_metadata(
  data_name,
  data_type = "all",
  convert_to_character = FALSE,
  property,
  column,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data frame.}

\item{\code{data_type}}{The type of data to retrieve (default: "all").}

\item{\code{convert_to_character}}{A boolean indicating whether to convert data to character type (default: FALSE).}

\item{\code{property}}{The specific property to retrieve.}

\item{\code{column}}{The column for which metadata is to be retrieved.}

\item{\code{...}}{Additional arguments passed to other methods.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_variables_from_metadata"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_variables_from_metadata}{}}}
\subsection{Method \code{get_variables_from_metadata()}}{
Get the names of the variable given a specified metadata.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_variables_from_metadata(data_name, property, property_value)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{A character string. The name of the dataset to look up in the data book.}

\item{\code{property}}{A character string. The name of the metadata property (column) to filter by.}

\item{\code{property_value}}{A value to match in the selected metadata property.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A character vector of variable names where the metadata property equals the specified value.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_column_data_types"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_column_data_types}{}}}
\subsection{Method \code{get_column_data_types()}}{
Retrieve data types for specific columns in a data frame.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_column_data_types(data_name, columns)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data frame.}

\item{\code{columns}}{A vector of columns to retrieve the data types for.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_column_labels"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_column_labels}{}}}
\subsection{Method \code{get_column_labels()}}{
Retrieve labels for specific columns in a data frame.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_column_labels(data_name, columns)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data frame.}

\item{\code{columns}}{A vector of columns to retrieve the labels for.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_data_frame_label"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_data_frame_label}{}}}
\subsection{Method \code{get_data_frame_label()}}{
Retrieve the label of a data frame.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_data_frame_label(data_name, use_current_filter = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data frame.}

\item{\code{use_current_filter}}{A boolean indicating whether to use the current filter (default: FALSE).}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_data_frame_metadata"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_data_frame_metadata}{}}}
\subsection{Method \code{get_data_frame_metadata()}}{
Retrieve metadata for a data frame.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_data_frame_metadata(
  data_name,
  label,
  include_calculated = TRUE,
  excluded_not_for_display = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data frame.}

\item{\code{label}}{The label for the metadata to retrieve.}

\item{\code{include_calculated}}{A boolean indicating whether to include calculated columns (default: TRUE).}

\item{\code{excluded_not_for_display}}{A boolean to exclude columns not for display (default: TRUE).}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_combined_metadata"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_combined_metadata}{}}}
\subsection{Method \code{get_combined_metadata()}}{
Retrieve combined metadata across all data objects in the DataBook.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_combined_metadata(convert_to_character = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{convert_to_character}}{A boolean to convert the metadata to a character matrix (default: FALSE).}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_metadata"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_metadata}{}}}
\subsection{Method \code{get_metadata()}}{
Retrieve metadata for a specific property.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_metadata(name, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{The name of the metadata to retrieve.}

\item{\code{...}}{Additional arguments passed to other methods.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_data_names"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_data_names}{}}}
\subsection{Method \code{get_data_names()}}{
Retrieve data names from the data book.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_data_names(
  as_list = FALSE,
  include,
  exclude,
  excluded_items,
  include_hidden = TRUE,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{as_list}}{A boolean indicating whether to return results as a list.}

\item{\code{include}}{A vector of names to include.}

\item{\code{exclude}}{A vector of names to exclude.}

\item{\code{excluded_items}}{A vector of excluded items.}

\item{\code{include_hidden}}{A boolean indicating whether to include hidden items.}

\item{\code{...}}{Additional arguments passed to other methods.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_data_changed"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_data_changed}{}}}
\subsection{Method \code{get_data_changed()}}{
Check if data has changed.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_data_changed(data_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table to check.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_variables_metadata_changed"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_variables_metadata_changed}{}}}
\subsection{Method \code{get_variables_metadata_changed()}}{
Check if variables metadata has changed.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_variables_metadata_changed(data_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table to check.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_metadata_changed"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_metadata_changed}{}}}
\subsection{Method \code{get_metadata_changed()}}{
Check if metadata has changed.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_metadata_changed(data_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table to check.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_calculations"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_calculations}{}}}
\subsection{Method \code{get_calculations()}}{
Retrieve calculations for a specific data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_calculations(data_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_calculation_names"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_calculation_names}{}}}
\subsection{Method \code{get_calculation_names()}}{
Retrieve calculation names for a specific data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_calculation_names(
  data_name,
  as_list = FALSE,
  excluded_items = c()
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{as_list}}{A boolean indicating whether to return results as a list.}

\item{\code{excluded_items}}{A vector of excluded items.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-dataframe_count"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-dataframe_count}{}}}
\subsection{Method \code{dataframe_count()}}{
Get the count of data frames in the DataBook.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$dataframe_count()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
An integer representing the number of data frames.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-set_data_frames_changed"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-set_data_frames_changed}{}}}
\subsection{Method \code{set_data_frames_changed()}}{
Set the data changed status for the specified data frame.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$set_data_frames_changed(data_name = "", new_val)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data frame. Defaults to an empty string.}

\item{\code{new_val}}{A boolean indicating the new changed status.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-set_variables_metadata_changed"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-set_variables_metadata_changed}{}}}
\subsection{Method \code{set_variables_metadata_changed()}}{
Set the variables metadata changed status for the specified data frame.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$set_variables_metadata_changed(data_name = "", new_val)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data frame. Defaults to an empty string.}

\item{\code{new_val}}{A boolean indicating the new changed status.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-set_metadata_changed"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-set_metadata_changed}{}}}
\subsection{Method \code{set_metadata_changed()}}{
Set the metadata changed status for the specified data frame.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$set_metadata_changed(data_name = "", new_val)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data frame. Defaults to an empty string.}

\item{\code{new_val}}{A boolean indicating the new changed status.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-add_columns_to_data"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-add_columns_to_data}{}}}
\subsection{Method \code{add_columns_to_data()}}{
Add columns to the specified data frame.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$add_columns_to_data(
  data_name,
  col_name = "",
  col_data,
  use_col_name_as_prefix = FALSE,
  hidden = FALSE,
  before,
  adjacent_column = "",
  num_cols,
  require_correct_length = TRUE,
  keep_existing_position = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data frame.}

\item{\code{col_name}}{The name of the new column.}

\item{\code{col_data}}{The data for the new column.}

\item{\code{use_col_name_as_prefix}}{A boolean indicating if the column name should be prefixed.}

\item{\code{hidden}}{A boolean indicating if the column should be hidden.}

\item{\code{before}}{The name of the column before which to insert the new column.}

\item{\code{adjacent_column}}{The name of an adjacent column.}

\item{\code{num_cols}}{The number of columns to add.}

\item{\code{require_correct_length}}{A boolean indicating if the lengths of the data should match.}

\item{\code{keep_existing_position}}{A boolean indicating if the existing column position should be maintained.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_columns_from_data"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_columns_from_data}{}}}
\subsection{Method \code{get_columns_from_data()}}{
Get specified columns from the data frame.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_columns_from_data(
  data_name,
  col_names,
  from_stacked_data = FALSE,
  force_as_data_frame = FALSE,
  use_current_filter = TRUE,
  remove_labels = FALSE,
  drop_unused_filter_levels = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data frame.}

\item{\code{col_names}}{A vector of column names to retrieve.}

\item{\code{from_stacked_data}}{A boolean indicating if the data is stacked.}

\item{\code{force_as_data_frame}}{A boolean indicating if the output should be a data frame.}

\item{\code{use_current_filter}}{A boolean indicating if the current filter should be used.}

\item{\code{remove_labels}}{A boolean indicating if labels should be removed.}

\item{\code{drop_unused_filter_levels}}{A boolean indicating if unused filter levels should be dropped.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-create_graph_data_book"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-create_graph_data_book}{}}}
\subsection{Method \code{create_graph_data_book()}}{
Create a new graph data book and assign it to the global environment.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$create_graph_data_book()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-add_object"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-add_object}{}}}
\subsection{Method \code{add_object()}}{
Add an object to the DataBook.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$add_object(
  data_name = NULL,
  object_name = NULL,
  object_type_label,
  object_format,
  object
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data frame.}

\item{\code{object_name}}{The name of the object. If NULL, a default name is generated.}

\item{\code{object_type_label}}{The label for the object type.}

\item{\code{object_format}}{The format of the object.}

\item{\code{object}}{The object to add.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_object_names"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_object_names}{}}}
\subsection{Method \code{get_object_names()}}{
Get the names of objects in the DataBook.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_object_names(
  data_name = NULL,
  object_type_label = NULL,
  as_list = FALSE,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data frame.}

\item{\code{object_type_label}}{The label for the object type.}

\item{\code{as_list}}{A boolean indicating if the output should be a list.}

\item{\code{...}}{Additional arguments passed to other methods.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector of object names.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_objects"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_objects}{}}}
\subsection{Method \code{get_objects()}}{
Get objects from the DataBook.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_objects(data_name = NULL, object_type_label = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data frame.}

\item{\code{object_type_label}}{The label for the object type.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list of objects.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_object"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_object}{}}}
\subsection{Method \code{get_object()}}{
Get a specific object from the DataBook.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_object(data_name = NULL, object_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data frame.}

\item{\code{object_name}}{The name of the object to retrieve.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The requested object, or NULL if not found.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_object_data"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_object_data}{}}}
\subsection{Method \code{get_object_data()}}{
Get the data of a specific object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_object_data(data_name = NULL, object_name, as_file = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data frame.}

\item{\code{object_name}}{The name of the object.}

\item{\code{as_file}}{A boolean indicating if the output should be formatted as a file.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The object data or NULL if not found.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_objects_data"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_objects_data}{}}}
\subsection{Method \code{get_objects_data()}}{
Retrieve data objects from a specified data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_objects_data(
  data_name = NULL,
  object_names = NULL,
  as_files = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{object_names}}{A character vector of object names to retrieve.}

\item{\code{as_files}}{A boolean indicating whether to return data as files.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_last_object_data"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_last_object_data}{}}}
\subsection{Method \code{get_last_object_data()}}{
Retrieve the last object data based on the specified type label.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_last_object_data(object_type_label, as_file = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{object_type_label}}{The label of the object type to retrieve.}

\item{\code{as_file}}{A boolean indicating whether to return the data as a file.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-rename_object"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-rename_object}{}}}
\subsection{Method \code{rename_object()}}{
Rename an object within a specified data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$rename_object(
  data_name,
  object_name,
  new_name,
  object_type = "object"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{object_name}}{The current name of the object to rename.}

\item{\code{new_name}}{The new name for the object.}

\item{\code{object_type}}{The type of the object being renamed.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-delete_objects"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-delete_objects}{}}}
\subsection{Method \code{delete_objects()}}{
Delete specified objects from a data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$delete_objects(data_name, object_names, object_type = "object")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{object_names}}{A character vector of object names to delete.}

\item{\code{object_type}}{The type of the objects being deleted.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-reorder_objects"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-reorder_objects}{}}}
\subsection{Method \code{reorder_objects()}}{
Reorder objects in a specified data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$reorder_objects(data_name, new_order)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{new_order}}{A character vector specifying the new order of object names.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_from_object"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_from_object}{}}}
\subsection{Method \code{get_from_object()}}{
Retrieve a value from a specified object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_from_object(data_name, object_name, value1, value2, value3)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{object_name}}{The name of the object to retrieve data from.}

\item{\code{value1}}{The first value/key to retrieve.}

\item{\code{value2}}{The second value/key to retrieve.}

\item{\code{value3}}{The third value/key to retrieve.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-add_filter"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-add_filter}{}}}
\subsection{Method \code{add_filter()}}{
Add a filter to the specified data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$add_filter(
  data_name,
  filter,
  filter_name = "",
  replace = TRUE,
  set_as_current_filter = FALSE,
  na.rm = TRUE,
  is_no_filter = FALSE,
  and_or = "&",
  inner_not = FALSE,
  outer_not = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{filter}}{The filter to apply.}

\item{\code{filter_name}}{The name of the filter.}

\item{\code{replace}}{A boolean indicating whether to replace existing filters.}

\item{\code{set_as_current_filter}}{A boolean indicating whether to set this filter as the current filter.}

\item{\code{na.rm}}{A boolean indicating whether to remove NA values.}

\item{\code{is_no_filter}}{A boolean indicating whether this is a "no filter".}

\item{\code{and_or}}{A string indicating whether to apply AND or OR logic.}

\item{\code{inner_not}}{A boolean for inner negation.}

\item{\code{outer_not}}{A boolean for outer negation.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-add_filter_as_levels"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-add_filter_as_levels}{}}}
\subsection{Method \code{add_filter_as_levels()}}{
Add a filter as levels for a specified column in the data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$add_filter_as_levels(data_name, filter_levels, column)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{filter_levels}}{The levels of the filter to add.}

\item{\code{column}}{The column to apply the filter to.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-current_filter"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-current_filter}{}}}
\subsection{Method \code{current_filter()}}{
Retrieve the current filter applied to a specified data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$current_filter(data_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The current filter.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-set_current_filter"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-set_current_filter}{}}}
\subsection{Method \code{set_current_filter()}}{
Set the current filter for a specified data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$set_current_filter(data_name, filter_name = "")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{filter_name}}{The name of the filter to set as current.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_filter"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_filter}{}}}
\subsection{Method \code{get_filter()}}{
Retrieve a specific filter by name.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_filter(data_name, filter_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{filter_name}}{The name of the filter to retrieve.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The requested filter.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_filter_as_logical"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_filter_as_logical}{}}}
\subsection{Method \code{get_filter_as_logical()}}{
Retrieve a filter as a logical vector.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_filter_as_logical(data_name, filter_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{filter_name}}{The name of the filter to retrieve.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A logical vector representing the filter.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_current_filter"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_current_filter}{}}}
\subsection{Method \code{get_current_filter()}}{
Retrieve the currently applied filter for a specified data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_current_filter(data_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The currently applied filter.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_filter_row_names"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_filter_row_names}{}}}
\subsection{Method \code{get_filter_row_names()}}{
Retrieve row names based on a specific filter for a data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_filter_row_names(data_name, filter_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{filter_name}}{The name of the filter to use for retrieval.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector of row names.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_current_filter_name"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_current_filter_name}{}}}
\subsection{Method \code{get_current_filter_name()}}{
Retrieve the name of the current filter for a specified data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_current_filter_name(data_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The name of the current filter.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_filter_names"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_filter_names}{}}}
\subsection{Method \code{get_filter_names()}}{
Retrieve the names of all filters for a specified data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_filter_names(
  data_name,
  as_list = FALSE,
  include = list(),
  exclude = list(),
  excluded_items = c()
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{as_list}}{A boolean indicating whether to return as a list.}

\item{\code{include}}{A list of items to include.}

\item{\code{exclude}}{A list of items to exclude.}

\item{\code{excluded_items}}{A vector of excluded items.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector or list of filter names.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-remove_current_filter"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-remove_current_filter}{}}}
\subsection{Method \code{remove_current_filter()}}{
Remove the current filter from a specified data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$remove_current_filter(data_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-filter_applied"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-filter_applied}{}}}
\subsection{Method \code{filter_applied()}}{
Check if a filter is applied to a specified data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$filter_applied(data_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A boolean indicating if a filter is applied.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-filter_string"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-filter_string}{}}}
\subsection{Method \code{filter_string()}}{
Retrieve the string representation of a specific filter.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$filter_string(data_name, filter_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{filter_name}}{The name of the filter to retrieve the string for.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A string representation of the filter.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_filter_as_instat_calculation"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_filter_as_instat_calculation}{}}}
\subsection{Method \code{get_filter_as_instat_calculation()}}{
Retrieve a filter as an Instat calculation.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_filter_as_instat_calculation(data_name, filter_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{filter_name}}{The name of the filter to retrieve.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The filter as an Instat calculation.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-add_column_selection"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-add_column_selection}{}}}
\subsection{Method \code{add_column_selection()}}{
Add a column selection to a data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$add_column_selection(
  data_name,
  column_selection,
  name = "",
  replace = TRUE,
  set_as_current = FALSE,
  is_everything = FALSE,
  and_or = "|"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{column_selection}}{The selection of columns.}

\item{\code{name}}{Optional name for the selection.}

\item{\code{replace}}{Logical indicating if the selection should replace an existing one.}

\item{\code{set_as_current}}{Logical indicating if the selection should be set as current.}

\item{\code{is_everything}}{Logical indicating if all columns should be selected.}

\item{\code{and_or}}{String indicating the logical operator to use.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-current_column_selection"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-current_column_selection}{}}}
\subsection{Method \code{current_column_selection()}}{
Get the current column selection for a data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$current_column_selection(data_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The current column selection.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-set_current_column_selection"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-set_current_column_selection}{}}}
\subsection{Method \code{set_current_column_selection()}}{
Set the current column selection for a data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$set_current_column_selection(data_name, name = "")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{name}}{The name of the column selection to set as current.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_column_selection"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_column_selection}{}}}
\subsection{Method \code{get_column_selection()}}{
Get a specific column selection from a data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_column_selection(data_name, name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{name}}{The name of the column selection to retrieve.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The specified column selection.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_column_selection_column_names"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_column_selection_column_names}{}}}
\subsection{Method \code{get_column_selection_column_names()}}{
Get column names from a specified filter in a data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_column_selection_column_names(data_name, filter_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{filter_name}}{The name of the filter.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Logical representation of the filter applied to column names.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_column_selected_column_names"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_column_selected_column_names}{}}}
\subsection{Method \code{get_column_selected_column_names()}}{
Get column names selected in a specific column selection.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_column_selected_column_names(
  data_name,
  column_selection_name = ""
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{column_selection_name}}{Optional name of the column selection.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector of selected column names.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_current_column_selection"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_current_column_selection}{}}}
\subsection{Method \code{get_current_column_selection()}}{
Get the current column selection for a data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_current_column_selection(data_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The current column selection object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_current_column_selection_name"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_current_column_selection_name}{}}}
\subsection{Method \code{get_current_column_selection_name()}}{
Get the name of the current column selection for a data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_current_column_selection_name(data_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The name of the current column selection.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_column_selection_names"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_column_selection_names}{}}}
\subsection{Method \code{get_column_selection_names()}}{
Get names of all column selections for a data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_column_selection_names(
  data_name,
  as_list = FALSE,
  include = list(),
  exclude = list(),
  excluded_items = c()
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{as_list}}{Logical indicating if results should be returned as a list.}

\item{\code{include}}{List of items to include.}

\item{\code{exclude}}{List of items to exclude.}

\item{\code{excluded_items}}{Optional vector of excluded items.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list or vector of column selection names.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-remove_current_column_selection"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-remove_current_column_selection}{}}}
\subsection{Method \code{remove_current_column_selection()}}{
Remove the current column selection for a data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$remove_current_column_selection(data_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-column_selection_string"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-column_selection_string}{}}}
\subsection{Method \code{column_selection_string()}}{
Get the column selection as a string.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$column_selection_string(data_name, name = "")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{name}}{Character, the name of the column selection.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character, the column selection as a string.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-column_selection_applied"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-column_selection_applied}{}}}
\subsection{Method \code{column_selection_applied()}}{
Check if a column selection has been applied to a data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$column_selection_applied(data_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Logical indicating if a selection has been applied.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-replace_value_in_data"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-replace_value_in_data}{}}}
\subsection{Method \code{replace_value_in_data()}}{
Replace values in the data of a specified table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$replace_value_in_data(
  data_name,
  col_names,
  rows,
  old_value,
  old_is_missing = FALSE,
  start_value = NA,
  end_value = NA,
  new_value,
  new_is_missing = FALSE,
  closed_start_value = TRUE,
  closed_end_value = TRUE,
  locf = FALSE,
  from_last = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{col_names}}{Names of the columns to modify.}

\item{\code{rows}}{The rows to be modified.}

\item{\code{old_value}}{The value to replace.}

\item{\code{old_is_missing}}{Logical indicating if old_value is missing.}

\item{\code{start_value}}{Optional starting value for replacement.}

\item{\code{end_value}}{Optional ending value for replacement.}

\item{\code{new_value}}{The new value to replace with.}

\item{\code{new_is_missing}}{Logical indicating if new_value is missing.}

\item{\code{closed_start_value}}{Logical for start value closure.}

\item{\code{closed_end_value}}{Logical for end value closure.}

\item{\code{locf}}{Logical indicating if last observation carried forward should be used.}

\item{\code{from_last}}{Logical indicating if the replacement should start from the last.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-paste_from_clipboard"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-paste_from_clipboard}{}}}
\subsection{Method \code{paste_from_clipboard()}}{
Paste data from the clipboard into a specified data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$paste_from_clipboard(
  data_name,
  col_names,
  start_row_pos = 1,
  first_clip_row_is_header = TRUE,
  clip_board_text
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{col_names}}{Names of the columns to paste into.}

\item{\code{start_row_pos}}{Position to start pasting in the data.}

\item{\code{first_clip_row_is_header}}{Logical indicating if the first row of the clipboard is a header.}

\item{\code{clip_board_text}}{The text to paste from the clipboard.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-rename_column_in_data"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-rename_column_in_data}{}}}
\subsection{Method \code{rename_column_in_data()}}{
Rename a column in the data of a specified table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$rename_column_in_data(
  data_name,
  column_name = NULL,
  new_val = NULL,
  label = "",
  type = "single",
  .fn,
  .cols = everything(),
  new_column_names_df,
  new_labels_df,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{column_name}}{Optional name of the column to rename.}

\item{\code{new_val}}{The new name for the column.}

\item{\code{label}}{Optional label for the column.}

\item{\code{type}}{Type of renaming operation.}

\item{\code{.fn}}{Optional function for renaming.}

\item{\code{.cols}}{Optional columns to rename.}

\item{\code{new_column_names_df}}{Data frame with new column names.}

\item{\code{new_labels_df}}{Data frame with new labels.}

\item{\code{...}}{Additional arguments passed to other methods.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-frequency_tables"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-frequency_tables}{}}}
\subsection{Method \code{frequency_tables()}}{
Generate frequency tables for specified columns in a data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$frequency_tables(
  data_name,
  x_col_names,
  y_col_name,
  n_column_factors = 1,
  store_results = TRUE,
  drop = TRUE,
  na.rm = FALSE,
  summary_name = NA,
  include_margins = FALSE,
  return_output = TRUE,
  treat_columns_as_factor = FALSE,
  page_by = "default",
  as_html = TRUE,
  signif_fig = 2,
  na_display = "",
  na_level_display = "NA",
  weights = NULL,
  caption = NULL,
  result_names = NULL,
  percentage_type = "none",
  perc_total_columns = NULL,
  perc_total_factors = c(),
  perc_total_filter = NULL,
  perc_decimal = FALSE,
  margin_name = "(All)",
  additional_filter,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{x_col_names}}{Names of columns for x-axis.}

\item{\code{y_col_name}}{Name of column for y-axis.}

\item{\code{n_column_factors}}{Number of column factors.}

\item{\code{store_results}}{Logical indicating if results should be stored.}

\item{\code{drop}}{Logical indicating if to drop unused levels.}

\item{\code{na.rm}}{Logical indicating if NA values should be removed.}

\item{\code{summary_name}}{Optional name for the summary.}

\item{\code{include_margins}}{Logical indicating if margins should be included.}

\item{\code{return_output}}{Logical indicating if output should be returned.}

\item{\code{treat_columns_as_factor}}{Logical indicating if columns should be treated as factors.}

\item{\code{page_by}}{Pagination option.}

\item{\code{as_html}}{Logical indicating if output should be in HTML format.}

\item{\code{signif_fig}}{Number of significant figures.}

\item{\code{na_display}}{Optional display for NA values.}

\item{\code{na_level_display}}{Optional display for NA levels.}

\item{\code{weights}}{Optional weights for frequency calculations.}

\item{\code{caption}}{Optional caption for the output.}

\item{\code{result_names}}{Optional names for results.}

\item{\code{percentage_type}}{Type of percentage calculation.}

\item{\code{perc_total_columns}}{Optional columns for total percentages.}

\item{\code{perc_total_factors}}{Optional factors for total percentages.}

\item{\code{perc_total_filter}}{Optional filter for total percentages.}

\item{\code{perc_decimal}}{Logical indicating if percentages should be decimal.}

\item{\code{margin_name}}{Name for the margin.}

\item{\code{additional_filter}}{Optional additional filter.}

\item{\code{...}}{Additional parameters.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-anova_tables"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-anova_tables}{}}}
\subsection{Method \code{anova_tables()}}{
Generate ANOVA tables for specified columns in a data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$anova_tables(
  data_name,
  x_col_names,
  y_col_name,
  signif.stars = FALSE,
  sign_level = FALSE,
  means = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{x_col_names}}{Names of columns for x-axis.}

\item{\code{y_col_name}}{Name of column for y-axis.}

\item{\code{signif.stars}}{Logical indicating if significance stars should be shown.}

\item{\code{sign_level}}{Logical indicating if significance level should be displayed.}

\item{\code{means}}{Logical indicating if means should be displayed.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-cor"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-cor}{}}}
\subsection{Method \code{cor()}}{
Calculate correlation between specified columns in a data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$cor(
  data_name,
  x_col_names,
  y_col_name,
  use = "everything",
  method = c("pearson", "kendall", "spearman")
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{x_col_names}}{Names of columns for x-axis.}

\item{\code{y_col_name}}{Name of column for y-axis.}

\item{\code{use}}{How to handle missing values.}

\item{\code{method}}{The method to use for correlation.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-remove_columns_in_data"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-remove_columns_in_data}{}}}
\subsection{Method \code{remove_columns_in_data()}}{
Remove specified columns from a data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$remove_columns_in_data(data_name, cols, allow_delete_all = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{cols}}{The columns to remove.}

\item{\code{allow_delete_all}}{Logical indicating if all columns can be deleted.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-remove_rows_in_data"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-remove_rows_in_data}{}}}
\subsection{Method \code{remove_rows_in_data()}}{
Remove specified rows from a data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$remove_rows_in_data(data_name, row_names)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{row_names}}{The names of the rows to remove.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_next_default_column_name"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_next_default_column_name}{}}}
\subsection{Method \code{get_next_default_column_name()}}{
Get the next available default column name for a data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_next_default_column_name(data_name, prefix)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{prefix}}{The prefix for the new column name.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The next available default column name.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_column_names"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_column_names}{}}}
\subsection{Method \code{get_column_names()}}{
Retrieve the column names of a data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_column_names(
  data_name,
  as_list = FALSE,
  include = list(),
  exclude = list(),
  excluded_items = c(),
  max_no,
  use_current_column_selection = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{as_list}}{A boolean indicating whether to return the names as a list.}

\item{\code{include}}{A list of column names to include.}

\item{\code{exclude}}{A list of column names to exclude.}

\item{\code{excluded_items}}{A vector of items to be excluded.}

\item{\code{max_no}}{The maximum number of column names to return.}

\item{\code{use_current_column_selection}}{A boolean indicating whether to use the current column selection.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-reorder_columns_in_data"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-reorder_columns_in_data}{}}}
\subsection{Method \code{reorder_columns_in_data()}}{
Reorder the columns in a data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$reorder_columns_in_data(data_name, col_order)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{col_order}}{A vector specifying the new order of columns.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-insert_row_in_data"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-insert_row_in_data}{}}}
\subsection{Method \code{insert_row_in_data()}}{
Insert rows into a data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$insert_row_in_data(
  data_name,
  start_row,
  row_data = c(),
  number_rows = 1,
  before = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{start_row}}{The row number to start inserting at.}

\item{\code{row_data}}{A vector of data for the new row(s).}

\item{\code{number_rows}}{The number of rows to insert.}

\item{\code{before}}{A boolean indicating whether to insert before the start_row.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_data_frame_length"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_data_frame_length}{}}}
\subsection{Method \code{get_data_frame_length()}}{
Get the length of a data frame.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_data_frame_length(data_name, use_current_filter = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data frame.}

\item{\code{use_current_filter}}{A boolean indicating whether to use the current filter.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_next_default_dataframe_name"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_next_default_dataframe_name}{}}}
\subsection{Method \code{get_next_default_dataframe_name()}}{
Get the next default name for a data frame.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_next_default_dataframe_name(
  prefix,
  include_index = TRUE,
  start_index = 1
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{prefix}}{The prefix for the new data frame name.}

\item{\code{include_index}}{A boolean indicating whether to include an index.}

\item{\code{start_index}}{The starting index for naming.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-delete_dataframes"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-delete_dataframes}{}}}
\subsection{Method \code{delete_dataframes()}}{
Delete specified data frames.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$delete_dataframes(data_names, delete_graph_book = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_names}}{A vector of data frame names to delete.}

\item{\code{delete_graph_book}}{A boolean indicating whether to delete the associated graph book.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-remove_link"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-remove_link}{}}}
\subsection{Method \code{remove_link()}}{
Remove a link by its name.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$remove_link(link_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{link_name}}{The name of the link to remove.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_column_factor_levels"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_column_factor_levels}{}}}
\subsection{Method \code{get_column_factor_levels()}}{
Get the factor levels of a specified column in a data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_column_factor_levels(data_name, col_name = "")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{col_name}}{The name of the column to check.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_factor_data_frame"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_factor_data_frame}{}}}
\subsection{Method \code{get_factor_data_frame()}}{
Get the data frame for a specified factor column.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_factor_data_frame(
  data_name,
  col_name = "",
  include_levels = TRUE,
  include_NA_level = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{col_name}}{The name of the column to retrieve.}

\item{\code{include_levels}}{A boolean indicating whether to include levels.}

\item{\code{include_NA_level}}{A boolean indicating whether to include NA as a level.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-sort_dataframe"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-sort_dataframe}{}}}
\subsection{Method \code{sort_dataframe()}}{
Sort a data frame by specified column(s).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$sort_dataframe(
  data_name,
  col_names = c(),
  decreasing = FALSE,
  na.last = TRUE,
  by_row_names = FALSE,
  row_names_as_numeric = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{col_names}}{A vector of column names to sort by.}

\item{\code{decreasing}}{A boolean indicating whether to sort in decreasing order.}

\item{\code{na.last}}{A boolean indicating how to handle NA values.}

\item{\code{by_row_names}}{A boolean indicating whether to sort by row names.}

\item{\code{row_names_as_numeric}}{A boolean indicating whether row names should be treated as numeric.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-rename_dataframe"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-rename_dataframe}{}}}
\subsection{Method \code{rename_dataframe()}}{
Rename a data frame and optionally update its label.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$rename_dataframe(data_name, new_value = "", label = "")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The current name of the data frame.}

\item{\code{new_value}}{The new name for the data frame.}

\item{\code{label}}{An optional label for the data frame.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-convert_column_to_type"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-convert_column_to_type}{}}}
\subsection{Method \code{convert_column_to_type()}}{
Convert specified columns to a different type.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$convert_column_to_type(
  data_name,
  col_names = c(),
  to_type,
  factor_values = NULL,
  set_digits,
  set_decimals = FALSE,
  keep_attr = TRUE,
  ignore_labels = FALSE,
  keep.labels = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{col_names}}{A vector of column names to convert.}

\item{\code{to_type}}{The target data type.}

\item{\code{factor_values}}{Optional values for factors.}

\item{\code{set_digits}}{Number of digits to set.}

\item{\code{set_decimals}}{A boolean indicating whether to set decimals.}

\item{\code{keep_attr}}{A boolean indicating whether to keep attributes.}

\item{\code{ignore_labels}}{A boolean indicating whether to ignore labels.}

\item{\code{keep.labels}}{A boolean indicating whether to keep labels.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-append_to_variables_metadata"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-append_to_variables_metadata}{}}}
\subsection{Method \code{append_to_variables_metadata()}}{
Appends a new property and its value to the metadata of specified columns in a data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$append_to_variables_metadata(
  data_name,
  col_names,
  property,
  new_val = ""
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{col_names}}{A vector of column names to which the property should be appended.}

\item{\code{property}}{The name of the property to append.}

\item{\code{new_val}}{The value of the property to append. Default is an empty string.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
None
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-append_to_dataframe_metadata"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-append_to_dataframe_metadata}{}}}
\subsection{Method \code{append_to_dataframe_metadata()}}{
Appends a new property and its value to the metadata of a data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$append_to_dataframe_metadata(data_name, property, new_val = "")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{property}}{The name of the property to append.}

\item{\code{new_val}}{The value of the property to append. Default is an empty string.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
None
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-append_to_metadata"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-append_to_metadata}{}}}
\subsection{Method \code{append_to_metadata()}}{
Appends a new property and its value to the metadata of the current object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$append_to_metadata(
  property,
  new_val = "",
  allow_override_special = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{property}}{The name of the property to append.}

\item{\code{new_val}}{The value of the property to append. Default is an empty string.}

\item{\code{allow_override_special}}{Boolean flag to allow overriding special properties. Default is FALSE.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
None
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-add_metadata_field"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-add_metadata_field}{}}}
\subsection{Method \code{add_metadata_field()}}{
Adds a new metadata field and its value to the specified data table or all data tables.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$add_metadata_field(data_name, property, new_val = "")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table. Use overall_label to apply to all data tables.}

\item{\code{property}}{The name of the property to append.}

\item{\code{new_val}}{The value of the property to append. Default is an empty string.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
None
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-reorder_dataframes"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-reorder_dataframes}{}}}
\subsection{Method \code{reorder_dataframes()}}{
Reorders the dataframes in the object according to the specified order.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$reorder_dataframes(data_frames_order)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_frames_order}}{A vector specifying the new order of dataframes.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
None
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-copy_columns"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-copy_columns}{}}}
\subsection{Method \code{copy_columns()}}{
Copies specified columns from a data table to another location or clipboard.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$copy_columns(data_name, col_names = "", copy_to_clipboard = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{col_names}}{A vector of column names to copy.}

\item{\code{copy_to_clipboard}}{Boolean flag to copy to clipboard. Default is FALSE.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
None
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-drop_unused_factor_levels"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-drop_unused_factor_levels}{}}}
\subsection{Method \code{drop_unused_factor_levels()}}{
Drops unused levels from a factor column in the specified data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$drop_unused_factor_levels(data_name, col_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{col_name}}{The name of the column.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
None
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-set_factor_levels"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-set_factor_levels}{}}}
\subsection{Method \code{set_factor_levels()}}{
Sets new levels for a factor column in the specified data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$set_factor_levels(
  data_name,
  col_name,
  new_labels,
  new_levels,
  set_new_labels = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{col_name}}{The name of the column.}

\item{\code{new_labels}}{A vector of new labels for the factor levels.}

\item{\code{new_levels}}{A vector of new levels.}

\item{\code{set_new_labels}}{Boolean flag to set new labels. Default is TRUE.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
None
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-edit_factor_level"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-edit_factor_level}{}}}
\subsection{Method \code{edit_factor_level()}}{
Edits a level in a factor column in the specified data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$edit_factor_level(data_name, col_name, old_level, new_level)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{col_name}}{The name of the column.}

\item{\code{old_level}}{The old level to replace.}

\item{\code{new_level}}{The new level to set.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
None
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-set_factor_reference_level"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-set_factor_reference_level}{}}}
\subsection{Method \code{set_factor_reference_level()}}{
Sets the reference level for a factor column in the specified data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$set_factor_reference_level(data_name, col_name, new_ref_level)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{col_name}}{The name of the column.}

\item{\code{new_ref_level}}{The new reference level.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
None
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_column_count"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_column_count}{}}}
\subsection{Method \code{get_column_count()}}{
Returns the number of columns in the specified data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_column_count(data_name, use_column_selection = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{use_column_selection}}{Boolean flag to use column selection. Default is FALSE.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The number of columns.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-reorder_factor_levels"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-reorder_factor_levels}{}}}
\subsection{Method \code{reorder_factor_levels()}}{
Reorders the levels of a factor column in the specified data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$reorder_factor_levels(data_name, col_name, new_level_names)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{col_name}}{The name of the column.}

\item{\code{new_level_names}}{A vector specifying the new order of factor levels.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
None
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_data_type"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_data_type}{}}}
\subsection{Method \code{get_data_type()}}{
Returns the data type of the specified column in the given data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_data_type(data_name, col_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{col_name}}{The name of the column.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The data type of the column.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-copy_data_frame"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-copy_data_frame}{}}}
\subsection{Method \code{copy_data_frame()}}{
Copies a data frame to a new name or clipboard.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$copy_data_frame(
  data_name,
  new_name,
  label = "",
  copy_to_clipboard = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{new_name}}{The new name for the copied data frame.}

\item{\code{label}}{A label for the new data frame. Default is an empty string.}

\item{\code{copy_to_clipboard}}{Boolean flag to copy to clipboard. Default is FALSE.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
None
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-copy_col_metadata_to_clipboard"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-copy_col_metadata_to_clipboard}{}}}
\subsection{Method \code{copy_col_metadata_to_clipboard()}}{
Copies the metadata of specified columns to the clipboard.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$copy_col_metadata_to_clipboard(data_name, property_names)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{property_names}}{A vector of property names to copy. Default is all properties.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
None
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-copy_data_frame_metadata_to_clipboard"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-copy_data_frame_metadata_to_clipboard}{}}}
\subsection{Method \code{copy_data_frame_metadata_to_clipboard()}}{
Copies the metadata of the specified data table to the clipboard.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$copy_data_frame_metadata_to_clipboard(data_name, property_names)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{property_names}}{A vector of property names to copy. Default is all properties.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
None
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-copy_to_clipboard"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-copy_to_clipboard}{}}}
\subsection{Method \code{copy_to_clipboard()}}{
Copies the specified content to the clipboard.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$copy_to_clipboard(content)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{content}}{The content to copy to the clipboard.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
None
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-set_hidden_columns"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-set_hidden_columns}{}}}
\subsection{Method \code{set_hidden_columns()}}{
Sets the specified columns as hidden in the given data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$set_hidden_columns(data_name, col_names = c())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{col_names}}{A vector of column names to set as hidden.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
None
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-unhide_all_columns"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-unhide_all_columns}{}}}
\subsection{Method \code{unhide_all_columns()}}{
Unhides all columns in the specified data table or all data tables if data_name is missing.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$unhide_all_columns(data_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table. If missing, applies to all data tables.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
None
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-set_hidden_data_frames"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-set_hidden_data_frames}{}}}
\subsection{Method \code{set_hidden_data_frames()}}{
Sets the specified data tables as hidden.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$set_hidden_data_frames(data_names = c())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_names}}{A vector of data table names to set as hidden.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
None
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_hidden_data_frames"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_hidden_data_frames}{}}}
\subsection{Method \code{get_hidden_data_frames()}}{
Returns a list of hidden data tables.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_hidden_data_frames()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A vector of hidden data table names.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-set_row_names"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-set_row_names}{}}}
\subsection{Method \code{set_row_names()}}{
Sets the row names for the specified data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$set_row_names(data_name, row_names)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{row_names}}{A vector of row names to set.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
None
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_row_names"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_row_names}{}}}
\subsection{Method \code{get_row_names()}}{
Returns the row names of the specified data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_row_names(data_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector of row names.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-set_protected_columns"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-set_protected_columns}{}}}
\subsection{Method \code{set_protected_columns()}}{
Sets the specified columns as protected in the given data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$set_protected_columns(data_name, col_names)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{col_names}}{A vector of column names to set as protected.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
None
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_metadata_fields"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_metadata_fields}{}}}
\subsection{Method \code{get_metadata_fields()}}{
Returns the metadata fields of the specified data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_metadata_fields(
  data_name,
  include_overall,
  as_list = FALSE,
  include,
  exclude,
  excluded_items = c()
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{include_overall}}{Boolean flag to include overall metadata fields. Default is TRUE.}

\item{\code{as_list}}{Boolean flag to return the result as a list. Default is FALSE.}

\item{\code{include}}{A vector of metadata fields to include. Default is all fields.}

\item{\code{exclude}}{A vector of metadata fields to exclude. Default is none.}

\item{\code{excluded_items}}{A vector of metadata fields to exclude. Default is an empty vector.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector or list of metadata fields.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-freeze_columns"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-freeze_columns}{}}}
\subsection{Method \code{freeze_columns()}}{
Freezes the specified columns in the given data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$freeze_columns(data_name, column)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{column}}{A vector of column names to freeze.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
None
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-unfreeze_columns"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-unfreeze_columns}{}}}
\subsection{Method \code{unfreeze_columns()}}{
Unfreezes all columns in the specified data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$unfreeze_columns(data_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
None
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-is_variables_metadata"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-is_variables_metadata}{}}}
\subsection{Method \code{is_variables_metadata()}}{
Checks if the specified property is metadata for the given columns in the data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$is_variables_metadata(
  data_name,
  property,
  column,
  return_vector = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{property}}{The name of the property to check.}

\item{\code{column}}{The name of the column.}

\item{\code{return_vector}}{Boolean flag to return the result as a vector. Default is FALSE.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A boolean value indicating if the property is metadata for the columns.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-data_frame_exists"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-data_frame_exists}{}}}
\subsection{Method \code{data_frame_exists()}}{
Checks if the specified data table exists.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$data_frame_exists(data_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A boolean value indicating if the data table exists.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-add_key"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-add_key}{}}}
\subsection{Method \code{add_key()}}{
Adds a key to the specified columns in the given data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$add_key(data_name, col_names, key_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{col_names}}{A vector of column names to add as keys.}

\item{\code{key_name}}{The name of the key.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
None
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-is_key"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-is_key}{}}}
\subsection{Method \code{is_key()}}{
Checks if the specified columns are keys in the given data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$is_key(data_name, col_names)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{col_names}}{A vector of column names to check.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A boolean value indicating if the columns are keys.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-has_key"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-has_key}{}}}
\subsection{Method \code{has_key()}}{
Checks if the specified data table has a key.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$has_key(data_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A boolean value indicating if the data table has a key.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_keys"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_keys}{}}}
\subsection{Method \code{get_keys()}}{
Returns the keys of the specified data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_keys(data_name, key_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{key_name}}{The name of the key. Default is all keys.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list of keys.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-add_new_comment"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-add_new_comment}{}}}
\subsection{Method \code{add_new_comment()}}{
Adds a new comment to the specified row and column in the given data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$add_new_comment(data_name, row = "", column = "", comment)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{row}}{The name of the row.}

\item{\code{column}}{The name of the column.}

\item{\code{comment}}{The comment text.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
None
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_comments"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_comments}{}}}
\subsection{Method \code{get_comments()}}{
Returns the comments for the specified data table and comment ID.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_comments(data_name, comment_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{comment_id}}{The ID of the comment.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A data frame of comments.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_links"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_links}{}}}
\subsection{Method \code{get_links()}}{
Returns the links for the specified link name or all links.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_links(link_name, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{link_name}}{The name of the link. Default is all links.}

\item{\code{...}}{Additional arguments passed to other methods.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list of links.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-set_structure_columns"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-set_structure_columns}{}}}
\subsection{Method \code{set_structure_columns()}}{
Sets the structure columns for the specified data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$set_structure_columns(
  data_name,
  struc_type_1 = c(),
  struc_type_2 = c(),
  struc_type_3 = c()
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{struc_type_1}}{A vector of column names for the first structure type.}

\item{\code{struc_type_2}}{A vector of column names for the second structure type.}

\item{\code{struc_type_3}}{A vector of column names for the third structure type.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
None
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-add_dependent_columns"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-add_dependent_columns}{}}}
\subsection{Method \code{add_dependent_columns()}}{
Adds dependent columns to the specified columns in the given data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$add_dependent_columns(data_name, columns, dependent_cols)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{columns}}{A vector of column names to add dependents to.}

\item{\code{dependent_cols}}{A vector of dependent column names.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
None
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-set_column_colours"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-set_column_colours}{}}}
\subsection{Method \code{set_column_colours()}}{
Sets the colours for the specified columns in the given data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$set_column_colours(data_name, columns, colours)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{columns}}{A vector of column names to set colours for.}

\item{\code{colours}}{A vector of colours.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
None
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-has_colours"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-has_colours}{}}}
\subsection{Method \code{has_colours()}}{
Checks if the specified columns have colours in the given data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$has_colours(data_name, columns)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{columns}}{A vector of column names to check.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A boolean value indicating if the columns have colours.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-remove_column_colours"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-remove_column_colours}{}}}
\subsection{Method \code{remove_column_colours()}}{
Removes the colours from all columns in the specified data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$remove_column_colours(data_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
None
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-set_column_colours_by_metadata"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-set_column_colours_by_metadata}{}}}
\subsection{Method \code{set_column_colours_by_metadata()}}{
Sets the colours for the specified columns based on metadata in the given data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$set_column_colours_by_metadata(data_name, columns, property)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{columns}}{A vector of column names to set colours for.}

\item{\code{property}}{The metadata property to use for setting colours.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
None
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-graph_one_variable"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-graph_one_variable}{}}}
\subsection{Method \code{graph_one_variable()}}{
Creates a graph for a single variable in the specified data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$graph_one_variable(
  data_name,
  columns,
  numeric = "geom_boxplot",
  categorical = "geom_bar",
  character = "geom_bar",
  output = "facets",
  free_scale_axis = FALSE,
  ncol = NULL,
  coord_flip = FALSE,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{columns}}{A vector of column names to graph.}

\item{\code{numeric}}{The type of graph for numeric columns. Default is "geom_boxplot".}

\item{\code{categorical}}{The type of graph for categorical columns. Default is "geom_bar".}

\item{\code{character}}{The type of graph for character columns. Default is "geom_bar".}

\item{\code{output}}{The output type for the graph. Default is "facets".}

\item{\code{free_scale_axis}}{Boolean flag to allow free scaling of axes. Default is FALSE.}

\item{\code{ncol}}{The number of columns in the output. Default is NULL.}

\item{\code{coord_flip}}{Boolean flag to flip coordinates. Default is FALSE.}

\item{\code{...}}{Additional arguments passed to other methods.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
None
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-make_date_yearmonthday"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-make_date_yearmonthday}{}}}
\subsection{Method \code{make_date_yearmonthday()}}{
Creates a date column from year, month, and day columns in the specified data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$make_date_yearmonthday(
  data_name,
  year,
  month,
  day,
  f_year,
  f_month,
  f_day,
  year_format = "\%Y",
  month_format = "\%m"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{year}}{The name of the year column.}

\item{\code{month}}{The name of the month column.}

\item{\code{day}}{The name of the day column.}

\item{\code{f_year}}{The format for the year column.}

\item{\code{f_month}}{The format for the month column.}

\item{\code{f_day}}{The format for the day column.}

\item{\code{year_format}}{The format for the year. Default is "\%Y".}

\item{\code{month_format}}{The format for the month. Default is "\%m".}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
None
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-make_date_yeardoy"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-make_date_yeardoy}{}}}
\subsection{Method \code{make_date_yeardoy()}}{
Creates a date column from year and day of year columns in the specified data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$make_date_yeardoy(
  data_name,
  year,
  doy,
  base,
  doy_typical_length = "366"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{year}}{The name of the year column.}

\item{\code{doy}}{The name of the day of year column.}

\item{\code{base}}{The base date for the day of year.}

\item{\code{doy_typical_length}}{The typical length of the day of year. Default is "366".}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
None
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-set_contrasts_of_factor"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-set_contrasts_of_factor}{}}}
\subsection{Method \code{set_contrasts_of_factor()}}{
Sets the contrasts for a factor column in the specified data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$set_contrasts_of_factor(
  data_name,
  col_name,
  new_contrasts,
  defined_contr_matrix
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{col_name}}{The name of the column.}

\item{\code{new_contrasts}}{A vector of new contrasts.}

\item{\code{defined_contr_matrix}}{A defined contrast matrix.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
None
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-create_factor_data_frame"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-create_factor_data_frame}{}}}
\subsection{Method \code{create_factor_data_frame()}}{
Creates a new data frame for a factor column in the specified data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$create_factor_data_frame(
  data_name,
  factor,
  factor_data_frame_name,
  include_contrasts = FALSE,
  replace = FALSE,
  summary_count = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{factor}}{The name of the factor column.}

\item{\code{factor_data_frame_name}}{The name of the new data frame.}

\item{\code{include_contrasts}}{Boolean flag to include contrasts. Default is FALSE.}

\item{\code{replace}}{Boolean flag to replace the existing factor data frame. Default is FALSE.}

\item{\code{summary_count}}{Boolean flag to include summary count. Default is TRUE.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
None
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-split_date"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-split_date}{}}}
\subsection{Method \code{split_date()}}{
Splits a date column into multiple date components in the specified data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$split_date(
  data_name,
  col_name = "",
  year_val = FALSE,
  year_name = FALSE,
  leap_year = FALSE,
  month_val = FALSE,
  month_abbr = FALSE,
  month_name = FALSE,
  week_val = FALSE,
  week_abbr = FALSE,
  week_name = FALSE,
  weekday_val = FALSE,
  weekday_abbr = FALSE,
  weekday_name = FALSE,
  day = FALSE,
  day_in_month = FALSE,
  day_in_year = FALSE,
  day_in_year_366 = FALSE,
  pentad_val = FALSE,
  pentad_abbr = FALSE,
  dekad_val = FALSE,
  dekad_abbr = FALSE,
  quarter_val = FALSE,
  quarter_abbr = FALSE,
  with_year = FALSE,
  s_start_month = 1,
  s_start_day_in_month = 1,
  days_in_month = FALSE,
  format_date = FALSE,
  format_string = "",
  new_col_name = "format_date"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{col_name}}{The name of the date column.}

\item{\code{year_val}}{Boolean flag to include year value. Default is FALSE.}

\item{\code{year_name}}{Boolean flag to include year name. Default is FALSE.}

\item{\code{leap_year}}{Boolean flag to include leap year. Default is FALSE.}

\item{\code{month_val}}{Boolean flag to include month value. Default is FALSE.}

\item{\code{month_abbr}}{Boolean flag to include month abbreviation. Default is FALSE.}

\item{\code{month_name}}{Boolean flag to include month name. Default is FALSE.}

\item{\code{week_val}}{Boolean flag to include week value. Default is FALSE.}

\item{\code{week_abbr}}{Boolean flag to include week abbreviation. Default is FALSE.}

\item{\code{week_name}}{Boolean flag to include week name. Default is FALSE.}

\item{\code{weekday_val}}{Boolean flag to include weekday value. Default is FALSE.}

\item{\code{weekday_abbr}}{Boolean flag to include weekday abbreviation. Default is FALSE.}

\item{\code{weekday_name}}{Boolean flag to include weekday name. Default is FALSE.}

\item{\code{day}}{Boolean flag to include day value. Default is FALSE.}

\item{\code{day_in_month}}{Boolean flag to include day in month. Default is FALSE.}

\item{\code{day_in_year}}{Boolean flag to include day in year. Default is FALSE.}

\item{\code{day_in_year_366}}{Boolean flag to include day in year (366). Default is FALSE.}

\item{\code{pentad_val}}{Boolean flag to include pentad value. Default is FALSE.}

\item{\code{pentad_abbr}}{Boolean flag to include pentad abbreviation. Default is FALSE.}

\item{\code{dekad_val}}{Boolean flag to include dekad value. Default is FALSE.}

\item{\code{dekad_abbr}}{Boolean flag to include dekad abbreviation. Default is FALSE.}

\item{\code{quarter_val}}{Boolean flag to include quarter value. Default is FALSE.}

\item{\code{quarter_abbr}}{Boolean flag to include quarter abbreviation. Default is FALSE.}

\item{\code{with_year}}{Boolean flag to include with year. Default is FALSE.}

\item{\code{s_start_month}}{The start month. Default is 1.}

\item{\code{s_start_day_in_month}}{The start day in month. Default is 1.}

\item{\code{days_in_month}}{Boolean flag to include days in month. Default is FALSE.}

\item{\code{format_date}}{Logical, whether to give custom format options (only works for non-shifted years at present)}

\item{\code{format_string}}{Character string of the format to give, e.g., \code{"\%Y \%j"}.}

\item{\code{new_col_name}}{Character string of the new column name if \code{format_date} is \code{TRUE}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
None
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-make_inventory_plot"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-make_inventory_plot}{}}}
\subsection{Method \code{make_inventory_plot()}}{
Create an inventory plot based on the provided data.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$make_inventory_plot(
  data_name,
  date_col,
  station_col = NULL,
  year_col = NULL,
  doy_col = NULL,
  element_cols = NULL,
  add_to_data = FALSE,
  year_doy_plot = FALSE,
  coord_flip = FALSE,
  facet_by = NULL,
  graph_title = "Inventory Plot",
  graph_subtitle = NULL,
  graph_caption = NULL,
  title_size = NULL,
  subtitle_size = NULL,
  caption_size = NULL,
  labelXAxis,
  labelYAxis,
  xSize = NULL,
  ySize = NULL,
  Xangle = NULL,
  Yangle = NULL,
  scale_xdate,
  fromXAxis = NULL,
  toXAxis = NULL,
  byXaxis = NULL,
  date_ylabels,
  legend_position = NULL,
  xlabelsize = NULL,
  ylabelsize = NULL,
  scale = NULL,
  dir = "",
  row_col_number,
  nrow = NULL,
  ncol = NULL,
  key_colours = c("red", "grey"),
  display_rain_days = FALSE,
  facet_xsize = 9,
  facet_ysize = 9,
  facet_xangle = 90,
  facet_yangle = 90,
  scale_ydate = FALSE,
  date_ybreaks,
  step = 1,
  rain_cats = list(breaks = c(0, 0.85, Inf), labels = c("Dry", "Rain"), key_colours =
    c("tan3", "blue"))
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table containing inventory data.}

\item{\code{date_col}}{The name of the column representing dates.}

\item{\code{station_col}}{Optional; the name of the column representing station identifiers.}

\item{\code{year_col}}{Optional; the name of the column representing years.}

\item{\code{doy_col}}{Optional; the name of the column representing day of the year.}

\item{\code{element_cols}}{Optional; a vector of column names representing different elements.}

\item{\code{add_to_data}}{Optional; a boolean indicating whether to add the plot to the existing data.}

\item{\code{year_doy_plot}}{Optional; a boolean indicating whether to plot by year and day of year.}

\item{\code{coord_flip}}{Optional; a boolean indicating whether to flip coordinates.}

\item{\code{facet_by}}{Optional; the variable to facet the plot by.}

\item{\code{graph_title}}{The title of the plot.}

\item{\code{graph_subtitle}}{Optional; the subtitle of the plot.}

\item{\code{graph_caption}}{Optional; the caption of the plot.}

\item{\code{title_size}}{Optional; the size of the title text.}

\item{\code{subtitle_size}}{Optional; the size of the subtitle text.}

\item{\code{caption_size}}{Optional; the size of the caption text.}

\item{\code{labelXAxis}}{Optional; the label for the x-axis.}

\item{\code{labelYAxis}}{Optional; the label for the y-axis.}

\item{\code{xSize}}{Optional; the size of the x-axis text.}

\item{\code{ySize}}{Optional; the size of the y-axis text.}

\item{\code{Xangle}}{Optional; the angle of the x-axis labels.}

\item{\code{Yangle}}{Optional; the angle of the y-axis labels.}

\item{\code{scale_xdate}}{Optional; a boolean indicating whether to scale x-axis by date.}

\item{\code{fromXAxis}}{Optional; the starting point for the x-axis.}

\item{\code{toXAxis}}{Optional; the ending point for the x-axis.}

\item{\code{byXaxis}}{Optional; the interval for the x-axis.}

\item{\code{date_ylabels}}{Optional; the labels for the y-axis dates.}

\item{\code{legend_position}}{Optional; the position of the legend.}

\item{\code{xlabelsize}}{Optional; the size of the x-axis label text.}

\item{\code{ylabelsize}}{Optional; the size of the y-axis label text.}

\item{\code{scale}}{Optional; scaling factor for the plot.}

\item{\code{dir}}{Optional; the directory to save the plot.}

\item{\code{row_col_number}}{The number of rows and columns for the plot layout.}

\item{\code{nrow}}{Optional; the number of rows for the plot layout.}

\item{\code{ncol}}{Optional; the number of columns for the plot layout.}

\item{\code{key_colours}}{A vector of colors for the keys in the plot.}

\item{\code{display_rain_days}}{Optional; a boolean indicating whether to display rain days.}

\item{\code{facet_xsize}}{Optional; the size of the x-axis facets.}

\item{\code{facet_ysize}}{Optional; the size of the y-axis facets.}

\item{\code{facet_xangle}}{Optional; the angle of the x-axis facet labels.}

\item{\code{facet_yangle}}{Optional; the angle of the y-axis facet labels.}

\item{\code{scale_ydate}}{Optional; a boolean indicating whether to scale y-axis by date.}

\item{\code{date_ybreaks}}{Optional; the breaks for y-axis dates.}

\item{\code{step}}{Optional; the step for the y-axis.}

\item{\code{rain_cats}}{A list defining categories for rainfall.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-import_NetCDF"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-import_NetCDF}{}}}
\subsection{Method \code{import_NetCDF()}}{
Import NetCDF data and convert it into a data frame.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$import_NetCDF(
  nc,
  path,
  name,
  only_data_vars = TRUE,
  keep_raw_time = TRUE,
  include_metadata = TRUE,
  boundary,
  lon_points = NULL,
  lat_points = NULL,
  id_points = NULL,
  show_requested_points = TRUE,
  great_circle_dist = FALSE,
  internal_import = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{nc}}{The NetCDF file object.}

\item{\code{path}}{Optional; the path to the NetCDF file.}

\item{\code{name}}{The name for the imported data table.}

\item{\code{only_data_vars}}{A boolean indicating whether to only include data variables.}

\item{\code{keep_raw_time}}{A boolean indicating whether to keep raw time data.}

\item{\code{include_metadata}}{A boolean indicating whether to include metadata.}

\item{\code{boundary}}{Optional; the boundary for the data.}

\item{\code{lon_points}}{Optional; specific longitude points to include.}

\item{\code{lat_points}}{Optional; specific latitude points to include.}

\item{\code{id_points}}{Optional; identifiers for the points to include.}

\item{\code{show_requested_points}}{A boolean indicating whether to show requested points.}

\item{\code{great_circle_dist}}{A boolean indicating whether to calculate great circle distances.}

\item{\code{internal_import}}{A boolean indicating whether to import to databook or not (default \code{FALSE}, meaning it imports to databook).}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-infill_missing_dates"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-infill_missing_dates}{}}}
\subsection{Method \code{infill_missing_dates()}}{
Infill missing dates in the specified data.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$infill_missing_dates(
  data_name,
  date_name,
  factors,
  start_month,
  start_date,
  end_date,
  resort = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table to process.}

\item{\code{date_name}}{The name of the column representing dates.}

\item{\code{factors}}{A vector of factors to use for infilling dates.}

\item{\code{start_month}}{The starting month for date infilling.}

\item{\code{start_date}}{The starting date for date infilling.}

\item{\code{end_date}}{The ending date for date infilling.}

\item{\code{resort}}{A boolean indicating whether to resort the data after infilling.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_key_names"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_key_names}{}}}
\subsection{Method \code{get_key_names()}}{
Retrieve key names from a specified data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_key_names(
  data_name,
  include_overall = TRUE,
  include,
  exclude,
  include_empty = FALSE,
  as_list = FALSE,
  excluded_items = c()
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{include_overall}}{A boolean indicating whether to include overall keys.}

\item{\code{include}}{A vector of specific keys to include.}

\item{\code{exclude}}{A vector of specific keys to exclude.}

\item{\code{include_empty}}{A boolean indicating whether to include empty keys.}

\item{\code{as_list}}{A boolean indicating whether to return the keys as a list.}

\item{\code{excluded_items}}{A vector of items to exclude from the results.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-remove_key"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-remove_key}{}}}
\subsection{Method \code{remove_key()}}{
Remove a specified key from a data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$remove_key(data_name, key_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{key_name}}{The name of the key to remove.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-add_climdex_indices"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-add_climdex_indices}{}}}
\subsection{Method \code{add_climdex_indices()}}{
Add climdex indices to a specified data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$add_climdex_indices(
  data_name,
  climdex_output,
  freq = "annual",
  station,
  year,
  month
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{climdex_output}}{The output from climdex calculations.}

\item{\code{freq}}{A string indicating the frequency of the data ('annual', 'monthly', 'station').}

\item{\code{station}}{The name of the station column (optional).}

\item{\code{year}}{The name of the year column.}

\item{\code{month}}{The name of the month column (optional for monthly frequency).}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-is_metadata"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-is_metadata}{}}}
\subsection{Method \code{is_metadata()}}{
Check if a specified string is part of the metadata for a data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$is_metadata(data_name, str)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{str}}{The string to check in the metadata.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_climatic_column_name"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_climatic_column_name}{}}}
\subsection{Method \code{get_climatic_column_name()}}{
Get the climatic column name from the specified data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_climatic_column_name(data_name, col_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{col_name}}{The name of the climatic column to retrieve.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-merge_data"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-merge_data}{}}}
\subsection{Method \code{merge_data()}}{
Merge new data into the specified data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$merge_data(
  data_name,
  new_data,
  by = NULL,
  type = "left",
  match = "all"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the existing data table.}

\item{\code{new_data}}{The new data to be merged.}

\item{\code{by}}{The column(s) to merge by.}

\item{\code{type}}{The type of merge (e.g., "left", "right", "inner").}

\item{\code{match}}{How to handle matches (e.g., "all" or "first").}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_corruption_data_names"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_corruption_data_names}{}}}
\subsection{Method \code{get_corruption_data_names()}}{
Retrieve names of data tables containing corruption data.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_corruption_data_names()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A vector of names of corruption data tables.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_corruption_contract_data_names"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_corruption_contract_data_names}{}}}
\subsection{Method \code{get_corruption_contract_data_names()}}{
Retrieve names of data tables containing corruption contract level data.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_corruption_contract_data_names()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A vector of names of corruption contract data tables.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_database_variable_names"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_database_variable_names}{}}}
\subsection{Method \code{get_database_variable_names()}}{
Get variable names from a database based on a query.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_database_variable_names(
  query,
  data_name,
  include_overall = TRUE,
  include,
  exclude,
  include_empty = FALSE,
  as_list = FALSE,
  excluded_items = c()
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{query}}{The SQL query to execute.}

\item{\code{data_name}}{The name of the data table.}

\item{\code{include_overall}}{A boolean indicating whether to include overall data.}

\item{\code{include}}{Additional items to include.}

\item{\code{exclude}}{Additional items to exclude.}

\item{\code{include_empty}}{A boolean indicating whether to include empty values.}

\item{\code{as_list}}{A boolean indicating whether to return results as a list.}

\item{\code{excluded_items}}{A vector of items to exclude from results.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list or vector of variable names from the database.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_nc_variable_names"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_nc_variable_names}{}}}
\subsection{Method \code{get_nc_variable_names()}}{
Get variable names from a NetCDF file.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_nc_variable_names(file = "", as_list = FALSE, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{file}}{The path to the NetCDF file.}

\item{\code{as_list}}{A boolean indicating whether to return results as a list.}

\item{\code{...}}{Additional arguments passed to other methods.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list or vector of variable names from the NetCDF file.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-has_database_connection"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-has_database_connection}{}}}
\subsection{Method \code{has_database_connection()}}{
Check if there is an active database connection.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$has_database_connection()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A boolean indicating whether a database connection exists.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-database_connect"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-database_connect}{}}}
\subsection{Method \code{database_connect()}}{
Establish a connection to a database.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$database_connect(dbname, user, host, port, drv = RMySQL::MySQL())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dbname}}{The name of the database.}

\item{\code{user}}{The username for database access.}

\item{\code{host}}{The host address of the database.}

\item{\code{port}}{The port number for database connection.}

\item{\code{drv}}{The database driver to use (default is MySQL).}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_database_connection"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_database_connection}{}}}
\subsection{Method \code{get_database_connection()}}{
Retrieve the current database connection.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_database_connection()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The active database connection object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-set_database_connection"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-set_database_connection}{}}}
\subsection{Method \code{set_database_connection()}}{
Set the database connection.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$set_database_connection(dbi_connection)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dbi_connection}}{The database connection object to set.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-database_disconnect"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-database_disconnect}{}}}
\subsection{Method \code{database_disconnect()}}{
Disconnect from the database if a connection exists.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$database_disconnect()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_db_table_row_count"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_db_table_row_count}{}}}
\subsection{Method \code{get_db_table_row_count()}}{
Get the row count of a specified table in the database.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_db_table_row_count(tableName, query_condition = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{tableName}}{The name of the table to count rows in.}

\item{\code{query_condition}}{An optional SQL condition to filter the rows.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The count of rows in the table.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-import_climsoft_metadata"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-import_climsoft_metadata}{}}}
\subsection{Method \code{import_climsoft_metadata()}}{
Import Climsoft metadata, including stations, elements, and flags.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$import_climsoft_metadata(
  import_stations = FALSE,
  import_elements = FALSE,
  import_flags = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{import_stations}}{A boolean indicating whether to import station metadata.}

\item{\code{import_elements}}{A boolean indicating whether to import element metadata.}

\item{\code{import_flags}}{A boolean indicating whether to import flag metadata.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-import_climsoft_data"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-import_climsoft_data}{}}}
\subsection{Method \code{import_climsoft_data()}}{
Imports data from Climsoft observation tables, either initial or final.
This function also imports selected stations and elements metadata.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$import_climsoft_data(
  tableName,
  station_filter_column,
  stations = c(),
  element_filter_column,
  elements = c(),
  qc_status = -1,
  start_date = NULL,
  end_date = NULL,
  unstack_data = FALSE,
  include_element_id = FALSE,
  include_element_name = FALSE,
  include_acquisition_type = FALSE,
  include_level = FALSE,
  include_entry_form = FALSE,
  include_captured_by = FALSE,
  include_qc_status = FALSE,
  include_qc_log = FALSE,
  include_flag = FALSE,
  import_selected_stations_metadata = FALSE,
  import_selected_elements_metadata = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{tableName}}{The name of the Climsoft observation table.}

\item{\code{station_filter_column}}{The column name used to filter stations.}

\item{\code{stations}}{A vector of station identifiers to filter the data.}

\item{\code{element_filter_column}}{The column name used to filter elements.}

\item{\code{elements}}{A vector of element identifiers to filter the data.}

\item{\code{qc_status}}{A numeric status for quality control filtering; default is -1 (no filter).}

\item{\code{start_date}}{Optional; start date for filtering observations.}

\item{\code{end_date}}{Optional; end date for filtering observations.}

\item{\code{unstack_data}}{A boolean indicating whether to unstack the data.}

\item{\code{include_element_id}}{A boolean indicating whether to include element IDs in the output.}

\item{\code{include_element_name}}{A boolean indicating whether to include element names in the output.}

\item{\code{include_acquisition_type}}{A boolean indicating whether to include acquisition type in the output.}

\item{\code{include_level}}{A boolean indicating whether to include observation level in the output.}

\item{\code{include_entry_form}}{A boolean indicating whether to include entry form in the output.}

\item{\code{include_captured_by}}{A boolean indicating whether to include the name of the person who captured the data.}

\item{\code{include_qc_status}}{A boolean indicating whether to include quality control status in the output.}

\item{\code{include_qc_log}}{A boolean indicating whether to include the quality control log in the output.}

\item{\code{include_flag}}{A boolean indicating whether to include flags in the output.}

\item{\code{import_selected_stations_metadata}}{A boolean indicating whether to import metadata for selected stations.}

\item{\code{import_selected_elements_metadata}}{A boolean indicating whether to import metadata for selected elements.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-export_workspace"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-export_workspace}{}}}
\subsection{Method \code{export_workspace()}}{
Export the current workspace to a file, including optional components.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$export_workspace(
  data_names,
  file,
  include_graphs = TRUE,
  include_models = TRUE,
  include_metadata = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_names}}{Names of the data frames to export.}

\item{\code{file}}{Destination file to save the workspace.}

\item{\code{include_graphs}}{Whether to include graphs (default is TRUE).}

\item{\code{include_models}}{Whether to include models (default is TRUE).}

\item{\code{include_metadata}}{Whether to include metadata (default is TRUE).}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-set_links"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-set_links}{}}}
\subsection{Method \code{set_links()}}{
Set new links in the data structure.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$set_links(new_links)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{new_links}}{A list of new links to be set.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-display_daily_graph"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-display_daily_graph}{}}}
\subsection{Method \code{display_daily_graph()}}{
Display a daily graph for specified climatic elements.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$display_daily_graph(
  data_name,
  date_col = NULL,
  station_col = NULL,
  year_col = NULL,
  doy_col = NULL,
  climatic_element = NULL,
  upper_limit = 100,
  bar_colour = "blue",
  rug_colour = "red"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{Name of the data frame containing the data.}

\item{\code{date_col}}{Column name for the date.}

\item{\code{station_col}}{Column name for the station (optional).}

\item{\code{year_col}}{Column name for the year (optional).}

\item{\code{doy_col}}{Column name for the day of the year (optional).}

\item{\code{climatic_element}}{Name of the climatic element to display (optional).}

\item{\code{upper_limit}}{Maximum value for the graph (default is 100).}

\item{\code{bar_colour}}{Color for the bars in the graph (default is "blue").}

\item{\code{rug_colour}}{Color for the rug plot (default is "red").}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-create_variable_set"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-create_variable_set}{}}}
\subsection{Method \code{create_variable_set()}}{
Create a set of variables from specified columns in the data frame.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$create_variable_set(data_name, set_name, columns)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{Name of the data frame.}

\item{\code{set_name}}{Name for the new variable set.}

\item{\code{columns}}{Vector of column names to include in the set.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-update_variable_set"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-update_variable_set}{}}}
\subsection{Method \code{update_variable_set()}}{
Update an existing variable set with new columns.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$update_variable_set(data_name, set_name, columns, new_set_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{Name of the data frame.}

\item{\code{set_name}}{Name of the variable set to update.}

\item{\code{columns}}{Vector of new column names to include.}

\item{\code{new_set_name}}{New name for the updated variable set.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-delete_variable_sets"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-delete_variable_sets}{}}}
\subsection{Method \code{delete_variable_sets()}}{
Delete specified variable sets from the data frame.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$delete_variable_sets(data_name, set_names)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{Name of the data frame.}

\item{\code{set_names}}{Vector of names of variable sets to delete.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_variable_sets_names"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_variable_sets_names}{}}}
\subsection{Method \code{get_variable_sets_names()}}{
Retrieve the names of variable sets in the data frame.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_variable_sets_names(
  data_name,
  include_overall = TRUE,
  include,
  exclude,
  include_empty = FALSE,
  as_list = FALSE,
  excluded_items = c()
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{Name of the data frame.}

\item{\code{include_overall}}{Whether to include overall set (default is TRUE).}

\item{\code{include}}{Additional filters for inclusion.}

\item{\code{exclude}}{Exclusion filters.}

\item{\code{include_empty}}{Whether to include empty sets (default is FALSE).}

\item{\code{as_list}}{Whether to return as a list (default is FALSE).}

\item{\code{excluded_items}}{Items to exclude from the results.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_variable_sets"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_variable_sets}{}}}
\subsection{Method \code{get_variable_sets()}}{
Get specific variable sets from the data frame.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_variable_sets(data_name, set_names, force_as_list = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{Name of the data frame.}

\item{\code{set_names}}{Names of the variable sets to retrieve.}

\item{\code{force_as_list}}{Whether to force the result as a list (default is FALSE).}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-crops_definitions"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-crops_definitions}{}}}
\subsection{Method \code{crops_definitions()}}{
Define crop conditions and create a new crop definition data frame.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$crops_definitions(
  data_name,
  year,
  station,
  rain,
  day,
  rain_totals,
  plant_days,
  plant_lengths,
  start_check = c("both", "yes", "no"),
  season_data_name,
  start_day,
  end_day,
  return_crops_table = TRUE,
  definition_props = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{Name of the data frame containing the data.}

\item{\code{year}}{Name of the column representing the year.}

\item{\code{station}}{Name of the column for the station (optional).}

\item{\code{rain}}{Name of the column containing rainfall data.}

\item{\code{day}}{Name of the column containing day data.}

\item{\code{rain_totals}}{The amount of water (rainfall) needed for the crop, usually between 250mm and 1000mm
Enter three comma-separated numbers to generate a sequence: from, to, by; for example, 200, 1200, 50 produces 200, 250, 300, ..., 1200.}

\item{\code{plant_days}}{The day number for planting. Starting from January, April 1st is day 92. Starting from July, November 1st is day 124.
Enter three comma-separated numbers to generate a sequence: from, to, by; for example, 93, 183, 15 produces 93, 108, 123, …, 183.}

\item{\code{plant_lengths}}{The crop duration in days. Often between 60 (2 months) and 150 (5 months).
Enter three comma-separated numbers to generate a sequence: from, to, by; for example, 45, 180, 30 produces 45, 75, 105, ..., 180.}

\item{\code{start_check}}{Boolean indicating whether to check start day (default is TRUE).}

\item{\code{season_data_name}}{Name of the season data frame (optional).}

\item{\code{start_day}}{Column name for the start day.}

\item{\code{end_day}}{Column name for the end day.}

\item{\code{return_crops_table}}{Boolean indicating whether to return the full crops table (default is TRUE).}

\item{\code{definition_props}}{Boolean indicating whether to calculate properties (default is TRUE).}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-tidy_climatic_data"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-tidy_climatic_data}{}}}
\subsection{Method \code{tidy_climatic_data()}}{
Tidy climatic data into a specified format.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$tidy_climatic_data(
  x,
  format,
  stack_cols,
  day,
  month,
  year,
  stack_years,
  station,
  element,
  element_name = "value",
  ignore_invalid = FALSE,
  silent = FALSE,
  unstack_elements = TRUE,
  new_name
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{The input data frame containing climatic data.}

\item{\code{format}}{A character string indicating the format of the data; must be either 'days', 'months', or 'years'.}

\item{\code{stack_cols}}{A vector of column names to be stacked.}

\item{\code{day}}{Optional; the name of the day column.}

\item{\code{month}}{Optional; the name of the month column.}

\item{\code{year}}{Optional; the name of the year column.}

\item{\code{stack_years}}{Optional; a vector of years corresponding to the stack columns.}

\item{\code{station}}{Optional; the name of the station column.}

\item{\code{element}}{Optional; the name of the element column.}

\item{\code{element_name}}{The name to assign to the value column for the climatic element.}

\item{\code{ignore_invalid}}{A boolean indicating whether to ignore invalid dates.}

\item{\code{silent}}{A boolean indicating whether to suppress output messages.}

\item{\code{unstack_elements}}{A boolean indicating whether to unstack multiple elements.}

\item{\code{new_name}}{Optional; the name to assign to the resulting tidy data frame.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_geometry"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_geometry}{}}}
\subsection{Method \code{get_geometry()}}{
Retrieve the geometry column from a given data object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_geometry(data)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{The data object from which to retrieve the geometry column.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The name of the geometry column if found, otherwise an empty string.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-package_check"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-package_check}{}}}
\subsection{Method \code{package_check()}}{
Check the installation status and version of a specified package.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$package_check(package)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{package}}{The name of the package to check.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list containing the status of the package:
1 if installed and up to date, 2 if installed but outdated,
and 0 if not installed or misspelled.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-download_from_IRI"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-download_from_IRI}{}}}
\subsection{Method \code{download_from_IRI()}}{
Download data from the IRI database based on specified parameters.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$download_from_IRI(
  source,
  data,
  path = tempdir(),
  min_lon,
  max_lon,
  min_lat,
  max_lat,
  min_date,
  max_date,
  name,
  download_type = "Point",
  import = TRUE,
  internal_import = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{source}}{The source from which to download data.}

\item{\code{data}}{The specific data to download.}

\item{\code{path}}{The directory path for saving the downloaded file.}

\item{\code{min_lon}}{Minimum longitude for area selection.}

\item{\code{max_lon}}{Maximum longitude for area selection.}

\item{\code{min_lat}}{Minimum latitude for area selection.}

\item{\code{max_lat}}{Maximum latitude for area selection.}

\item{\code{min_date}}{Minimum date for the data.}

\item{\code{max_date}}{Maximum date for the data.}

\item{\code{name}}{The name to assign to the imported data.}

\item{\code{download_type}}{The type of download (Point or Area).}

\item{\code{import}}{Boolean indicating whether to import the downloaded data into the databook.}

\item{\code{internal_import}}{A boolean indicating whether to import to databook or not}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-download_from_IRI_multiple"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-download_from_IRI_multiple}{}}}
\subsection{Method \code{download_from_IRI_multiple()}}{
Download CHIRPS Data for Multiple Locations via IRI
This function maps multiple geographical points to the CHIRPS data grid and downloads corresponding climate data
(e.g., precipitation) for the specified date ranges using the IRI data interface. It also imports the result
into the \code{data_book} if desired.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$download_from_IRI_multiple(
  data_frame,
  id_var,
  data = "daily_improved_global_0p05_prcp",
  source = "UCSB_CHIRPS",
  path = tempdir(),
  min_lon,
  min_lat,
  min_date,
  max_date,
  name = "ucsb chirps"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_frame}}{A data frame containing the locations and date ranges for each observation.}

\item{\code{id_var}}{A string giving the name of the column in \code{data_frame} containing unique identifiers for each location.}

\item{\code{data}}{The CHIRPS dataset to download. Default is \code{"daily_improved_global_0p05_prcp"}.}

\item{\code{source}}{The IRI source for the dataset. Default is \code{"UCSB_CHIRPS"}.}

\item{\code{path}}{The directory path to store downloaded files. Defaults to \code{tempdir()}.}

\item{\code{min_lon}}{A string specifying the column name in \code{data_frame} for minimum longitude.}

\item{\code{min_lat}}{A string specifying the column name in \code{data_frame} for minimum latitude.}

\item{\code{min_date}}{A string specifying the column name in \code{data_frame} for the minimum date to start downloading.}

\item{\code{max_date}}{A string specifying the column name in \code{data_frame} for the maximum date to end downloading.}

\item{\code{name}}{A name for the dataset being downloaded. Default is \code{"ucsb chirps"}.}

\item{\code{download_type}}{Download type for IRI. Typically \code{"Point"}. Default is \code{"Point"}.}

\item{\code{import}}{Logical. If \code{TRUE}, the transformed data is returned and optionally imported into \code{data_book}. Default is \code{TRUE}.}

\item{\code{internal_import}}{Logical. If \code{TRUE}, downloads are handled internally by \code{data_book}. Default is \code{FALSE}.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
The function does the following:
\itemize{
\item Maps each point in the input \code{data_frame} to its nearest CHIRPS grid cell.
\item Groups data by grid cell and calculates the earliest and latest required dates across all points in each cell.
\item Downloads CHIRPS data from IRI for each unique grid cell and date range.
\item Joins the downloaded data back to the original IDs.
}
}

\subsection{Returns}{
A data frame containing the downloaded CHIRPS data for all requested grid points,
matched to their original identifiers.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-patch_climate_element"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-patch_climate_element}{}}}
\subsection{Method \code{patch_climate_element()}}{
Patch a climate element in the specified data.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$patch_climate_element(
  data_name,
  date_col_name = "",
  var = "",
  vars = c(),
  max_mean_bias = NA,
  max_stdev_bias = NA,
  time_interval = "month",
  column_name,
  station_col_name = station_col_name
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data to patch.}

\item{\code{date_col_name}}{The name of the date column.}

\item{\code{var}}{The variable to patch.}

\item{\code{vars}}{A vector of variables to patch.}

\item{\code{max_mean_bias}}{Maximum allowable mean bias for the patching.}

\item{\code{max_stdev_bias}}{Maximum allowable standard deviation bias for the patching.}

\item{\code{time_interval}}{The time interval for the patching (default is "month").}

\item{\code{column_name}}{The name of the column to patch.}

\item{\code{station_col_name}}{The name of the station column.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-visualize_element_na"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-visualize_element_na}{}}}
\subsection{Method \code{visualize_element_na()}}{
Visualize the missing values in a specified element within a dataset.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$visualize_element_na(
  data_name,
  element_col_name,
  element_col_name_imputed,
  station_col_name,
  x_axis_labels_col_name,
  ncol = 2,
  type = "distribution",
  xlab = NULL,
  ylab = NULL,
  legend = TRUE,
  orientation = "horizontal",
  interval_size = interval_size,
  x_with_truth = NULL,
  measure = "percent"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{element_col_name}}{The name of the column containing the element of interest.}

\item{\code{element_col_name_imputed}}{The name of the column for imputed values of the element.}

\item{\code{station_col_name}}{The name of the column representing the station.}

\item{\code{x_axis_labels_col_name}}{The name of the column for x-axis labels.}

\item{\code{ncol}}{The number of columns for visualization layout.}

\item{\code{type}}{The type of visualization (e.g., distribution).}

\item{\code{xlab}}{Label for the x-axis.}

\item{\code{ylab}}{Label for the y-axis.}

\item{\code{legend}}{Logical indicating whether to include a legend.}

\item{\code{orientation}}{Orientation of the plot (e.g., horizontal).}

\item{\code{interval_size}}{Size of intervals for the visualization.}

\item{\code{x_with_truth}}{Optional truth values for comparison.}

\item{\code{measure}}{Measurement type (e.g., percent).}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_data_entry_data"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_data_entry_data}{}}}
\subsection{Method \code{get_data_entry_data()}}{
Retrieve data entry for specified elements within a date range.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_data_entry_data(
  data_name,
  station,
  date,
  elements,
  view_variables,
  station_name,
  type,
  start_date,
  end_date
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{station}}{The station of interest.}

\item{\code{date}}{The date of interest.}

\item{\code{elements}}{The elements to retrieve.}

\item{\code{view_variables}}{Variables to view in the output.}

\item{\code{station_name}}{The name of the station.}

\item{\code{type}}{The type of data to retrieve.}

\item{\code{start_date}}{The start date of the data range.}

\item{\code{end_date}}{The end date of the data range.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-save_data_entry_data"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-save_data_entry_data}{}}}
\subsection{Method \code{save_data_entry_data()}}{
Save new data entries and associated comments to the dataset.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$save_data_entry_data(
  data_name,
  new_data,
  rows_changed,
  comments_list = list(),
  add_flags = FALSE,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{new_data}}{The new data to save.}

\item{\code{rows_changed}}{The rows that have been modified.}

\item{\code{comments_list}}{A list of comments for changes made.}

\item{\code{add_flags}}{Logical indicating whether to add flags.}

\item{\code{...}}{Additional arguments passed to other methods.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-import_from_cds"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-import_from_cds}{}}}
\subsection{Method \code{import_from_cds()}}{
Import data from CDS (Climate Data Store) for specified parameters.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$import_from_cds(
  user,
  dataset,
  elements,
  start_date,
  end_date,
  lon,
  lat,
  path,
  import = FALSE,
  new_name
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{user}}{The user credentials for accessing CDS.}

\item{\code{dataset}}{The dataset to import.}

\item{\code{elements}}{The elements to retrieve from the dataset.}

\item{\code{start_date}}{The starting date for the data.}

\item{\code{end_date}}{The ending date for the data.}

\item{\code{lon}}{Longitude for area definition.}

\item{\code{lat}}{Latitude for area definition.}

\item{\code{path}}{The path to save the imported data.}

\item{\code{import}}{Logical indicating whether to import the data.}

\item{\code{new_name}}{Optional new name for the imported data.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-add_flag_fields"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-add_flag_fields}{}}}
\subsection{Method \code{add_flag_fields()}}{
Add flag fields to a specified dataset.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$add_flag_fields(data_name, col_names, key_column_names)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{col_names}}{The names of the columns to flag.}

\item{\code{key_column_names}}{The names of key columns.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-remove_empty"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-remove_empty}{}}}
\subsection{Method \code{remove_empty()}}{
Remove empty rows or columns from a dataset.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$remove_empty(data_name, which = c("rows", "cols"))}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{which}}{The option to remove either "rows" or "cols".}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-replace_values_with_NA"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-replace_values_with_NA}{}}}
\subsection{Method \code{replace_values_with_NA()}}{
Replace specified values with NA in a dataset.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$replace_values_with_NA(data_name, row_index, column_index)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{row_index}}{The index of the row to modify.}

\item{\code{column_index}}{The index of the column to modify.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-has_labels"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-has_labels}{}}}
\subsection{Method \code{has_labels()}}{
Check if specified columns in a dataset have labels.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$has_labels(data_name, col_names)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{col_names}}{The names of the columns to check.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-wrap_or_unwrap_data"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-wrap_or_unwrap_data}{}}}
\subsection{Method \code{wrap_or_unwrap_data()}}{
Wrap or unwrap data in a specified column of a dataset.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$wrap_or_unwrap_data(
  data_name,
  col_name,
  column_data,
  width,
  wrap = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{col_name}}{The name of the column to modify.}

\item{\code{column_data}}{The data in the column.}

\item{\code{width}}{The width for wrapping.}

\item{\code{wrap}}{Logical indicating whether to wrap or unwrap data.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-anova_tables2"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-anova_tables2}{}}}
\subsection{Method \code{anova_tables2()}}{
Generate an ANOVA table for specified predictor and response variables.
Optionally includes totals, significance levels, and means.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$anova_tables2(
  data_name,
  x_col_names,
  y_col_name,
  total = TRUE,
  signif.stars = FALSE,
  sign_level = FALSE,
  means = FALSE,
  interaction = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data frame to get the columns from.}

\item{\code{x_col_names}}{Character vector, the names of predictor variables.}

\item{\code{y_col_name}}{Character, the name of the response variable.}

\item{\code{total}}{Logical, whether to include a total row in the ANOVA table. Defaults to FALSE.}

\item{\code{signif.stars}}{Logical, whether to include significance stars. Defaults to FALSE.}

\item{\code{sign_level}}{Logical, whether to display significance levels. Defaults to FALSE.}

\item{\code{means}}{Logical, whether to include means or model coefficients. Defaults to FALSE.}

\item{\code{interaction}}{Logical, whether to include interaction terms for predictors. Defaults to FALSE.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A formatted ANOVA table with optional additional sections.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-display_daily_table"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-display_daily_table}{}}}
\subsection{Method \code{display_daily_table()}}{
Display a daily summary table for a specified climatic data element.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$display_daily_table(
  data_name,
  climatic_element,
  date_col = date_col,
  year_col = year_col,
  station_col = station_col,
  Misscode,
  Tracecode,
  Zerocode,
  monstats = c("min", "mean", "median", "max", "IQR", "sum")
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{A character string representing the name of the dataset.}

\item{\code{climatic_element}}{A vector specifying the climatic elements to be displayed (e.g., temperature, rainfall).}

\item{\code{date_col}}{The name of the column containing date information. Default is \code{date_col}.}

\item{\code{year_col}}{The name of the column containing year information. Default is \code{year_col}.}

\item{\code{station_col}}{The name of the column containing station information. If missing, assigns the \code{Station} column from metadata.}

\item{\code{Misscode}}{A value representing missing data in the dataset.}

\item{\code{Tracecode}}{A value representing trace amounts of the climatic element.}

\item{\code{Zerocode}}{A value representing zero values for the climatic element.}

\item{\code{monstats}}{A vector of summary statistics to calculate for monthly data. Options include \code{"min"}, \code{"mean"}, \code{"median"}, \code{"max"}, \code{"IQR"}, and \code{"sum"}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A data frame displaying the daily summary table for the specified climatic element.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-add_comment"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-add_comment}{}}}
\subsection{Method \code{add_comment()}}{
Adds a new \code{instat_comment} object to the data sheet if the key is defined and valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$add_comment(new_comment)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{new_comment}}{An \code{instat_comment} object to be added to the data sheet.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
This function first checks if a key is defined and valid for the data sheet.
It also verifies that \code{new_comment} is an \code{instat_comment} object and that the key columns in \code{new_comment} are valid keys in the data frame.
If the comment ID already exists, a warning is issued and the existing comment is replaced.
}

\subsection{Returns}{
None. This function modifies the data sheet by adding or replacing a comment.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-delete_comment"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-delete_comment}{}}}
\subsection{Method \code{delete_comment()}}{
Deletes a comment from the data sheet based on the comment ID.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$delete_comment(comment_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{comment_id}}{A character string representing the ID of the comment to be deleted.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
If the specified comment ID does not exist in the data sheet, an error is thrown.
}

\subsection{Returns}{
None. This function modifies the data sheet by removing the specified comment.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_comment_ids"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_comment_ids}{}}}
\subsection{Method \code{get_comment_ids()}}{
Retrieves all comment IDs currently stored in the data sheet.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_comment_ids()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A character vector containing the IDs of all comments in the data sheet.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_comments_as_data_frame"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_comments_as_data_frame}{}}}
\subsection{Method \code{get_comments_as_data_frame()}}{
Converts all comments in the data sheet to a data frame format for easier inspection and analysis.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_comments_as_data_frame()}\if{html}{\out{</div>}}
}

\subsection{Details}{
This function collects various fields from each comment and returns them in a data frame.
The number of replies and attributes for each comment is also included.
Currently, nested comments (replies) and additional attributes are not displayed in detail.
}

\subsection{Returns}{
A data frame with columns representing comment ID, key values, column, value, type, comment text, label, calculation, timestamp, number of replies, resolved status, active status, and number of attributes.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-define_as_options_by_context"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-define_as_options_by_context}{}}}
\subsection{Method \code{define_as_options_by_context()}}{
Define options by context for a specified dataset.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$define_as_options_by_context(
  data_name,
  obyc_types = NULL,
  key_columns = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{obyc_types}}{A named list of options by context types.}

\item{\code{key_columns}}{A vector of key columns relevant to the dataset.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-update_links_rename_data_frame"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-update_links_rename_data_frame}{}}}
\subsection{Method \code{update_links_rename_data_frame()}}{
This function updates all links that reference a data frame with a specified old name,
renaming it to a new name.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$update_links_rename_data_frame(old_data_name, new_data_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{old_data_name}}{The current name of the data frame in links}

\item{\code{new_data_name}}{The new name to replace the old data frame name in links
Update links to rename a column}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-update_links_rename_column"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-update_links_rename_column}{}}}
\subsection{Method \code{update_links_rename_column()}}{
This function updates all links referencing a column in a data frame with a specified old column name,
renaming it to a new column name.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$update_links_rename_column(
  data_name,
  old_column_name,
  new_column_name
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data frame containing the column}

\item{\code{old_column_name}}{The current name of the column in links}

\item{\code{new_column_name}}{The new name to replace the old column name in links}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-add_link"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-add_link}{}}}
\subsection{Method \code{add_link()}}{
This function adds a new link between two data frames with the specified link pairs and type.
It will check if the link already exists or if the link columns are keys.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$add_link(from_data_frame, to_data_frame, link_pairs, type, link_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{from_data_frame}}{The name of the originating data frame in the link}

\item{\code{to_data_frame}}{The name of the target data frame in the link}

\item{\code{link_pairs}}{A named vector or list representing pairs of columns to link between data frames}

\item{\code{type}}{The type of the link (e.g., 'one-to-one', 'many-to-one')}

\item{\code{link_name}}{Optional; a name for the link. If not provided, a default name is assigned}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_link_names"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_link_names}{}}}
\subsection{Method \code{get_link_names()}}{
Retrieves the names of all links involving a specified data frame, with options to include or exclude specific types.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_link_names(
  data_name,
  include_overall = TRUE,
  include,
  exclude,
  include_empty = FALSE,
  as_list = FALSE,
  excluded_items = c(),
  exclude_self_links = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data frame}

\item{\code{include_overall}}{Boolean; if TRUE, includes overall links}

\item{\code{include}}{Optional vector of link names to include}

\item{\code{exclude}}{Optional vector of link names to exclude}

\item{\code{include_empty}}{Boolean; if TRUE, includes links with no associated data}

\item{\code{as_list}}{Boolean; if TRUE, returns a list format}

\item{\code{excluded_items}}{List of excluded items}

\item{\code{exclude_self_links}}{Boolean; if TRUE, excludes links to self}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-link_exists_from"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-link_exists_from}{}}}
\subsection{Method \code{link_exists_from()}}{
Verifies if a link exists from a specific data frame with given link pairs.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$link_exists_from(curr_data_frame, link_pairs)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{curr_data_frame}}{The name of the originating data frame}

\item{\code{link_pairs}}{The link pairs to check for existence}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-link_exists_between"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-link_exists_between}{}}}
\subsection{Method \code{link_exists_between()}}{
This function checks if there is an ordered or unordered link between two specified data frames.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$link_exists_between(from_data_frame, to_data_frame, ordered = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{from_data_frame}}{The name of the originating data frame}

\item{\code{to_data_frame}}{The name of the target data frame}

\item{\code{ordered}}{Boolean; if TRUE, checks for an ordered link}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_link_between"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_link_between}{}}}
\subsection{Method \code{get_link_between()}}{
Retrieves the link definition between two specified data frames.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_link_between(from_data_frame, to_data_frame, ordered = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{from_data_frame}}{The name of the originating data frame}

\item{\code{to_data_frame}}{The name of the target data frame}

\item{\code{ordered}}{Boolean; if TRUE, retrieves an ordered link}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-link_exists_from_by_to"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-link_exists_from_by_to}{}}}
\subsection{Method \code{link_exists_from_by_to()}}{
This function checks if a link exists from \code{first_data_frame} to \code{second_data_frame}
using the specified \code{link_pairs} columns.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$link_exists_from_by_to(
  first_data_frame,
  link_pairs,
  second_data_frame
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{first_data_frame}}{Name of the starting data frame.}

\item{\code{link_pairs}}{Named vector of columns used in the link.}

\item{\code{second_data_frame}}{Name of the target data frame.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Boolean indicating whether the specified link exists.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_linked_to_data_name"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_linked_to_data_name}{}}}
\subsection{Method \code{get_linked_to_data_name()}}{
This function returns the names of data frames linked to \code{from_data_frame}.
Optionally, includes \code{from_data_frame} itself in the output if \code{include_self} is TRUE.
Filters results by \code{link_cols}, if provided.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_linked_to_data_name(
  from_data_frame,
  link_cols = c(),
  include_self = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{from_data_frame}}{Name of the source data frame.}

\item{\code{link_cols}}{Optional column names to filter links.}

\item{\code{include_self}}{Boolean indicating if \code{from_data_frame} should be included.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A character vector of data frame names.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_linked_to_definition"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_linked_to_definition}{}}}
\subsection{Method \code{get_linked_to_definition()}}{
This function returns a list of the target data frame and matched columns.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_linked_to_definition(from_data_frame, link_pairs)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{from_data_frame}}{Name of the source data frame.}

\item{\code{link_pairs}}{Named vector of link columns.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
List with the target data frame name and matching column names.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_possible_linked_to_definition"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_possible_linked_to_definition}{}}}
\subsection{Method \code{get_possible_linked_to_definition()}}{
This function attempts to find a linked data frame that matches \code{link_pairs}.
Recursively explores links between multiple data frames.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_possible_linked_to_definition(from_data_frame, link_pairs)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{from_data_frame}}{Name of the starting data frame.}

\item{\code{link_pairs}}{Named vector of columns used in the link.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
List with the name and columns of a matching linked data frame, or an empty list.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_equivalent_columns"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_equivalent_columns}{}}}
\subsection{Method \code{get_equivalent_columns()}}{
This function returns columns in \code{to_data_name} equivalent to \code{columns} in \code{from_data_name}.
Recursively searches links between multiple data frames.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_equivalent_columns(from_data_name, columns, to_data_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{from_data_name}}{Name of the source data frame.}

\item{\code{columns}}{Columns to be matched.}

\item{\code{to_data_name}}{Name of the target data frame.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character vector of equivalent column names in \code{to_data_name}, or an empty vector.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-link_between_containing"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-link_between_containing}{}}}
\subsection{Method \code{link_between_containing()}}{
This function returns columns in \code{to_data_frame} corresponding to \code{containing_columns} in \code{from_data_frame}
if a link exists between them.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$link_between_containing(
  from_data_frame,
  containing_columns,
  to_data_frame
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{from_data_frame}}{Name of the source data frame.}

\item{\code{containing_columns}}{Columns to search for in the link.}

\item{\code{to_data_frame}}{Name of the target data frame.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character vector of columns in \code{to_data_frame} if a matching link is found, otherwise an empty vector.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-view_link"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-view_link}{}}}
\subsection{Method \code{view_link()}}{
Displays the details of a specified link.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$view_link(link_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{link_name}}{The name of the link to view}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-apply_calculation"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-apply_calculation}{}}}
\subsection{Method \code{apply_calculation()}}{
This method applies a given calculation to the data stored in the \code{DataBook} object.
It supports various calculation types (e.g., "summary") and includes options for storing
and returning results.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$apply_calculation(calc)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{calc}}{A calculation object specifying the type of calculation and its parameters.
For a "summary" calculation, parameters should include:
- \code{data_name}: The name of the data object to apply the calculation to.
- \code{columns_to_summarise}: Columns to include in the summary.
- \code{summaries}: The summary operations to perform.
- \code{store_results}: Whether to store the results in the \code{DataBook}.
- \code{return_output}: Whether to return the summary output.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
If \code{return_output = TRUE}, returns the calculation results as a data frame; otherwise,
returns \code{NULL}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-save_calculation"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-save_calculation}{}}}
\subsection{Method \code{save_calculation()}}{
This method saves a calculation to a specific data frame within the \code{DataBook} object.
The calculation is stored in the designated data frame's calculation registry for
future reference and reuse.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$save_calculation(end_data_frame, calc)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{end_data_frame}}{A string specifying the name of the data frame where the calculation
should be saved.}

\item{\code{calc}}{A calculation object or list that defines the calculation to be saved.
This object should include relevant parameters and metadata for the calculation.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
\itemize{
\item This method retrieves the \code{end_data_frame} from the \code{DataBook} object and invokes its
\code{save_calculation} method to store the calculation.
\item The \code{calc} object typically includes details such as its \code{name}, \code{type}, and any parameters
or dependencies required to perform the calculation.
}
}

\subsection{Returns}{
None. The method performs the operation in-place, saving the calculation to the
specified data frame.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-apply_instat_calculation"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-apply_instat_calculation}{}}}
\subsection{Method \code{apply_instat_calculation()}}{
This method performs a calculation or series of calculations (including sub-calculations) on data
within the \code{DataBook} object. It supports recursive calls for managing dependencies between
manipulations and sub-calculations.
This method is called recursively, and it would not be called by a user, another function would always handle the output and display
results to the user (usually only the $data part of the list)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$apply_instat_calculation(
  calc,
  curr_data_list,
  previous_manipulations = list(),
  param_list = list()
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{calc}}{A calculation object}

\item{\code{curr_data_list}}{A list of data objects currently being used. Optional.}

\item{\code{previous_manipulations}}{A list of previously applied manipulations, used recursively. Default is \code{list()}.}

\item{\code{param_list}}{A list of additional parameters for the calculation. Default is \code{list()}.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
\itemize{
\item \strong{Manipulations}: Applied sequentially, with the output of one manipulation passed to the next.
\item \strong{Sub-Calculations}: Performed independently, with their outputs combined or merged as needed.
\item \strong{Recursive Behavior}: The method is called recursively for handling dependencies and grouping.
}
}

\subsection{Returns}{
A list with four elements:
\itemize{
\item \verb{$data}: A data frame containing the output from the calculation, usually not just the output but also other columns at the same "level"
\item \verb{$link}: A link used to determine which data frame the output should be saved in.
\item \verb{$has_summary}: Logical, whether a summary was performed.
\item \verb{$has_filter}: Logical, whether a filter was applied.
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-run_instat_calculation"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-run_instat_calculation}{}}}
\subsection{Method \code{run_instat_calculation()}}{
This method runs a specified calculation using \code{apply_instat_calculation} and
displays the results if required. It serves as the primary interface for
triggering calculations within the \code{DataBook}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$run_instat_calculation(calc, display = TRUE, param_list = list())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{calc}}{A calculation object to be applied.}

\item{\code{display}}{Logical, whether to display the calculation output. Default is \code{TRUE}.}

\item{\code{param_list}}{A list of parameters to pass to the calculation. Default is \code{list()}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The \code{data} component of the calculation result if \code{display = TRUE}, otherwise \code{NULL}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_corresponding_link_columns"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_corresponding_link_columns}{}}}
\subsection{Method \code{get_corresponding_link_columns()}}{
This function identifies corresponding link columns between two data frames
within the \code{DataBook} object. It checks for existing links and maps column
names between the two data frames based on their relationship.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_corresponding_link_columns(
  first_data_frame_name,
  first_data_frame_columns,
  second_data_frame_name
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{first_data_frame_name}}{A string specifying the name of the first data frame.}

\item{\code{first_data_frame_columns}}{A vector of column names from the first data frame
to be mapped.}

\item{\code{second_data_frame_name}}{A string specifying the name of the second data frame.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
\itemize{
\item If a direct link exists between the two data frames, the corresponding columns
are determined based on the \code{link_columns} of the existing link.
\item If no direct link exists, it defaults to a one-to-one mapping of the input columns
(\code{first_data_frame_columns}) in the first data frame.
}
}

\subsection{Returns}{
A named vector where the names represent the columns in the first data frame
and the values represent the corresponding columns in the second data frame.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_link_columns_from_data_frames"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_link_columns_from_data_frames}{}}}
\subsection{Method \code{get_link_columns_from_data_frames()}}{
This function finds a link between two data frames within the \code{DataBook} object and
returns the corresponding columns to use for linking. It ensures the link is valid
by checking that the columns exist in both data frames.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_link_columns_from_data_frames(
  first_data_frame_name,
  first_data_frame_columns,
  second_data_frame_name,
  second_data_frame_columns
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{first_data_frame_name}}{A string specifying the name of the first data frame.}

\item{\code{first_data_frame_columns}}{A vector of column names from the first data frame to
be linked.}

\item{\code{second_data_frame_name}}{A string specifying the name of the second data frame.}

\item{\code{second_data_frame_columns}}{A vector of column names from the second data frame to
be linked.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
\itemize{
\item If a direct link exists between the data frames, the function checks for valid \code{link_columns}
in the \code{existing_link} object.
\item A link is established if all columns in the specified \code{link_columns} exist in their
respective data frames.
\item If no valid link is found, an empty vector is returned.
}
}

\subsection{Returns}{
A named vector where the names represent the columns in the first data frame
and the values represent the corresponding columns in the second data frame.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-save_calc_output"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-save_calc_output}{}}}
\subsection{Method \code{save_calc_output()}}{
This method saves the output of a calculation to the appropriate data frame
within the \code{DataBook} object. It manages links and metadata associated with
the calculation.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$save_calc_output(calc, curr_data_list, previous_manipulations)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{calc}}{The calculation object.}

\item{\code{curr_data_list}}{The list of data objects containing the calculation output.}

\item{\code{previous_manipulations}}{A list of previous manipulations applied to the data.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
\itemize{
\item If the output data has a summary or filter applied, appropriate links are created or updated.
\item Metadata is added to indicate that the column or data frame is the result of a calculation.
\item Dependencies between columns are updated based on the calculation.
}
}

\subsection{Returns}{
None.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-append_summaries_to_data_object"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-append_summaries_to_data_object}{}}}
\subsection{Method \code{append_summaries_to_data_object()}}{
This method appends the results of a summary calculation to a data object
in the \code{DataBook}. If a corresponding summary data object exists, the method
merges the new summary into it. Otherwise, it creates a new summary data object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$append_summaries_to_data_object(
  out,
  data_name,
  columns_to_summarise,
  summaries,
  factors = c(),
  summary_name,
  calc,
  calc_name = ""
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{out}}{A data frame containing the summary calculation results.}

\item{\code{data_name}}{A string specifying the name of the data object to which the summaries relate.}

\item{\code{columns_to_summarise}}{A character vector of columns included in the summary.}

\item{\code{summaries}}{A character vector of summary operations performed (e.g., \code{"mean"}, \code{"sum"}).}

\item{\code{factors}}{A character vector of grouping factors used in the summary. Default is \code{c()}.}

\item{\code{summary_name}}{A string specifying the name of the summary data object. Default is generated dynamically.}

\item{\code{calc}}{The calculation object containing metadata about the calculation.}

\item{\code{calc_name}}{Optional. The name of the calculation. Default is an empty string.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
\itemize{
\item If a summary data object with the specified \code{factors} already exists, this method merges the new summary into it.
\item If no such data object exists, it creates a new one and links it to the original data object via the specified \code{factors}.
\item Metadata is updated to track dependencies and indicate calculated columns.
}
}

\subsection{Returns}{
None. The operation is performed in place.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-calculate_summary"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-calculate_summary}{}}}
\subsection{Method \code{calculate_summary()}}{
Computes summary statistics for a dataset based on specified columns, summaries, and grouping factors.
Supports flexible percentage calculations, handling of missing values, and result storage.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$calculate_summary(
  data_name,
  columns_to_summarise = NULL,
  summaries,
  factors = c(),
  store_results = TRUE,
  drop = TRUE,
  return_output = FALSE,
  summary_name = NA,
  result_names = NULL,
  percentage_type = "none",
  perc_total_columns = NULL,
  perc_total_factors = c(),
  perc_total_filter = NULL,
  perc_decimal = FALSE,
  perc_return_all = FALSE,
  include_counts_with_percentage = FALSE,
  silent = FALSE,
  additional_filter,
  original_level = FALSE,
  signif_fig = 2,
  sep = "_",
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{A character string representing the name of the dataset to summarize.}

\item{\code{columns_to_summarise}}{Optional. A character vector of column names to summarize. Defaults to \code{NULL}.}

\item{\code{summaries}}{A vector of summary functions to apply to the data.}

\item{\code{factors}}{A character vector of factor column names for grouping. Defaults to an empty vector.}

\item{\code{store_results}}{Logical. If \code{TRUE}, stores intermediate results. Defaults to \code{TRUE}.}

\item{\code{drop}}{Logical. If \code{TRUE}, drops unused factor levels. Defaults to \code{TRUE}.}

\item{\code{return_output}}{Logical. If \code{TRUE}, returns the summary output. Defaults to \code{FALSE}.}

\item{\code{summary_name}}{A character string for naming the summary. Defaults to \code{NA}.}

\item{\code{result_names}}{Optional. A character vector for naming summary results. Defaults to \code{NULL}.}

\item{\code{percentage_type}}{Character. Type of percentages to calculate ("none", "factors", "columns", "filter"). Defaults to \code{"none"}.}

\item{\code{perc_total_columns}}{Optional. Columns to use for total percentage calculations. Defaults to \code{NULL}.}

\item{\code{perc_total_factors}}{A character vector of factors to use for total percentage calculations. Defaults to an empty vector.}

\item{\code{perc_total_filter}}{Optional. A filter condition for percentage calculations. Defaults to \code{NULL}.}

\item{\code{perc_decimal}}{Logical. If \code{TRUE}, displays percentages in decimal format. Defaults to \code{FALSE}.}

\item{\code{perc_return_all}}{Logical. If \code{TRUE}, returns all percentage-related columns. Defaults to \code{FALSE}.}

\item{\code{include_counts_with_percentage}}{Logical. If \code{TRUE}, includes counts alongside percentages. Defaults to \code{FALSE}.}

\item{\code{silent}}{Logical. If \code{TRUE}, suppresses warnings. Defaults to \code{FALSE}.}

\item{\code{additional_filter}}{Optional. Additional filtering conditions for the calculation.}

\item{\code{original_level}}{Logical. If \code{TRUE}, uses the original level for calculations. Defaults to \code{FALSE}.}

\item{\code{signif_fig}}{Numeric. Number of significant figures for rounding numeric values. Defaults to \code{2}.}

\item{\code{sep}}{Character. Separator used in result names. Defaults to \code{"_"}.}

\item{\code{...}}{Additional arguments passed to other methods.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A data frame containing the calculated summary statistics.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-summary"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-summary}{}}}
\subsection{Method \code{summary()}}{
Computes summary statistics for specified columns in a dataset, optionally grouped by factors.
Handles multiple summaries, data types, and error conditions gracefully.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$summary(
  data_name,
  columns_to_summarise,
  summaries,
  factors = c(),
  store_results = FALSE,
  drop = FALSE,
  return_output = FALSE,
  summary_name = NA,
  add_cols = c(),
  filter_names = c(),
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{A character string representing the name of the dataset to summarize.}

\item{\code{columns_to_summarise}}{A character vector of column names to summarize.}

\item{\code{summaries}}{A vector of summary function names to apply to the columns.}

\item{\code{factors}}{A character vector of factor column names for grouping. Defaults to an empty vector.}

\item{\code{store_results}}{Logical. If \code{TRUE}, stores the summary results. Defaults to \code{FALSE}.}

\item{\code{drop}}{Logical. If \code{TRUE}, drops unused factor levels. Defaults to \code{FALSE}.}

\item{\code{return_output}}{Logical. If \code{TRUE}, returns the summary output. Defaults to \code{FALSE}.}

\item{\code{summary_name}}{Optional. A character string to name the summary. Defaults to \code{NA}.}

\item{\code{add_cols}}{Optional. Additional columns to include in the output. Defaults to an empty vector.}

\item{\code{filter_names}}{A character vector of filter names to apply during the calculation. Defaults to an empty vector.}

\item{\code{...}}{Additional arguments passed to other methods or functions.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A data frame or list containing the computed summary statistics. If no grouping factors are provided, the result is a table with row names corresponding to the summary functions.
Convert Linked Variable to Matching Class

This function converts the variables in the linked "to data frame" to match the class of the corresponding variables in the "from data frame".
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-convert_linked_variable"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-convert_linked_variable}{}}}
\subsection{Method \code{convert_linked_variable()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$convert_linked_variable(from_data_frame, link_cols)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{from_data_frame}}{A character string specifying the name of the source data frame.}

\item{\code{link_cols}}{A character vector specifying the columns that define the link between the data frames.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
No explicit return value. The function modifies the linked data frame in place.
Remove Unused Station-Year Combinations

This function removes station-year combinations that are not used in the linked data.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-remove_unused_station_year_combinations"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-remove_unused_station_year_combinations}{}}}
\subsection{Method \code{remove_unused_station_year_combinations()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$remove_unused_station_year_combinations(data_name, year, station)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{A character string specifying the name of the data frame.}

\item{\code{year}}{A character string specifying the column name representing the year.}

\item{\code{station}}{A character string specifying the column name representing the station.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
No explicit return value. The function modifies the linked data frame in place.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_gtcol_names"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_gtcol_names}{}}}
\subsection{Method \code{get_gtcol_names()}}{
Retrieve the GT column names of a table in a data frame.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_gtcol_names(data_name, table_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data frame}

\item{\code{table_name}}{The name of the table}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_gtrow_names"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_gtrow_names}{}}}
\subsection{Method \code{get_gtrow_names()}}{
Retrieve the GT row names of a table in a data frame.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_gtrow_names(data_name, table_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data frame}

\item{\code{table_name}}{The name of the table}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-summary_table"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-summary_table}{}}}
\subsection{Method \code{summary_table()}}{
Creates a summary table for a dataset based on specified columns, summaries, and factors.
Provides options for margins, percentages, and various customization settings.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$summary_table(
  data_name,
  columns_to_summarise = NULL,
  summaries,
  factors = c(),
  store_table = FALSE,
  store_results = FALSE,
  drop = TRUE,
  na.rm = FALSE,
  summary_name = NA,
  include_margins = FALSE,
  margins = "outer",
  return_output = FALSE,
  treat_columns_as_factor = FALSE,
  page_by = NULL,
  signif_fig = 2,
  na_display = "",
  na_level_display = "NA",
  weights = NULL,
  caption = NULL,
  result_names = NULL,
  percentage_type = "none",
  perc_total_columns = NULL,
  perc_total_factors = c(),
  perc_total_filter = NULL,
  perc_decimal = FALSE,
  include_counts_with_percentage = FALSE,
  margin_name = "(All)",
  additional_filter,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{A character string representing the name of the dataset to summarize.}

\item{\code{columns_to_summarise}}{Optional. A character vector of column names to summarize. Defaults to \code{NULL}.}

\item{\code{summaries}}{A vector of summary functions to apply to the data.}

\item{\code{factors}}{A character vector of factor column names for grouping. Defaults to an empty vector.}

\item{\code{store_table}}{Logical. If \code{TRUE}, stores the resulting table in the data book. Defaults to \code{FALSE}.}

\item{\code{store_results}}{Logical. If \code{TRUE}, stores intermediate results. Defaults to \code{FALSE}.}

\item{\code{drop}}{Logical. If \code{TRUE}, drops unused factor levels. Defaults to \code{TRUE}.}

\item{\code{na.rm}}{Logical. If \code{TRUE}, removes missing values. Defaults to \code{FALSE}.}

\item{\code{summary_name}}{A character string for naming the summary. Defaults to \code{NA}.}

\item{\code{include_margins}}{Logical. If \code{TRUE}, includes margin summaries. Defaults to \code{FALSE}.}

\item{\code{margins}}{Character. Type of margins to include ("outer", "summary"). Defaults to \code{"outer"}.}

\item{\code{return_output}}{Logical. If \code{TRUE}, returns the summary output. Defaults to \code{FALSE}.}

\item{\code{treat_columns_as_factor}}{Logical. If \code{TRUE}, treats columns to summarize as factors. Defaults to \code{FALSE}.}

\item{\code{page_by}}{Optional. A character vector for paginating results. Defaults to \code{NULL}.}

\item{\code{signif_fig}}{Numeric. Number of significant figures for rounding numeric values. Defaults to \code{2}.}

\item{\code{na_display}}{Character. String to represent missing values in the output. Defaults to an empty string.}

\item{\code{na_level_display}}{Character. String to represent missing factor levels in the output. Must be non-empty.}

\item{\code{weights}}{Optional. A numeric vector of weights for weighted summaries. Defaults to \code{NULL}.}

\item{\code{caption}}{Optional. A character string for table captions. Defaults to \code{NULL}.}

\item{\code{result_names}}{Optional. A character vector for naming summary results. Defaults to \code{NULL}.}

\item{\code{percentage_type}}{Character. Type of percentages to calculate ("none", "row", "column", etc.). Defaults to \code{"none"}.}

\item{\code{perc_total_columns}}{Optional. Columns to use for total percentage calculations. Defaults to \code{NULL}.}

\item{\code{perc_total_factors}}{A character vector of factors to use for total percentage calculations. Defaults to an empty vector.}

\item{\code{perc_total_filter}}{Optional. A filter condition for percentage calculations. Defaults to \code{NULL}.}

\item{\code{perc_decimal}}{Logical. If \code{TRUE}, displays percentages in decimal format. Defaults to \code{FALSE}.}

\item{\code{include_counts_with_percentage}}{Logical. If \code{TRUE}, includes counts alongside percentages. Defaults to \code{FALSE}.}

\item{\code{margin_name}}{Character. Name for margin rows/columns in the output. Defaults to \code{"(All)"}.}

\item{\code{additional_filter}}{Optional. An additional filter for data summarization.}

\item{\code{...}}{Additional arguments passed to other methods.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A \code{tibble} containing the summarised data table.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-define_as_tricot"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-define_as_tricot}{}}}
\subsection{Method \code{define_as_tricot()}}{
Define a data table as tricot data.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$define_as_tricot(
  data_name,
  types,
  key_col_names,
  key_name,
  auto_selection = FALSE,
  output_data_levels = NULL,
  variety_cols = NULL,
  trait_cols = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{types}}{A vector specifying the types of tricot data.}

\item{\code{key_col_names}}{A vector of column names to be used as keys.}

\item{\code{key_name}}{The name of the key.}

\item{\code{auto_selection}}{Boolean to add a selection for the types containing more than one variable. \code{FALSE} by default.}

\item{\code{output_data_levels}}{Default \code{NULL}. If given, this is a data frame summarising datasets and their key columns,
typically produced by \code{summarise_data_levels()} or \code{create_tricot_datasets()}.}

\item{\code{variety_cols}}{Default \code{NULL}, optional character vector of variety columns for detection (only relevant if \code{output_data_levels} is not \code{NULL}).}

\item{\code{trait_cols}}{Default \code{NULL}, optional character vector of trait column names to assign at the
plot level. If \code{NULL}, traits are inferred from the dataset after loading (only relevant if \code{output_data_levels} is not \code{NULL}).}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
If \code{output_data_levels} is not \code{NULL}
\enumerate{
\item Detects tricot structure (options names, trait suffixes, rank set) using
\code{detect_tricot_structure()} on the ID-level dataset.
\item Calls \code{self$define_as_tricot()} for each dataset at the "id", "plot",
and "variety" levels, supplying the appropriate key columns and type mapping
(e.g. \verb{id=}, \verb{variety=}, \verb{traits=}).
}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_column_tricot_type"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_column_tricot_type}{}}}
\subsection{Method \code{get_column_tricot_type()}}{
Retrieve the tricot type attribute for a specific column in a given data object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_column_tricot_type(data_name, col_name, attr_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{Character, the name of the data object.}

\item{\code{col_name}}{Character, the name of the column.}

\item{\code{attr_name}}{Character, the name of the attribute to retrieve.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The value of the specified attribute, or NULL if not available.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-get_tricot_column_name"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-get_tricot_column_name}{}}}
\subsection{Method \code{get_tricot_column_name()}}{
Get the tricot column name from the specified data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$get_tricot_column_name(data_name, col_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data table.}

\item{\code{col_name}}{The name of the tricot column to retrieve.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-check_variety_data_level"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-check_variety_data_level}{}}}
\subsection{Method \code{check_variety_data_level()}}{
Check if the data is at the variety level
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$check_variety_data_level(data, col = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{A character string specifying the name of the dataset.}

\item{\code{col}}{Default NULL, name of a column to read in.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An integer indicating the outcome:
\itemize{
\item 0 - There is no variety variable that is Tricot-Defined in this data.
\item 1 - No key columns are defined in the dataset.
\item 2 - Only variety level data can be used for this data. This is data where there is a unique row for each variety given.
\item 3 - Success. The dataset is Tricot-defined and at the variety level.
\item 7 - Success. This data is at the plot level, but it can be used.
\item 8 - This data is at the plot level. Either use variety-level data, or use data where there is only one level of 'col' for each variety level.
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-check_ID_data_level"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-check_ID_data_level}{}}}
\subsection{Method \code{check_ID_data_level()}}{
Check if the data is at the ID level
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$check_ID_data_level(data)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{A character string specifying the name of the dataset.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An integer indicating the outcome:
\itemize{
\item 0 - There is no ID variable that is Tricot-Defined in this data.
\item 1 - No key columns are defined in the dataset.
\item 2 - Only ID level data can be used for this data. This is data where there is a unique row for each ID variable given.
\item 3 - Success. The dataset is Tricot-defined and at the ID level.
}
Additionally, a message is printed describing the result.
Summarise Data Levels for Multiple Datasets
#'
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-summarise_data_levels"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-summarise_data_levels}{}}}
\subsection{Method \code{summarise_data_levels()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$summarise_data_levels(
  data_list,
  id_cols = c("id", "participant_id", "participant_name", "ID"),
  variety_cols = c("variety", "varieties", "item", "items", "Genotype", "genotype"),
  trait_cols = c("trait", "traits"),
  positive_trait_suffixes = c("_pos", "_best"),
  negative_trait_suffixes = c("_neg", "_worst")
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_list}}{A named list of data frames to evaluate.}

\item{\code{id_cols}}{Character vector of possible names for ID columns.}

\item{\code{variety_cols}}{Character vector of possible names for variety columns.}

\item{\code{trait_cols}}{Character vector of possible names for trait columns.}

\item{\code{positive_trait_suffixes}}{Character vector of suffixes used for positive trait rankings (e.g., \code{"_pos"}, \code{"_best"}) for ID-level data only.}

\item{\code{negative_trait_suffixes}}{Character vector of suffixes used for negative trait rankings (e.g., \code{"_neg"}, \code{"_worst"}) for ID-level data only.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A tibble summarising the data level structure of each dataset. Columns include:
\describe{
\item{dataset}{The name of the dataset.}
\item{level}{The data level (e.g. \code{"id"}, \code{"plot"}).}
\item{id_col}{The column used as the ID (if detected).}
\item{variety_col}{The column used for varieties (if detected).}
\item{trait_col}{The column used for traits (if detected).}
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-create_tricot_datasets"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-create_tricot_datasets}{}}}
\subsection{Method \code{create_tricot_datasets()}}{
Create and Structure Tricot Data at Multiple Levels
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$create_tricot_datasets(
  output_data_levels,
  id_level_data = "",
  id_col = "id",
  data_trait_cols = NULL,
  carry_cols = NULL,
  traits = NULL,
  variety_cols = NULL,
  rank_values = NULL,
  prefix = NULL,
  good_suffixes = c("_pos", "_best"),
  bad_suffixes = c("_neg", "_worst"),
  na_candidates = c("Not observed", "Not scored", NA_character_)
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{output_data_levels}}{A tibble produced by \code{summarise_data_levels()}
describing available datasets and their detected levels. Must include at least one
dataset with \code{level == "id"}.}

\item{\code{id_level_data}}{Optional string naming a dataset to use as the ID level if none
are detected automatically. Defaults to \code{""}, in which case detection errors if
no ID-level dataset is found.}

\item{\code{id_col}}{Character name of the ID column. Only used when specifying \code{id_level_data}.}

\item{\code{data_trait_cols}}{Optional character vector of trait-indicator columns to pass
to \code{pivot_tricot()} when constructing plot data.}

\item{\code{carry_cols}}{Optional character vector of columns to carry through to the plot-level
pivoted data.}

\item{\code{traits}}{Deprecated. Use \code{data_trait_cols} instead.}

\item{\code{variety_cols}}{Character vector of variety columns (for \code{detect_tricot_structure()}).}

\item{\code{rank_values}}{Character vector of possible rank values (for \code{detect_tricot_structure()}).}

\item{\code{prefix}}{Optional string prefix for trait columns (for \code{detect_tricot_structure()}).}

\item{\code{good_suffixes}}{Character vector of suffixes indicating positive rankings
(e.g. \code{"_pos"}, \code{"_best"}).}

\item{\code{bad_suffixes}}{Character vector of suffixes indicating negative rankings
(e.g. \code{"_neg"}, \code{"_worst"}).}

\item{\code{na_candidates}}{Character vector of values treated as missing (e.g.
\code{c("Not observed", "Not scored", NA_character_)}). Only the first value is used.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
\enumerate{
\item Ensures exactly one dataset is assigned to each data level in
\code{output_data_levels}, allowing manual override via \code{id_level_data}.
\item Detects tricot structure (options, trait suffixes, rank levels) with
\code{detect_tricot_structure()} on the ID-level dataset.
\item Constructs or pivots plot-level data using \code{pivot_tricot()}, combining
ID-level and plot–trait data if provided.
\item Imports the new plot-level data into \code{self}, naming it \verb{<id_dataset>_plot}.
\item Summarises plot-level data by variety, creating a \verb{<plot_dataset>_by_variety} table.
\item Updates and returns \code{output_data_levels}, adding any newly created plot or variety
datasets and the list of detected trait names.
}
}

\subsection{Returns}{
A tibble mirroring \code{output_data_levels} with any new plot- and variety-level
dataset entries and a \code{trait_names} list-column of detected trait labels.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-import_SST"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-import_SST}{}}}
\subsection{Method \code{import_SST()}}{
Imports SST data and adds keys and links to the specified data tables.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$import_SST(dataset, data_from = 5, data_names = c())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dataset}}{The SST dataset.}

\item{\code{data_from}}{The source of the data. Default is 5.}

\item{\code{data_names}}{A vector of data table names.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
None
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataBook-clone"></a>}}
\if{latex}{\out{\hypertarget{method-DataBook-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataBook$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
